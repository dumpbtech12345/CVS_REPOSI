{
    "sourceFile": "app/Http/Controllers/WorkExperienceController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1732896346113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1732896346113,
            "name": "Commit-0",
            "content": "<?php\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\WorkExperience;\nuse Illuminate\\Http\\Request;\n\nclass WorkExperienceController extends Controller\n{\n    public function index()\n    {\n        $workExperiences = WorkExperience::with('personalInfo')->get();\n        return response()->json($workExperiences);\n    }\n\n    public function store(Request $request)\n    {\n        $validated = $request->validate([\n            'personal_info_id' => 'required|exists:personal_infos,id',\n            'job_title' => 'required|string|max:255',\n            'company_name' => 'required|string|max:255',\n            'location' => 'required|string|max:255',\n            'start_date' => 'required|date',\n            'end_date' => 'nullable|date|after_or_equal:start_date',\n            'responsibilities' => 'required|string',\n        ]);\n\n        $workExperience = WorkExperience::create($validated);\n\n        return response()->json(['message' => 'Work Experience created successfully', 'data' => $workExperience]);\n    }\n\n    public function show(WorkExperience $workExperience)\n    {\n        $workExperience->load('personalInfo');\n        return response()->json($workExperience);\n    }\n\n    public function update(Request $request, WorkExperience $workExperience)\n    {\n        $validated = $request->validate([\n            'job_title' => 'sometimes|required|string|max:255',\n            'company_name' => 'sometimes|required|string|max:255',\n            'location' => 'sometimes|required|string|max:255',\n            'start_date' => 'sometimes|required|date',\n            'end_date' => 'nullable|date|after_or_equal:start_date',\n            'responsibilities' => 'sometimes|required|string',\n        ]);\n\n        $workExperience->update($validated);\n\n        return response()->json(['message' => 'Work Experience updated successfully', 'data' => $workExperience]);\n    }\n\n    public function destroy(WorkExperience $workExperience)\n    {\n        $workExperience->delete();\n\n        return response()->json(['message' => 'Work Experience deleted successfully']);\n    }\n}"
        }
    ]
}