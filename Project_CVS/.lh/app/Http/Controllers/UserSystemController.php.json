{
    "sourceFile": "app/Http/Controllers/UserSystemController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 68,
            "patches": [
                {
                    "date": 1732855623437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732857471515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,19 +4,20 @@\n \n use App\\Models\\UserSystem;\n use Illuminate\\Http\\Request;\n use Illuminate\\Support\\Facades\\Hash;\n+use Illuminate\\Support\\Facades\\Session;\n \n class UserSystemController extends Controller\n {\n+    // Registration methods (unchanged)\n     public function create()\n     {\n-        return view('register'); // Load the registration view\n+        return view('register');\n     }\n \n     public function store(Request $request)\n     {\n-        // Validate input\n         $request->validate([\n             'firstname' => 'required|string|max:255',\n             'lastname' => 'required|string|max:255',\n             'username' => 'required|string|max:255|unique:user_system,username',\n@@ -24,17 +25,45 @@\n             'email' => 'required|email|max:255|unique:user_system,email',\n             'number' => 'required|string|max:15',\n         ]);\n \n-        // Create the user\n         UserSystem::create([\n             'firstname' => $request->firstname,\n             'lastname' => $request->lastname,\n             'username' => $request->username,\n-            'password' => Hash::make($request->password), // Hash the password\n+            'password' => Hash::make($request->password),\n             'email' => $request->email,\n             'number' => $request->number,\n         ]);\n \n-        return redirect()->back()->with('success', 'Registration successful!');\n+        return redirect()->route('user.create')->with('success', 'Registration successful!');\n     }\n+\n+    // Login methods\n+    public function loginForm()\n+    {\n+        return view('login');\n+    }\n+\n+    public function processLogin(Request $request)\n+    {\n+        $request->validate([\n+            'username' => 'required|string',\n+            'password' => 'required|string',\n+        ]);\n+\n+        $user = UserSystem::where('username', $request->username)->first();\n+\n+        if ($user && Hash::check($request->password, $user->password)) {\n+            Session::put('user', $user);\n+            return redirect()->route('user.dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n+        }\n+\n+        return back()->withErrors(['login_error' => 'Invalid username or password.']);\n+    }\n+\n+    public function logout()\n+    {\n+        Session::forget('user');\n+        return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n+    }\n }\n"
                },
                {
                    "date": 1732860052729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n use Illuminate\\Support\\Facades\\Session;\n \n class UserSystemController extends Controller\n {\n-    // Registration methods (unchanged)\n+    // Registration methods\n     public function create()\n     {\n         return view('register');\n     }\n@@ -65,5 +65,15 @@\n     {\n         Session::forget('user');\n         return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n     }\n+\n+    // Dashboard method\n+    public function dashboard()\n+    {\n+        if (!Session::has('user')) {\n+            return redirect()->route('user.loginForm')->withErrors(['login_error' => 'Please log in to access the dashboard.']);\n+        }\n+\n+        return view('dashboard', ['user' => Session::get('user')]);\n+    }\n }\n"
                },
                {
                    "date": 1732860182425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,14 +66,14 @@\n         Session::forget('user');\n         return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n     }\n \n-    // Dashboard method\n     public function dashboard()\n     {\n         if (!Session::has('user')) {\n             return redirect()->route('user.loginForm')->withErrors(['login_error' => 'Please log in to access the dashboard.']);\n         }\n-\n-        return view('dashboard', ['user' => Session::get('user')]);\n+    \n+        $user = Session::get('user'); // Retrieve user from session\n+        return view('dashboard', compact('user')); // Pass $user to the view\n     }\n }\n"
                },
                {
                    "date": 1732860240063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,19 +49,19 @@\n         $request->validate([\n             'username' => 'required|string',\n             'password' => 'required|string',\n         ]);\n-\n+    \n         $user = UserSystem::where('username', $request->username)->first();\n-\n+    \n         if ($user && Hash::check($request->password, $user->password)) {\n-            Session::put('user', $user);\n+            Session::put('user', $user); // Save user data in session\n             return redirect()->route('user.dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n         }\n-\n+    \n         return back()->withErrors(['login_error' => 'Invalid username or password.']);\n     }\n-\n+    \n     public function logout()\n     {\n         Session::forget('user');\n         return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n"
                },
                {
                    "date": 1732860274230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,31 +49,31 @@\n         $request->validate([\n             'username' => 'required|string',\n             'password' => 'required|string',\n         ]);\n-    \n+\n         $user = UserSystem::where('username', $request->username)->first();\n-    \n+\n         if ($user && Hash::check($request->password, $user->password)) {\n-            Session::put('user', $user); // Save user data in session\n+            Session::put('user', $user);\n             return redirect()->route('user.dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n         }\n-    \n+\n         return back()->withErrors(['login_error' => 'Invalid username or password.']);\n     }\n-    \n+\n     public function logout()\n     {\n         Session::forget('user');\n         return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n     }\n \n+    // Dashboard method\n     public function dashboard()\n     {\n         if (!Session::has('user')) {\n             return redirect()->route('user.loginForm')->withErrors(['login_error' => 'Please log in to access the dashboard.']);\n         }\n-    \n-        $user = Session::get('user'); // Retrieve user from session\n-        return view('dashboard', compact('user')); // Pass $user to the view\n+\n+        return view('dashboard', ['user' => Session::get('user')]);\n     }\n }\n"
                },
                {
                    "date": 1732860284497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n use Illuminate\\Support\\Facades\\Session;\n \n class UserSystemController extends Controller\n {\n-    // Registration methods\n+    // Registration methods (unchanged)\n     public function create()\n     {\n         return view('register');\n     }\n@@ -65,15 +65,5 @@\n     {\n         Session::forget('user');\n         return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n     }\n-\n-    // Dashboard method\n-    public function dashboard()\n-    {\n-        if (!Session::has('user')) {\n-            return redirect()->route('user.loginForm')->withErrors(['login_error' => 'Please log in to access the dashboard.']);\n-        }\n-\n-        return view('dashboard', ['user' => Session::get('user')]);\n-    }\n }\n"
                },
                {
                    "date": 1732863583148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,9 @@\n             'username' => 'required|string|max:255|unique:user_system,username',\n             'password' => 'required|string|min:8',\n             'email' => 'required|email|max:255|unique:user_system,email',\n             'number' => 'required|string|max:15',\n+            'role' => 'required|string|in:admin,user', // Ensure valid role\n         ]);\n \n         UserSystem::create([\n             'firstname' => $request->firstname,\n"
                },
                {
                    "date": 1732863599680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n             'username' => 'required|string|max:255|unique:user_system,username',\n             'password' => 'required|string|min:8',\n             'email' => 'required|email|max:255|unique:user_system,email',\n             'number' => 'required|string|max:15',\n-            'role' => 'required|string|in:admin,user', // Ensure valid role\n+            'role' => 'required|string|in:admin,user', \n         ]);\n \n         UserSystem::create([\n             'firstname' => $request->firstname,\n@@ -33,8 +33,9 @@\n             'username' => $request->username,\n             'password' => Hash::make($request->password),\n             'email' => $request->email,\n             'number' => $request->number,\n+            'role' => $request->role, \n         ]);\n \n         return redirect()->route('user.create')->with('success', 'Registration successful!');\n     }\n"
                },
                {
                    "date": 1732863673613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n         $user = UserSystem::where('username', $request->username)->first();\n \n         if ($user && Hash::check($request->password, $user->password)) {\n             Session::put('user', $user);\n-            return redirect()->route('user.dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n+            return redirect()->route('user.dashboard')->with('success', 'Welcome back, ' . $user->firstname . ' (' . $user->role . ')!');\n         }\n \n         return back()->withErrors(['login_error' => 'Invalid username or password.']);\n     }\n"
                },
                {
                    "date": 1732864766761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n             'number' => $request->number,\n             'role' => $request->role, \n         ]);\n \n-        return redirect()->route('user.create')->with('success', 'Registration successful!');\n+        return redirect()->route('user.login')->with('success', 'Registration successful!');\n     }\n \n     // Login methods\n     public function loginForm()\n"
                },
                {
                    "date": 1732864778232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n             'number' => $request->number,\n             'role' => $request->role, \n         ]);\n \n-        return redirect()->route('user.login')->with('success', 'Registration successful!');\n+        return redirect()->route('user.register')->with('success', 'Registration successful!');\n     }\n \n     // Login methods\n     public function loginForm()\n"
                },
                {
                    "date": 1732865077273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n             'number' => $request->number,\n             'role' => $request->role, \n         ]);\n \n-        return redirect()->route('user.register')->with('success', 'Registration successful!');\n+        return redirect()->route('user.create')->with('success', 'Registration successful!');\n     }\n \n     // Login methods\n     public function loginForm()\n"
                },
                {
                    "date": 1732865764579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n             'number' => $request->number,\n             'role' => $request->role, \n         ]);\n \n-        return redirect()->route('user.create')->with('success', 'Registration successful!');\n+        return redirect()->route('register')->with('success', 'User registered successfully!');\n     }\n \n     // Login methods\n     public function loginForm()\n"
                },
                {
                    "date": 1732879833293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,10 @@\n     {\n         return view('register');\n     }\n \n+  \n+\n     public function store(Request $request)\n     {\n         $request->validate([\n             'firstname' => 'required|string|max:255',\n"
                },
                {
                    "date": 1732879976068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,18 @@\n     {\n         return view('register');\n     }\n \n+     // Registration methods (unchanged)\n+     public function   viewdash()\n+     {\n+         return view('dashboard');\n+     }\n+\n   \n \n+  \n+\n     public function store(Request $request)\n     {\n         $request->validate([\n             'firstname' => 'required|string|max:255',\n"
                },
                {
                    "date": 1732880410847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,14 +14,9 @@\n     {\n         return view('register');\n     }\n \n-     // Registration methods (unchanged)\n-     public function   viewdash()\n-     {\n-         return view('dashboard');\n-     }\n-\n+   \n   \n \n   \n \n"
                },
                {
                    "date": 1732880589028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,13 +14,8 @@\n     {\n         return view('register');\n     }\n \n-   \n-  \n-\n-  \n-\n     public function store(Request $request)\n     {\n         $request->validate([\n             'firstname' => 'required|string|max:255',\n"
                },
                {
                    "date": 1732880882816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,14 @@\n     {\n         return view('register');\n     }\n \n+    // Registration methods (unchanged)\n+    public function viewdashboard()\n+    {\n+        return view('register');\n+    }\n+\n     public function store(Request $request)\n     {\n         $request->validate([\n             'firstname' => 'required|string|max:255',\n"
                },
                {
                    "date": 1732880890671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n \n     // Registration methods (unchanged)\n     public function viewdashboard()\n     {\n-        return view('register');\n+        return view('dashboard');\n     }\n \n     public function store(Request $request)\n     {\n"
                },
                {
                    "date": 1732880965251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\UserSystem;\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Hash;\n+use Illuminate\\Support\\Facades\\Session;\n+\n+class UserSystemController extends Controller\n+{\n+    // Registration methods (unchanged)\n+    public function create()\n+    {\n+        return view('register');\n+    }\n+\n+    // Registration methods (unchanged)\n+    public function viewdashboard()\n+    {\n+        return view('dashboard');\n+    }\n+\n+    public function store(Request $request)\n+    {\n+        $request->validate([\n+            'firstname' => 'required|string|max:255',\n+            'lastname' => 'required|string|max:255',\n+            'username' => 'required|string|max:255|unique:user_system,username',\n+            'password' => 'required|string|min:8',\n+            'email' => 'required|email|max:255|unique:user_system,email',\n+            'number' => 'required|string|max:15',\n+            'role' => 'required|string|in:admin,user', \n+        ]);\n+\n+        UserSystem::create([\n+            'firstname' => $request->firstname,\n+            'lastname' => $request->lastname,\n+            'username' => $request->username,\n+            'password' => Hash::make($request->password),\n+            'email' => $request->email,\n+            'number' => $request->number,\n+            'role' => $request->role, \n+        ]);\n+\n+        return redirect()->route('register')->with('success', 'User registered successfully!');\n+    }\n+\n+    // Login methods\n+    public function loginForm()\n+    {\n+        return view('login');\n+    }\n+\n+    public function processLogin(Request $request)\n+    {\n+        $request->validate([\n+            'username' => 'required|string',\n+            'password' => 'required|string',\n+        ]);\n+\n+        $user = UserSystem::where('username', $request->username)->first();\n+\n+        if ($user && Hash::check($request->password, $user->password)) {\n+            Session::put('user', $user);\n+            return redirect()->route('user.dashboard')->with('success', 'Welcome back, ' . $user->firstname . ' (' . $user->role . ')!');\n+        }\n+\n+        return back()->withErrors(['login_error' => 'Invalid username or password.']);\n+    }\n+\n+    public function logout()\n+    {\n+        Session::forget('user');\n+        return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n+    }\n+}\n"
                },
                {
                    "date": 1732897003115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,81 +74,4 @@\n         Session::forget('user');\n         return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n     }\n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\UserSystem;\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Support\\Facades\\Hash;\n-use Illuminate\\Support\\Facades\\Session;\n-\n-class UserSystemController extends Controller\n-{\n-    // Registration methods (unchanged)\n-    public function create()\n-    {\n-        return view('register');\n-    }\n-\n-    // Registration methods (unchanged)\n-    public function viewdashboard()\n-    {\n-        return view('dashboard');\n-    }\n-\n-    public function store(Request $request)\n-    {\n-        $request->validate([\n-            'firstname' => 'required|string|max:255',\n-            'lastname' => 'required|string|max:255',\n-            'username' => 'required|string|max:255|unique:user_system,username',\n-            'password' => 'required|string|min:8',\n-            'email' => 'required|email|max:255|unique:user_system,email',\n-            'number' => 'required|string|max:15',\n-            'role' => 'required|string|in:admin,user', \n-        ]);\n-\n-        UserSystem::create([\n-            'firstname' => $request->firstname,\n-            'lastname' => $request->lastname,\n-            'username' => $request->username,\n-            'password' => Hash::make($request->password),\n-            'email' => $request->email,\n-            'number' => $request->number,\n-            'role' => $request->role, \n-        ]);\n-\n-        return redirect()->route('register')->with('success', 'User registered successfully!');\n-    }\n-\n-    // Login methods\n-    public function loginForm()\n-    {\n-        return view('login');\n-    }\n-\n-    public function processLogin(Request $request)\n-    {\n-        $request->validate([\n-            'username' => 'required|string',\n-            'password' => 'required|string',\n-        ]);\n-\n-        $user = UserSystem::where('username', $request->username)->first();\n-\n-        if ($user && Hash::check($request->password, $user->password)) {\n-            Session::put('user', $user);\n-            return redirect()->route('user.dashboard')->with('success', 'Welcome back, ' . $user->firstname . ' (' . $user->role . ')!');\n-        }\n-\n-        return back()->withErrors(['login_error' => 'Invalid username or password.']);\n-    }\n-\n-    public function logout()\n-    {\n-        Session::forget('user');\n-        return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n-    }\n-}\n"
                },
                {
                    "date": 1732899624848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,11 +15,11 @@\n         return view('register');\n     }\n \n     // Registration methods (unchanged)\n-    public function viewdashboard()\n+    public function createCv()\n     {\n-        return view('dashboard');\n+        return view('create_cv');\n     }\n \n     public function store(Request $request)\n     {\n"
                },
                {
                    "date": 1732903351090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,18 @@\n     {\n         return view('create_cv');\n     }\n \n+    public function createCv(Request $request)\n+    {\n+        // Handle form data\n+        $data = $request->all();\n+        // Save to database or perform other logic\n+        return redirect()->route('user.dashboard')->with('success', 'CV Created Successfully!');\n+    }\n+\n+\n+\n     public function store(Request $request)\n     {\n         $request->validate([\n             'firstname' => 'required|string|max:255',\n"
                },
                {
                    "date": 1732903356965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\UserSystem;\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Hash;\n+use Illuminate\\Support\\Facades\\Session;\n+\n+class UserSystemController extends Controller\n+{\n+    // Registration methods (unchanged)\n+    public function create()\n+    {\n+        return view('register');\n+    }\n+\n+    // Registration methods (unchanged)\n+    public function createCv()\n+    {\n+        return view('create_cv');\n+    }\n+\n+\n+\n+    \n+\n+    public function store(Request $request)\n+    {\n+        $request->validate([\n+            'firstname' => 'required|string|max:255',\n+            'lastname' => 'required|string|max:255',\n+            'username' => 'required|string|max:255|unique:user_system,username',\n+            'password' => 'required|string|min:8',\n+            'email' => 'required|email|max:255|unique:user_system,email',\n+            'number' => 'required|string|max:15',\n+            'role' => 'required|string|in:admin,user', \n+        ]);\n+\n+        UserSystem::create([\n+            'firstname' => $request->firstname,\n+            'lastname' => $request->lastname,\n+            'username' => $request->username,\n+            'password' => Hash::make($request->password),\n+            'email' => $request->email,\n+            'number' => $request->number,\n+            'role' => $request->role, \n+        ]);\n+\n+        return redirect()->route('register')->with('success', 'User registered successfully!');\n+    }\n+\n+    // Login methods\n+    public function loginForm()\n+    {\n+        return view('login');\n+    }\n+\n+    public function processLogin(Request $request)\n+    {\n+        $request->validate([\n+            'username' => 'required|string',\n+            'password' => 'required|string',\n+        ]);\n+\n+        $user = UserSystem::where('username', $request->username)->first();\n+\n+        if ($user && Hash::check($request->password, $user->password)) {\n+            Session::put('user', $user);\n+            return redirect()->route('user.dashboard')->with('success', 'Welcome back, ' . $user->firstname . ' (' . $user->role . ')!');\n+        }\n+\n+        return back()->withErrors(['login_error' => 'Invalid username or password.']);\n+    }\n+\n+    public function logout()\n+    {\n+        Session::forget('user');\n+        return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n+    }\n+}\n"
                },
                {
                    "date": 1732903382344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,92 +77,15 @@\n     {\n         Session::forget('user');\n         return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n     }\n-}\n-<?php\n \n-namespace App\\Http\\Controllers;\n \n-use App\\Models\\UserSystem;\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Support\\Facades\\Hash;\n-use Illuminate\\Support\\Facades\\Session;\n-\n-class UserSystemController extends Controller\n-{\n-    // Registration methods (unchanged)\n-    public function create()\n-    {\n-        return view('register');\n-    }\n-\n-    // Registration methods (unchanged)\n-    public function createCv()\n-    {\n-        return view('create_cv');\n-    }\n-\n     public function createCv(Request $request)\n     {\n         // Handle form data\n         $data = $request->all();\n         // Save to database or perform other logic\n         return redirect()->route('user.dashboard')->with('success', 'CV Created Successfully!');\n     }\n \n-\n-\n-    public function store(Request $request)\n-    {\n-        $request->validate([\n-            'firstname' => 'required|string|max:255',\n-            'lastname' => 'required|string|max:255',\n-            'username' => 'required|string|max:255|unique:user_system,username',\n-            'password' => 'required|string|min:8',\n-            'email' => 'required|email|max:255|unique:user_system,email',\n-            'number' => 'required|string|max:15',\n-            'role' => 'required|string|in:admin,user', \n-        ]);\n-\n-        UserSystem::create([\n-            'firstname' => $request->firstname,\n-            'lastname' => $request->lastname,\n-            'username' => $request->username,\n-            'password' => Hash::make($request->password),\n-            'email' => $request->email,\n-            'number' => $request->number,\n-            'role' => $request->role, \n-        ]);\n-\n-        return redirect()->route('register')->with('success', 'User registered successfully!');\n-    }\n-\n-    // Login methods\n-    public function loginForm()\n-    {\n-        return view('login');\n-    }\n-\n-    public function processLogin(Request $request)\n-    {\n-        $request->validate([\n-            'username' => 'required|string',\n-            'password' => 'required|string',\n-        ]);\n-\n-        $user = UserSystem::where('username', $request->username)->first();\n-\n-        if ($user && Hash::check($request->password, $user->password)) {\n-            Session::put('user', $user);\n-            return redirect()->route('user.dashboard')->with('success', 'Welcome back, ' . $user->firstname . ' (' . $user->role . ')!');\n-        }\n-\n-        return back()->withErrors(['login_error' => 'Invalid username or password.']);\n-    }\n-\n-    public function logout()\n-    {\n-        Session::forget('user');\n-        return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n-    }\n }\n"
                },
                {
                    "date": 1732903389565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,13 +79,6 @@\n         return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n     }\n \n \n-    public function createCv(Request $request)\n-    {\n-        // Handle form data\n-        $data = $request->all();\n-        // Save to database or perform other logic\n-        return redirect()->route('user.dashboard')->with('success', 'CV Created Successfully!');\n-    }\n \n }\n"
                },
                {
                    "date": 1733030781154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,12 @@\n         return view('create_cv');\n     }\n \n \n-\n+    public function register()\n+    {\n+        return view('register'); // Return the register view\n+    }\n     \n \n     public function store(Request $request)\n     {\n"
                },
                {
                    "date": 1733030848339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,12 +21,9 @@\n         return view('create_cv');\n     }\n \n \n-    public function register()\n-    {\n-        return view('register'); // Return the register view\n-    }\n+\n     \n \n     public function store(Request $request)\n     {\n"
                },
                {
                    "date": 1733031759030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n             'number' => $request->number,\n             'role' => $request->role, \n         ]);\n \n-        return redirect()->route('register')->with('success', 'User registered successfully!');\n+        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n     }\n \n     // Login methods\n     public function loginForm()\n"
                },
                {
                    "date": 1733032056630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n \n \n     \n \n-    public function store(Request $request)\n+    public function register(Request $request)\n     {\n         $request->validate([\n             'firstname' => 'required|string|max:255',\n             'lastname' => 'required|string|max:255',\n"
                },
                {
                    "date": 1733032463853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,84 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\UserSystem;\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Hash;\n+use Illuminate\\Support\\Facades\\Session;\n+\n+class UserSystemController extends Controller\n+{\n+    // Registration methods (unchanged)\n+    public function create()\n+    {\n+        return view('register');\n+    }\n+\n+    // Registration methods (unchanged)\n+    public function createCv()\n+    {\n+        return view('create_cv');\n+    }\n+\n+\n+\n+    \n+\n+    public function register(Request $request)\n+    {\n+        $request->validate([\n+            'firstname' => 'required|string|max:255',\n+            'lastname' => 'required|string|max:255',\n+            'username' => 'required|string|max:255|unique:user_system,username',\n+            'password' => 'required|string|min:8',\n+            'email' => 'required|email|max:255|unique:user_system,email',\n+            'number' => 'required|string|max:15',\n+            'role' => 'required|string|in:admin,user', \n+        ]);\n+\n+        UserSystem::create([\n+            'firstname' => $request->firstname,\n+            'lastname' => $request->lastname,\n+            'username' => $request->username,\n+            'password' => Hash::make($request->password),\n+            'email' => $request->email,\n+            'number' => $request->number,\n+            'role' => $request->role, \n+        ]);\n+\n+        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n+    }\n+\n+    // Login methods\n+    public function loginForm()\n+    {\n+        return view('login');\n+    }\n+\n+    public function processLogin(Request $request)\n+    {\n+        $request->validate([\n+            'username' => 'required|string',\n+            'password' => 'required|string',\n+        ]);\n+\n+        $user = UserSystem::where('username', $request->username)->first();\n+\n+        if ($user && Hash::check($request->password, $user->password)) {\n+            Session::put('user', $user);\n+            return redirect()->route('user.dashboard')->with('success', 'Welcome back, ' . $user->firstname . ' (' . $user->role . ')!');\n+        }\n+\n+        return back()->withErrors(['login_error' => 'Invalid username or password.']);\n+    }\n+\n+    public function logout()\n+    {\n+        Session::forget('user');\n+        return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n+    }\n+\n+\n+\n+}\n"
                },
                {
                    "date": 1733032947275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n \n \n     \n \n-    public function register(Request $request)\n+    public function register_users(Request $request)\n     {\n         $request->validate([\n             'firstname' => 'required|string|max:255',\n             'lastname' => 'required|string|max:255',\n@@ -81,88 +81,4 @@\n \n \n \n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\UserSystem;\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Support\\Facades\\Hash;\n-use Illuminate\\Support\\Facades\\Session;\n-\n-class UserSystemController extends Controller\n-{\n-    // Registration methods (unchanged)\n-    public function create()\n-    {\n-        return view('register');\n-    }\n-\n-    // Registration methods (unchanged)\n-    public function createCv()\n-    {\n-        return view('create_cv');\n-    }\n-\n-\n-\n-    \n-\n-    public function register(Request $request)\n-    {\n-        $request->validate([\n-            'firstname' => 'required|string|max:255',\n-            'lastname' => 'required|string|max:255',\n-            'username' => 'required|string|max:255|unique:user_system,username',\n-            'password' => 'required|string|min:8',\n-            'email' => 'required|email|max:255|unique:user_system,email',\n-            'number' => 'required|string|max:15',\n-            'role' => 'required|string|in:admin,user', \n-        ]);\n-\n-        UserSystem::create([\n-            'firstname' => $request->firstname,\n-            'lastname' => $request->lastname,\n-            'username' => $request->username,\n-            'password' => Hash::make($request->password),\n-            'email' => $request->email,\n-            'number' => $request->number,\n-            'role' => $request->role, \n-        ]);\n-\n-        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n-    }\n-\n-    // Login methods\n-    public function loginForm()\n-    {\n-        return view('login');\n-    }\n-\n-    public function processLogin(Request $request)\n-    {\n-        $request->validate([\n-            'username' => 'required|string',\n-            'password' => 'required|string',\n-        ]);\n-\n-        $user = UserSystem::where('username', $request->username)->first();\n-\n-        if ($user && Hash::check($request->password, $user->password)) {\n-            Session::put('user', $user);\n-            return redirect()->route('user.dashboard')->with('success', 'Welcome back, ' . $user->firstname . ' (' . $user->role . ')!');\n-        }\n-\n-        return back()->withErrors(['login_error' => 'Invalid username or password.']);\n-    }\n-\n-    public function logout()\n-    {\n-        Session::forget('user');\n-        return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n-    }\n-\n-\n-\n-}\n"
                },
                {
                    "date": 1733160492475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n         $user = UserSystem::where('username', $request->username)->first();\n \n         if ($user && Hash::check($request->password, $user->password)) {\n             Session::put('user', $user);\n-            return redirect()->route('user.dashboard')->with('success', 'Welcome back, ' . $user->firstname . ' (' . $user->role . ')!');\n+            return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . ' (' . $user->role . ')!');\n         }\n \n         return back()->withErrors(['login_error' => 'Invalid username or password.']);\n     }\n"
                },
                {
                    "date": 1733163143699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,16 +61,26 @@\n         $request->validate([\n             'username' => 'required|string',\n             'password' => 'required|string',\n         ]);\n-\n+    \n+        // Find the user by username\n         $user = UserSystem::where('username', $request->username)->first();\n-\n+    \n+        // Check if user exists and password is correct\n         if ($user && Hash::check($request->password, $user->password)) {\n-            Session::put('user', $user);\n-            return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . ' (' . $user->role . ')!');\n+            // Store essential user data in session\n+            Session::put('user', [\n+                'id' => $user->id,\n+                'firstname' => $user->firstname,\n+                'role' => $user->role,\n+            ]);\n+    \n+            // Redirect based on role\n+            return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n         }\n-\n+    \n+        // Login failed\n         return back()->withErrors(['login_error' => 'Invalid username or password.']);\n     }\n \n     public function logout()\n"
                },
                {
                    "date": 1733251265159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,39 +56,63 @@\n         return view('login');\n     }\n \n     public function processLogin(Request $request)\n-    {\n-        $request->validate([\n-            'username' => 'required|string',\n-            'password' => 'required|string',\n+{\n+    $request->validate([\n+        'username' => 'required|string',\n+        'password' => 'required|string',\n+    ]);\n+\n+    // Find the user by username\n+    $user = UserSystem::where('username', $request->username)->first();\n+\n+    // Check if user exists and password is correct\n+    if ($user && Hash::check($request->password, $user->password)) {\n+        // Store essential user data in session\n+        Session::put('user', [\n+            'id' => $user->id,\n+            'firstname' => $user->firstname,\n+            'lastname' => $user->lastname,\n+            'role' => $user->role,\n         ]);\n-    \n-        // Find the user by username\n-        $user = UserSystem::where('username', $request->username)->first();\n-    \n-        // Check if user exists and password is correct\n-        if ($user && Hash::check($request->password, $user->password)) {\n-            // Store essential user data in session\n-            Session::put('user', [\n-                'id' => $user->id,\n-                'firstname' => $user->firstname,\n-                'role' => $user->role,\n-            ]);\n-    \n-            // Redirect based on role\n-            return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n-        }\n-    \n-        // Login failed\n-        return back()->withErrors(['login_error' => 'Invalid username or password.']);\n-    }\n \n-    public function logout()\n-    {\n-        Session::forget('user');\n-        return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n+        // Redirect to dashboard with a welcome message\n+        return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n     }\n \n+    // Login failed\n+    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n+}\n \n \n+public function monitorAccounts()\n+{\n+    $users = UserSystem::all(); // Fetch all users\n+    return view('monitor_accounts', compact('users'));\n }\n+\n+public function updateRole(Request $request, $id)\n+{\n+    $request->validate([\n+        'role' => 'required|string|in:admin,user',\n+    ]);\n+\n+    $user = UserSystem::findOrFail($id); // Find the user\n+    $user->role = $request->role; // Update role\n+    $user->save();\n+\n+    return redirect()->route('monitor.accounts')->with('success', 'Role updated successfully!');\n+}\n+\n+\n+\n+\n+public function logout()\n+{\n+    Session::forget('user');\n+    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n+}\n+\n+\n+\n+}\n"
                },
                {
                    "date": 1733252897348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n \n public function monitorAccounts()\n {\n     $users = UserSystem::all(); // Fetch all users\n-    return view('monitor_accounts', compact('users'));\n+    return view('monitor.accounts', compact('users'));\n }\n \n public function updateRole(Request $request, $id)\n {\n"
                },
                {
                    "date": 1733253073477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n \n public function monitorAccounts()\n {\n     $users = UserSystem::all(); // Fetch all users\n-    return view('monitor.accounts', compact('users'));\n+    return view('monitor_accounts', compact('users'));\n }\n \n public function updateRole(Request $request, $id)\n {\n"
                },
                {
                    "date": 1733253216073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,118 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\UserSystem;\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Hash;\n+use Illuminate\\Support\\Facades\\Session;\n+\n+class UserSystemController extends Controller\n+{\n+    // Registration methods (unchanged)\n+    public function create()\n+    {\n+        return view('register');\n+    }\n+\n+    // Registration methods (unchanged)\n+    public function createCv()\n+    {\n+        return view('create_cv');\n+    }\n+\n+\n+\n+    \n+\n+    public function register_users(Request $request)\n+    {\n+        $request->validate([\n+            'firstname' => 'required|string|max:255',\n+            'lastname' => 'required|string|max:255',\n+            'username' => 'required|string|max:255|unique:user_system,username',\n+            'password' => 'required|string|min:8',\n+            'email' => 'required|email|max:255|unique:user_system,email',\n+            'number' => 'required|string|max:15',\n+            'role' => 'required|string|in:admin,user', \n+        ]);\n+\n+        UserSystem::create([\n+            'firstname' => $request->firstname,\n+            'lastname' => $request->lastname,\n+            'username' => $request->username,\n+            'password' => Hash::make($request->password),\n+            'email' => $request->email,\n+            'number' => $request->number,\n+            'role' => $request->role, \n+        ]);\n+\n+        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n+    }\n+\n+    // Login methods\n+    public function loginForm()\n+    {\n+        return view('login');\n+    }\n+\n+    public function processLogin(Request $request)\n+{\n+    $request->validate([\n+        'username' => 'required|string',\n+        'password' => 'required|string',\n+    ]);\n+\n+    // Find the user by username\n+    $user = UserSystem::where('username', $request->username)->first();\n+\n+    // Check if user exists and password is correct\n+    if ($user && Hash::check($request->password, $user->password)) {\n+        // Store essential user data in session\n+        Session::put('user', [\n+            'id' => $user->id,\n+            'firstname' => $user->firstname,\n+            'lastname' => $user->lastname,\n+            'role' => $user->role,\n+        ]);\n+\n+        // Redirect to dashboard with a welcome message\n+        return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n+    }\n+\n+    // Login failed\n+    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n+}\n+\n+\n+public function monitorAccounts()\n+{\n+    $users = UserSystem::all(); // Fetch all users\n+    return view('monitor.accounts', compact('users'));\n+}\n+\n+public function updateRole(Request $request, $id)\n+{\n+    $request->validate([\n+        'role' => 'required|string|in:admin,user',\n+    ]);\n+\n+    $user = UserSystem::findOrFail($id); // Find the user\n+    $user->role = $request->role; // Update role\n+    $user->save();\n+\n+    return redirect()->route('monitor.accounts')->with('success', 'Role updated successfully!');\n+}\n+\n+\n+\n+\n+public function logout()\n+{\n+    Session::forget('user');\n+    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n+}\n+\n+\n+\n+}\n"
                },
                {
                    "date": 1733253304776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n \n public function monitorAccounts()\n {\n     $users = UserSystem::all(); // Fetch all users\n-    return view('monitor.accounts', compact('users'));\n+    return view('monitor', compact('users'));\n }\n \n public function updateRole(Request $request, $id)\n {\n@@ -115,122 +115,4 @@\n \n \n \n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\UserSystem;\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Support\\Facades\\Hash;\n-use Illuminate\\Support\\Facades\\Session;\n-\n-class UserSystemController extends Controller\n-{\n-    // Registration methods (unchanged)\n-    public function create()\n-    {\n-        return view('register');\n-    }\n-\n-    // Registration methods (unchanged)\n-    public function createCv()\n-    {\n-        return view('create_cv');\n-    }\n-\n-\n-\n-    \n-\n-    public function register_users(Request $request)\n-    {\n-        $request->validate([\n-            'firstname' => 'required|string|max:255',\n-            'lastname' => 'required|string|max:255',\n-            'username' => 'required|string|max:255|unique:user_system,username',\n-            'password' => 'required|string|min:8',\n-            'email' => 'required|email|max:255|unique:user_system,email',\n-            'number' => 'required|string|max:15',\n-            'role' => 'required|string|in:admin,user', \n-        ]);\n-\n-        UserSystem::create([\n-            'firstname' => $request->firstname,\n-            'lastname' => $request->lastname,\n-            'username' => $request->username,\n-            'password' => Hash::make($request->password),\n-            'email' => $request->email,\n-            'number' => $request->number,\n-            'role' => $request->role, \n-        ]);\n-\n-        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n-    }\n-\n-    // Login methods\n-    public function loginForm()\n-    {\n-        return view('login');\n-    }\n-\n-    public function processLogin(Request $request)\n-{\n-    $request->validate([\n-        'username' => 'required|string',\n-        'password' => 'required|string',\n-    ]);\n-\n-    // Find the user by username\n-    $user = UserSystem::where('username', $request->username)->first();\n-\n-    // Check if user exists and password is correct\n-    if ($user && Hash::check($request->password, $user->password)) {\n-        // Store essential user data in session\n-        Session::put('user', [\n-            'id' => $user->id,\n-            'firstname' => $user->firstname,\n-            'lastname' => $user->lastname,\n-            'role' => $user->role,\n-        ]);\n-\n-        // Redirect to dashboard with a welcome message\n-        return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n-    }\n-\n-    // Login failed\n-    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n-}\n-\n-\n-public function monitorAccounts()\n-{\n-    $users = UserSystem::all(); // Fetch all users\n-    return view('monitor_accounts', compact('users'));\n-}\n-\n-public function updateRole(Request $request, $id)\n-{\n-    $request->validate([\n-        'role' => 'required|string|in:admin,user',\n-    ]);\n-\n-    $user = UserSystem::findOrFail($id); // Find the user\n-    $user->role = $request->role; // Update role\n-    $user->save();\n-\n-    return redirect()->route('monitor.accounts')->with('success', 'Role updated successfully!');\n-}\n-\n-\n-\n-\n-public function logout()\n-{\n-    Session::forget('user');\n-    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n-}\n-\n-\n-\n-}\n"
                },
                {
                    "date": 1733253471078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,10 +86,10 @@\n \n \n public function monitorAccounts()\n {\n-    $users = UserSystem::all(); // Fetch all users\n-    return view('monitor', compact('users'));\n+ \n+    return view('monitor');\n }\n \n public function updateRole(Request $request, $id)\n {\n"
                },
                {
                    "date": 1733253483946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,10 +86,10 @@\n \n \n public function monitorAccounts()\n {\n- \n-    return view('monitor');\n+    $users = UserSystem::all(); // Fetch all users\n+    return view('monitor'), compact('users'));\n }\n \n public function updateRole(Request $request, $id)\n {\n"
                },
                {
                    "date": 1733253744185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,118 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\UserSystem;\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Hash;\n+use Illuminate\\Support\\Facades\\Session;\n+\n+class UserSystemController extends Controller\n+{\n+    // Registration methods (unchanged)\n+    public function create()\n+    {\n+        return view('register');\n+    }\n+\n+    // Registration methods (unchanged)\n+    public function createCv()\n+    {\n+        return view('create_cv');\n+    }\n+\n+\n+\n+    \n+\n+    public function register_users(Request $request)\n+    {\n+        $request->validate([\n+            'firstname' => 'required|string|max:255',\n+            'lastname' => 'required|string|max:255',\n+            'username' => 'required|string|max:255|unique:user_system,username',\n+            'password' => 'required|string|min:8',\n+            'email' => 'required|email|max:255|unique:user_system,email',\n+            'number' => 'required|string|max:15',\n+            'role' => 'required|string|in:admin,user', \n+        ]);\n+\n+        UserSystem::create([\n+            'firstname' => $request->firstname,\n+            'lastname' => $request->lastname,\n+            'username' => $request->username,\n+            'password' => Hash::make($request->password),\n+            'email' => $request->email,\n+            'number' => $request->number,\n+            'role' => $request->role, \n+        ]);\n+\n+        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n+    }\n+\n+    // Login methods\n+    public function loginForm()\n+    {\n+        return view('login');\n+    }\n+\n+    public function processLogin(Request $request)\n+{\n+    $request->validate([\n+        'username' => 'required|string',\n+        'password' => 'required|string',\n+    ]);\n+\n+    // Find the user by username\n+    $user = UserSystem::where('username', $request->username)->first();\n+\n+    // Check if user exists and password is correct\n+    if ($user && Hash::check($request->password, $user->password)) {\n+        // Store essential user data in session\n+        Session::put('user', [\n+            'id' => $user->id,\n+            'firstname' => $user->firstname,\n+            'lastname' => $user->lastname,\n+            'role' => $user->role,\n+        ]);\n+\n+        // Redirect to dashboard with a welcome message\n+        return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n+    }\n+\n+    // Login failed\n+    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n+}\n+\n+\n+public function monitorAccounts()\n+{\n+    $users = UserSystem::all(); // Fetch all users\n+    return view('monitor', compact('users'));\n+}\n+\n+public function updateRole(Request $request, $id)\n+{\n+    $request->validate([\n+        'role' => 'required|string|in:admin,user',\n+    ]);\n+\n+    $user = UserSystem::findOrFail($id); // Find the user\n+    $user->role = $request->role; // Update role\n+    $user->save();\n+\n+    return redirect()->route('monitor.accounts')->with('success', 'Role updated successfully!');\n+}\n+\n+\n+\n+\n+public function logout()\n+{\n+    Session::forget('user');\n+    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n+}\n+\n+\n+\n+}\n"
                },
                {
                    "date": 1733253781561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,24 +90,13 @@\n     $users = UserSystem::all(); // Fetch all users\n     return view('monitor', compact('users'));\n }\n \n-public function updateRole(Request $request, $id)\n-{\n-    $request->validate([\n-        'role' => 'required|string|in:admin,user',\n-    ]);\n \n-    $user = UserSystem::findOrFail($id); // Find the user\n-    $user->role = $request->role; // Update role\n-    $user->save();\n \n-    return redirect()->route('monitor.accounts')->with('success', 'Role updated successfully!');\n-}\n \n \n \n-\n public function logout()\n {\n     Session::forget('user');\n     return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n@@ -115,122 +104,4 @@\n \n \n \n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\UserSystem;\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Support\\Facades\\Hash;\n-use Illuminate\\Support\\Facades\\Session;\n-\n-class UserSystemController extends Controller\n-{\n-    // Registration methods (unchanged)\n-    public function create()\n-    {\n-        return view('register');\n-    }\n-\n-    // Registration methods (unchanged)\n-    public function createCv()\n-    {\n-        return view('create_cv');\n-    }\n-\n-\n-\n-    \n-\n-    public function register_users(Request $request)\n-    {\n-        $request->validate([\n-            'firstname' => 'required|string|max:255',\n-            'lastname' => 'required|string|max:255',\n-            'username' => 'required|string|max:255|unique:user_system,username',\n-            'password' => 'required|string|min:8',\n-            'email' => 'required|email|max:255|unique:user_system,email',\n-            'number' => 'required|string|max:15',\n-            'role' => 'required|string|in:admin,user', \n-        ]);\n-\n-        UserSystem::create([\n-            'firstname' => $request->firstname,\n-            'lastname' => $request->lastname,\n-            'username' => $request->username,\n-            'password' => Hash::make($request->password),\n-            'email' => $request->email,\n-            'number' => $request->number,\n-            'role' => $request->role, \n-        ]);\n-\n-        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n-    }\n-\n-    // Login methods\n-    public function loginForm()\n-    {\n-        return view('login');\n-    }\n-\n-    public function processLogin(Request $request)\n-{\n-    $request->validate([\n-        'username' => 'required|string',\n-        'password' => 'required|string',\n-    ]);\n-\n-    // Find the user by username\n-    $user = UserSystem::where('username', $request->username)->first();\n-\n-    // Check if user exists and password is correct\n-    if ($user && Hash::check($request->password, $user->password)) {\n-        // Store essential user data in session\n-        Session::put('user', [\n-            'id' => $user->id,\n-            'firstname' => $user->firstname,\n-            'lastname' => $user->lastname,\n-            'role' => $user->role,\n-        ]);\n-\n-        // Redirect to dashboard with a welcome message\n-        return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n-    }\n-\n-    // Login failed\n-    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n-}\n-\n-\n-public function monitorAccounts()\n-{\n-    $users = UserSystem::all(); // Fetch all users\n-    return view('monitor'), compact('users'));\n-}\n-\n-public function updateRole(Request $request, $id)\n-{\n-    $request->validate([\n-        'role' => 'required|string|in:admin,user',\n-    ]);\n-\n-    $user = UserSystem::findOrFail($id); // Find the user\n-    $user->role = $request->role; // Update role\n-    $user->save();\n-\n-    return redirect()->route('monitor.accounts')->with('success', 'Role updated successfully!');\n-}\n-\n-\n-\n-\n-public function logout()\n-{\n-    Session::forget('user');\n-    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n-}\n-\n-\n-\n-}\n"
                },
                {
                    "date": 1733253794557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,13 +90,24 @@\n     $users = UserSystem::all(); // Fetch all users\n     return view('monitor', compact('users'));\n }\n \n+public function updateRole(Request $request, $id)\n+{\n+    $request->validate([\n+        'role' => 'required|string|in:admin,user',\n+    ]);\n \n+    $user = UserSystem::findOrFail($id); // Find the user\n+    $user->role = $request->role; // Update role\n+    $user->save();\n \n+    return redirect()->route('monitor.accounts')->with('success', 'Role updated successfully!');\n+}\n \n \n \n+\n public function logout()\n {\n     Session::forget('user');\n     return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n"
                },
                {
                    "date": 1733253800512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,118 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\UserSystem;\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Hash;\n+use Illuminate\\Support\\Facades\\Session;\n+\n+class UserSystemController extends Controller\n+{\n+    // Registration methods (unchanged)\n+    public function create()\n+    {\n+        return view('register');\n+    }\n+\n+    // Registration methods (unchanged)\n+    public function createCv()\n+    {\n+        return view('create_cv');\n+    }\n+\n+\n+\n+    \n+\n+    public function register_users(Request $request)\n+    {\n+        $request->validate([\n+            'firstname' => 'required|string|max:255',\n+            'lastname' => 'required|string|max:255',\n+            'username' => 'required|string|max:255|unique:user_system,username',\n+            'password' => 'required|string|min:8',\n+            'email' => 'required|email|max:255|unique:user_system,email',\n+            'number' => 'required|string|max:15',\n+            'role' => 'required|string|in:admin,user', \n+        ]);\n+\n+        UserSystem::create([\n+            'firstname' => $request->firstname,\n+            'lastname' => $request->lastname,\n+            'username' => $request->username,\n+            'password' => Hash::make($request->password),\n+            'email' => $request->email,\n+            'number' => $request->number,\n+            'role' => $request->role, \n+        ]);\n+\n+        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n+    }\n+\n+    // Login methods\n+    public function loginForm()\n+    {\n+        return view('login');\n+    }\n+\n+    public function processLogin(Request $request)\n+{\n+    $request->validate([\n+        'username' => 'required|string',\n+        'password' => 'required|string',\n+    ]);\n+\n+    // Find the user by username\n+    $user = UserSystem::where('username', $request->username)->first();\n+\n+    // Check if user exists and password is correct\n+    if ($user && Hash::check($request->password, $user->password)) {\n+        // Store essential user data in session\n+        Session::put('user', [\n+            'id' => $user->id,\n+            'firstname' => $user->firstname,\n+            'lastname' => $user->lastname,\n+            'role' => $user->role,\n+        ]);\n+\n+        // Redirect to dashboard with a welcome message\n+        return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n+    }\n+\n+    // Login failed\n+    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n+}\n+\n+\n+public function monitorAccountsss()\n+{\n+    $users = UserSystem::all(); // Fetch all users\n+    return view('monitor', compact('users'));\n+}\n+\n+public function updateRole(Request $request, $id)\n+{\n+    $request->validate([\n+        'role' => 'required|string|in:admin,user',\n+    ]);\n+\n+    $user = UserSystem::findOrFail($id); // Find the user\n+    $user->role = $request->role; // Update role\n+    $user->save();\n+\n+    return redirect()->route('monitor.accounts')->with('success', 'Role updated successfully!');\n+}\n+\n+\n+\n+\n+public function logout()\n+{\n+    Session::forget('user');\n+    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n+}\n+\n+\n+\n+}\n"
                },
                {
                    "date": 1733253839985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,122 +115,4 @@\n \n \n \n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\UserSystem;\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Support\\Facades\\Hash;\n-use Illuminate\\Support\\Facades\\Session;\n-\n-class UserSystemController extends Controller\n-{\n-    // Registration methods (unchanged)\n-    public function create()\n-    {\n-        return view('register');\n-    }\n-\n-    // Registration methods (unchanged)\n-    public function createCv()\n-    {\n-        return view('create_cv');\n-    }\n-\n-\n-\n-    \n-\n-    public function register_users(Request $request)\n-    {\n-        $request->validate([\n-            'firstname' => 'required|string|max:255',\n-            'lastname' => 'required|string|max:255',\n-            'username' => 'required|string|max:255|unique:user_system,username',\n-            'password' => 'required|string|min:8',\n-            'email' => 'required|email|max:255|unique:user_system,email',\n-            'number' => 'required|string|max:15',\n-            'role' => 'required|string|in:admin,user', \n-        ]);\n-\n-        UserSystem::create([\n-            'firstname' => $request->firstname,\n-            'lastname' => $request->lastname,\n-            'username' => $request->username,\n-            'password' => Hash::make($request->password),\n-            'email' => $request->email,\n-            'number' => $request->number,\n-            'role' => $request->role, \n-        ]);\n-\n-        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n-    }\n-\n-    // Login methods\n-    public function loginForm()\n-    {\n-        return view('login');\n-    }\n-\n-    public function processLogin(Request $request)\n-{\n-    $request->validate([\n-        'username' => 'required|string',\n-        'password' => 'required|string',\n-    ]);\n-\n-    // Find the user by username\n-    $user = UserSystem::where('username', $request->username)->first();\n-\n-    // Check if user exists and password is correct\n-    if ($user && Hash::check($request->password, $user->password)) {\n-        // Store essential user data in session\n-        Session::put('user', [\n-            'id' => $user->id,\n-            'firstname' => $user->firstname,\n-            'lastname' => $user->lastname,\n-            'role' => $user->role,\n-        ]);\n-\n-        // Redirect to dashboard with a welcome message\n-        return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n-    }\n-\n-    // Login failed\n-    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n-}\n-\n-\n-public function monitorAccounts()\n-{\n-    $users = UserSystem::all(); // Fetch all users\n-    return view('monitor', compact('users'));\n-}\n-\n-public function updateRole(Request $request, $id)\n-{\n-    $request->validate([\n-        'role' => 'required|string|in:admin,user',\n-    ]);\n-\n-    $user = UserSystem::findOrFail($id); // Find the user\n-    $user->role = $request->role; // Update role\n-    $user->save();\n-\n-    return redirect()->route('monitor.accounts')->with('success', 'Role updated successfully!');\n-}\n-\n-\n-\n-\n-public function logout()\n-{\n-    Session::forget('user');\n-    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n-}\n-\n-\n-\n-}\n"
                },
                {
                    "date": 1733254278743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n \n public function monitorAccountsss()\n {\n     $users = UserSystem::all(); // Fetch all users\n-    return view('monitor', compact('users'));\n+    return view('monitor_Account', compact('users')); // Correct Blade file name\n }\n \n public function updateRole(Request $request, $id)\n {\n"
                },
                {
                    "date": 1733254289906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,116 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\UserSystem;\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Hash;\n+use Illuminate\\Support\\Facades\\Session;\n+\n+class UserSystemController extends Controller\n+{\n+    // Registration methods (unchanged)\n+    public function create()\n+    {\n+        return view('register');\n+    }\n+\n+    // Registration methods (unchanged)\n+    public function createCv()\n+    {\n+        return view('create_cv');\n+    }\n+\n+\n+\n+    \n+\n+    public function register_users(Request $request)\n+    {\n+        $request->validate([\n+            'firstname' => 'required|string|max:255',\n+            'lastname' => 'required|string|max:255',\n+            'username' => 'required|string|max:255|unique:user_system,username',\n+            'password' => 'required|string|min:8',\n+            'email' => 'required|email|max:255|unique:user_system,email',\n+            'number' => 'required|string|max:15',\n+            'role' => 'required|string|in:admin,user', \n+        ]);\n+\n+        UserSystem::create([\n+            'firstname' => $request->firstname,\n+            'lastname' => $request->lastname,\n+            'username' => $request->username,\n+            'password' => Hash::make($request->password),\n+            'email' => $request->email,\n+            'number' => $request->number,\n+            'role' => $request->role, \n+        ]);\n+\n+        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n+    }\n+\n+    // Login methods\n+    public function loginForm()\n+    {\n+        return view('login');\n+    }\n+\n+    public function processLogin(Request $request)\n+{\n+    $request->validate([\n+        'username' => 'required|string',\n+        'password' => 'required|string',\n+    ]);\n+\n+    // Find the user by username\n+    $user = UserSystem::where('username', $request->username)->first();\n+\n+    // Check if user exists and password is correct\n+    if ($user && Hash::check($request->password, $user->password)) {\n+        // Store essential user data in session\n+        Session::put('user', [\n+            'id' => $user->id,\n+            'firstname' => $user->firstname,\n+            'lastname' => $user->lastname,\n+            'role' => $user->role,\n+        ]);\n+\n+        // Redirect to dashboard with a welcome message\n+        return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n+    }\n+\n+    // Login failed\n+    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n+}\n+\n+\n+public function monitorAccountsss()\n+{\n+    $users = UserSystem::all(); // Fetch all users\n+    return view('monitor_Account', compact('users')); // Correct Blade file name\n+}\n+public function updateRole(Request $request, $id)\n+{\n+    $request->validate([\n+        'role' => 'required|string|in:admin,user',\n+    ]);\n+\n+    $user = UserSystem::findOrFail($id);\n+    $user->role = $request->role;\n+    $user->save();\n+\n+    return redirect()->route('monitor.accounts')->with('success', 'Role updated successfully!');\n+}\n+\n+\n+\n+public function logout()\n+{\n+    Session::forget('user');\n+    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n+}\n+\n+\n+\n+}\n"
                },
                {
                    "date": 1733254298475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,122 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\UserSystem;\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Hash;\n+use Illuminate\\Support\\Facades\\Session;\n+\n+class UserSystemController extends Controller\n+{\n+    // Registration methods (unchanged)\n+    public function create()\n+    {\n+        return view('register');\n+    }\n+\n+    // Registration methods (unchanged)\n+    public function createCv()\n+    {\n+        return view('create_cv');\n+    }\n+\n+\n+\n+    \n+\n+    public function register_users(Request $request)\n+    {\n+        $request->validate([\n+            'firstname' => 'required|string|max:255',\n+            'lastname' => 'required|string|max:255',\n+            'username' => 'required|string|max:255|unique:user_system,username',\n+            'password' => 'required|string|min:8',\n+            'email' => 'required|email|max:255|unique:user_system,email',\n+            'number' => 'required|string|max:15',\n+            'role' => 'required|string|in:admin,user', \n+        ]);\n+\n+        UserSystem::create([\n+            'firstname' => $request->firstname,\n+            'lastname' => $request->lastname,\n+            'username' => $request->username,\n+            'password' => Hash::make($request->password),\n+            'email' => $request->email,\n+            'number' => $request->number,\n+            'role' => $request->role, \n+        ]);\n+\n+        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n+    }\n+\n+    // Login methods\n+    public function loginForm()\n+    {\n+        return view('login');\n+    }\n+\n+    public function processLogin(Request $request)\n+{\n+    $request->validate([\n+        'username' => 'required|string',\n+        'password' => 'required|string',\n+    ]);\n+\n+    // Find the user by username\n+    $user = UserSystem::where('username', $request->username)->first();\n+\n+    // Check if user exists and password is correct\n+    if ($user && Hash::check($request->password, $user->password)) {\n+        // Store essential user data in session\n+        Session::put('user', [\n+            'id' => $user->id,\n+            'firstname' => $user->firstname,\n+            'lastname' => $user->lastname,\n+            'role' => $user->role,\n+        ]);\n+\n+        // Redirect to dashboard with a welcome message\n+        return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n+    }\n+\n+    // Login failed\n+    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n+}\n+\n+\n+public function monitorAccountsss()\n+{\n+    $users = UserSystem::all(); // Fetch all users\n+    return view('monitor_Account', compact('users')); // Correct Blade file name\n+}\n+public function updateRole(Request $request, $id)\n+{\n+    $request->validate([\n+        'role' => 'required|string|in:admin,user',\n+    ]);\n+\n+    $user = UserSystem::findOrFail($id);\n+    $user->role = $request->role;\n+    $user->save();\n+\n+    return redirect()->route('monitor.accounts')->with('success', 'Role updated successfully!');\n+}\n+\n+public function deleteUser($id)\n+{\n+    $user = UserSystem::findOrFail($id);\n+    $user->delete();\n+\n+    return redirect()->route('monitor.accounts')->with('success', 'User deleted successfully!');\n+}\n+\n+public function logout()\n+{\n+    Session::forget('user');\n+    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n+}\n+\n+\n+\n+}\n"
                },
                {
                    "date": 1733254377306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,238 +119,4 @@\n \n \n \n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\UserSystem;\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Support\\Facades\\Hash;\n-use Illuminate\\Support\\Facades\\Session;\n-\n-class UserSystemController extends Controller\n-{\n-    // Registration methods (unchanged)\n-    public function create()\n-    {\n-        return view('register');\n-    }\n-\n-    // Registration methods (unchanged)\n-    public function createCv()\n-    {\n-        return view('create_cv');\n-    }\n-\n-\n-\n-    \n-\n-    public function register_users(Request $request)\n-    {\n-        $request->validate([\n-            'firstname' => 'required|string|max:255',\n-            'lastname' => 'required|string|max:255',\n-            'username' => 'required|string|max:255|unique:user_system,username',\n-            'password' => 'required|string|min:8',\n-            'email' => 'required|email|max:255|unique:user_system,email',\n-            'number' => 'required|string|max:15',\n-            'role' => 'required|string|in:admin,user', \n-        ]);\n-\n-        UserSystem::create([\n-            'firstname' => $request->firstname,\n-            'lastname' => $request->lastname,\n-            'username' => $request->username,\n-            'password' => Hash::make($request->password),\n-            'email' => $request->email,\n-            'number' => $request->number,\n-            'role' => $request->role, \n-        ]);\n-\n-        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n-    }\n-\n-    // Login methods\n-    public function loginForm()\n-    {\n-        return view('login');\n-    }\n-\n-    public function processLogin(Request $request)\n-{\n-    $request->validate([\n-        'username' => 'required|string',\n-        'password' => 'required|string',\n-    ]);\n-\n-    // Find the user by username\n-    $user = UserSystem::where('username', $request->username)->first();\n-\n-    // Check if user exists and password is correct\n-    if ($user && Hash::check($request->password, $user->password)) {\n-        // Store essential user data in session\n-        Session::put('user', [\n-            'id' => $user->id,\n-            'firstname' => $user->firstname,\n-            'lastname' => $user->lastname,\n-            'role' => $user->role,\n-        ]);\n-\n-        // Redirect to dashboard with a welcome message\n-        return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n-    }\n-\n-    // Login failed\n-    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n-}\n-\n-\n-public function monitorAccountsss()\n-{\n-    $users = UserSystem::all(); // Fetch all users\n-    return view('monitor_Account', compact('users')); // Correct Blade file name\n-}\n-public function updateRole(Request $request, $id)\n-{\n-    $request->validate([\n-        'role' => 'required|string|in:admin,user',\n-    ]);\n-\n-    $user = UserSystem::findOrFail($id);\n-    $user->role = $request->role;\n-    $user->save();\n-\n-    return redirect()->route('monitor.accounts')->with('success', 'Role updated successfully!');\n-}\n-\n-\n-\n-public function logout()\n-{\n-    Session::forget('user');\n-    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n-}\n-\n-\n-\n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\UserSystem;\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Support\\Facades\\Hash;\n-use Illuminate\\Support\\Facades\\Session;\n-\n-class UserSystemController extends Controller\n-{\n-    // Registration methods (unchanged)\n-    public function create()\n-    {\n-        return view('register');\n-    }\n-\n-    // Registration methods (unchanged)\n-    public function createCv()\n-    {\n-        return view('create_cv');\n-    }\n-\n-\n-\n-    \n-\n-    public function register_users(Request $request)\n-    {\n-        $request->validate([\n-            'firstname' => 'required|string|max:255',\n-            'lastname' => 'required|string|max:255',\n-            'username' => 'required|string|max:255|unique:user_system,username',\n-            'password' => 'required|string|min:8',\n-            'email' => 'required|email|max:255|unique:user_system,email',\n-            'number' => 'required|string|max:15',\n-            'role' => 'required|string|in:admin,user', \n-        ]);\n-\n-        UserSystem::create([\n-            'firstname' => $request->firstname,\n-            'lastname' => $request->lastname,\n-            'username' => $request->username,\n-            'password' => Hash::make($request->password),\n-            'email' => $request->email,\n-            'number' => $request->number,\n-            'role' => $request->role, \n-        ]);\n-\n-        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n-    }\n-\n-    // Login methods\n-    public function loginForm()\n-    {\n-        return view('login');\n-    }\n-\n-    public function processLogin(Request $request)\n-{\n-    $request->validate([\n-        'username' => 'required|string',\n-        'password' => 'required|string',\n-    ]);\n-\n-    // Find the user by username\n-    $user = UserSystem::where('username', $request->username)->first();\n-\n-    // Check if user exists and password is correct\n-    if ($user && Hash::check($request->password, $user->password)) {\n-        // Store essential user data in session\n-        Session::put('user', [\n-            'id' => $user->id,\n-            'firstname' => $user->firstname,\n-            'lastname' => $user->lastname,\n-            'role' => $user->role,\n-        ]);\n-\n-        // Redirect to dashboard with a welcome message\n-        return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n-    }\n-\n-    // Login failed\n-    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n-}\n-\n-\n-public function monitorAccountsss()\n-{\n-    $users = UserSystem::all(); // Fetch all users\n-    return view('monitor_Account', compact('users')); // Correct Blade file name\n-}\n-\n-public function updateRole(Request $request, $id)\n-{\n-    $request->validate([\n-        'role' => 'required|string|in:admin,user',\n-    ]);\n-\n-    $user = UserSystem::findOrFail($id); // Find the user\n-    $user->role = $request->role; // Update role\n-    $user->save();\n-\n-    return redirect()->route('monitor.accounts')->with('success', 'Role updated successfully!');\n-}\n-\n-\n-\n-\n-public function logout()\n-{\n-    Session::forget('user');\n-    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n-}\n-\n-\n-\n-}\n"
                },
                {
                    "date": 1733254463253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,15 @@\n     return back()->withErrors(['login_error' => 'Invalid username or password.']);\n }\n \n \n+\n+public function logout()\n+{\n+    Session::forget('user');\n+    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n+}\n+\n public function monitorAccountsss()\n {\n     $users = UserSystem::all(); // Fetch all users\n     return view('monitor_Account', compact('users')); // Correct Blade file name\n@@ -110,13 +117,6 @@\n \n     return redirect()->route('monitor.accounts')->with('success', 'User deleted successfully!');\n }\n \n-public function logout()\n-{\n-    Session::forget('user');\n-    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n-}\n \n-\n-\n }\n"
                },
                {
                    "date": 1733254841961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n \n public function monitorAccountsss()\n {\n     $users = UserSystem::all(); // Fetch all users\n-    return view('monitor_Account', compact('users')); // Correct Blade file name\n+    return view('monitor', compact('users')); // Correct Blade file name\n }\n public function updateRole(Request $request, $id)\n {\n     $request->validate([\n"
                },
                {
                    "date": 1733254974464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,17 +106,17 @@\n     $user = UserSystem::findOrFail($id);\n     $user->role = $request->role;\n     $user->save();\n \n-    return redirect()->route('monitor.accounts')->with('success', 'Role updated successfully!');\n+    return redirect()->route('monitor')->with('success', 'Role updated successfully!');\n }\n \n public function deleteUser($id)\n {\n     $user = UserSystem::findOrFail($id);\n     $user->delete();\n \n-    return redirect()->route('monitor.accounts')->with('success', 'User deleted successfully!');\n+    return redirect()->route('monitor')->with('success', 'User deleted successfully!');\n }\n \n \n }\n"
                },
                {
                    "date": 1733255299521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n \n public function monitorAccountsss()\n {\n     $users = UserSystem::all(); // Fetch all users\n-    return view('monitor', compact('users')); // Correct Blade file name\n+    return view('monitor-accounts', compact('users')); // Correct Blade file name\n }\n public function updateRole(Request $request, $id)\n {\n     $request->validate([\n"
                },
                {
                    "date": 1733255353696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,122 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\UserSystem;\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Hash;\n+use Illuminate\\Support\\Facades\\Session;\n+\n+class UserSystemController extends Controller\n+{\n+    // Registration methods (unchanged)\n+    public function create()\n+    {\n+        return view('register');\n+    }\n+\n+    // Registration methods (unchanged)\n+    public function createCv()\n+    {\n+        return view('create_cv');\n+    }\n+\n+\n+\n+    \n+\n+    public function register_users(Request $request)\n+    {\n+        $request->validate([\n+            'firstname' => 'required|string|max:255',\n+            'lastname' => 'required|string|max:255',\n+            'username' => 'required|string|max:255|unique:user_system,username',\n+            'password' => 'required|string|min:8',\n+            'email' => 'required|email|max:255|unique:user_system,email',\n+            'number' => 'required|string|max:15',\n+            'role' => 'required|string|in:admin,user', \n+        ]);\n+\n+        UserSystem::create([\n+            'firstname' => $request->firstname,\n+            'lastname' => $request->lastname,\n+            'username' => $request->username,\n+            'password' => Hash::make($request->password),\n+            'email' => $request->email,\n+            'number' => $request->number,\n+            'role' => $request->role, \n+        ]);\n+\n+        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n+    }\n+\n+    // Login methods\n+    public function loginForm()\n+    {\n+        return view('login');\n+    }\n+\n+    public function processLogin(Request $request)\n+{\n+    $request->validate([\n+        'username' => 'required|string',\n+        'password' => 'required|string',\n+    ]);\n+\n+    // Find the user by username\n+    $user = UserSystem::where('username', $request->username)->first();\n+\n+    // Check if user exists and password is correct\n+    if ($user && Hash::check($request->password, $user->password)) {\n+        // Store essential user data in session\n+        Session::put('user', [\n+            'id' => $user->id,\n+            'firstname' => $user->firstname,\n+            'lastname' => $user->lastname,\n+            'role' => $user->role,\n+        ]);\n+\n+        // Redirect to dashboard with a welcome message\n+        return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n+    }\n+\n+    // Login failed\n+    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n+}\n+\n+\n+\n+public function logout()\n+{\n+    Session::forget('user');\n+    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n+}\n+\n+public function monitorAccountsss()\n+{\n+    $users = UserSystem::all(); // Fetch all users\n+    return view('monitor-accounts', compact('users')); // Correct Blade file name\n+}\n+public function updateRole(Request $request, $id)\n+{\n+    $request->validate([\n+        'role' => 'required|string|in:admin,user',\n+    ]);\n+\n+    $user = UserSystem::findOrFail($id);\n+    $user->role = $request->role;\n+    $user->save();\n+\n+    return redirect()->route('monitor')->with('success', 'Role updated successfully!');\n+}\n+\n+public function deleteUser($id)\n+{\n+    $user = UserSystem::findOrFail($id);\n+    $user->delete();\n+\n+    return redirect()->route('monitor')->with('success', 'User deleted successfully!');\n+}\n+\n+\n+}\n"
                },
                {
                    "date": 1733255400090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,126 +119,4 @@\n }\n \n \n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\UserSystem;\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Support\\Facades\\Hash;\n-use Illuminate\\Support\\Facades\\Session;\n-\n-class UserSystemController extends Controller\n-{\n-    // Registration methods (unchanged)\n-    public function create()\n-    {\n-        return view('register');\n-    }\n-\n-    // Registration methods (unchanged)\n-    public function createCv()\n-    {\n-        return view('create_cv');\n-    }\n-\n-\n-\n-    \n-\n-    public function register_users(Request $request)\n-    {\n-        $request->validate([\n-            'firstname' => 'required|string|max:255',\n-            'lastname' => 'required|string|max:255',\n-            'username' => 'required|string|max:255|unique:user_system,username',\n-            'password' => 'required|string|min:8',\n-            'email' => 'required|email|max:255|unique:user_system,email',\n-            'number' => 'required|string|max:15',\n-            'role' => 'required|string|in:admin,user', \n-        ]);\n-\n-        UserSystem::create([\n-            'firstname' => $request->firstname,\n-            'lastname' => $request->lastname,\n-            'username' => $request->username,\n-            'password' => Hash::make($request->password),\n-            'email' => $request->email,\n-            'number' => $request->number,\n-            'role' => $request->role, \n-        ]);\n-\n-        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n-    }\n-\n-    // Login methods\n-    public function loginForm()\n-    {\n-        return view('login');\n-    }\n-\n-    public function processLogin(Request $request)\n-{\n-    $request->validate([\n-        'username' => 'required|string',\n-        'password' => 'required|string',\n-    ]);\n-\n-    // Find the user by username\n-    $user = UserSystem::where('username', $request->username)->first();\n-\n-    // Check if user exists and password is correct\n-    if ($user && Hash::check($request->password, $user->password)) {\n-        // Store essential user data in session\n-        Session::put('user', [\n-            'id' => $user->id,\n-            'firstname' => $user->firstname,\n-            'lastname' => $user->lastname,\n-            'role' => $user->role,\n-        ]);\n-\n-        // Redirect to dashboard with a welcome message\n-        return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n-    }\n-\n-    // Login failed\n-    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n-}\n-\n-\n-\n-public function logout()\n-{\n-    Session::forget('user');\n-    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n-}\n-\n-public function monitorAccountsss()\n-{\n-    $users = UserSystem::all(); // Fetch all users\n-    return view('monitor-accounts', compact('users')); // Correct Blade file name\n-}\n-public function updateRole(Request $request, $id)\n-{\n-    $request->validate([\n-        'role' => 'required|string|in:admin,user',\n-    ]);\n-\n-    $user = UserSystem::findOrFail($id);\n-    $user->role = $request->role;\n-    $user->save();\n-\n-    return redirect()->route('monitor')->with('success', 'Role updated successfully!');\n-}\n-\n-public function deleteUser($id)\n-{\n-    $user = UserSystem::findOrFail($id);\n-    $user->delete();\n-\n-    return redirect()->route('monitor')->with('success', 'User deleted successfully!');\n-}\n-\n-\n-}\n"
                },
                {
                    "date": 1733256129638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,122 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\UserSystem;\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Hash;\n+use Illuminate\\Support\\Facades\\Session;\n+\n+class UserSystemController extends Controller\n+{\n+    // Registration methods (unchanged)\n+    public function create()\n+    {\n+        return view('register');\n+    }\n+\n+    // Registration methods (unchanged)\n+    public function createCv()\n+    {\n+        return view('create_cv');\n+    }\n+\n+\n+\n+    \n+\n+    public function register_users(Request $request)\n+    {\n+        $request->validate([\n+            'firstname' => 'required|string|max:255',\n+            'lastname' => 'required|string|max:255',\n+            'username' => 'required|string|max:255|unique:user_system,username',\n+            'password' => 'required|string|min:8',\n+            'email' => 'required|email|max:255|unique:user_system,email',\n+            'number' => 'required|string|max:15',\n+            'role' => 'required|string|in:admin,user', \n+        ]);\n+\n+        UserSystem::create([\n+            'firstname' => $request->firstname,\n+            'lastname' => $request->lastname,\n+            'username' => $request->username,\n+            'password' => Hash::make($request->password),\n+            'email' => $request->email,\n+            'number' => $request->number,\n+            'role' => $request->role, \n+        ]);\n+\n+        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n+    }\n+\n+    // Login methods\n+    public function loginForm()\n+    {\n+        return view('login');\n+    }\n+\n+    public function processLogin(Request $request)\n+{\n+    $request->validate([\n+        'username' => 'required|string',\n+        'password' => 'required|string',\n+    ]);\n+\n+    // Find the user by username\n+    $user = UserSystem::where('username', $request->username)->first();\n+\n+    // Check if user exists and password is correct\n+    if ($user && Hash::check($request->password, $user->password)) {\n+        // Store essential user data in session\n+        Session::put('user', [\n+            'id' => $user->id,\n+            'firstname' => $user->firstname,\n+            'lastname' => $user->lastname,\n+            'role' => $user->role,\n+        ]);\n+\n+        // Redirect to dashboard with a welcome message\n+        return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n+    }\n+\n+    // Login failed\n+    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n+}\n+\n+\n+\n+public function logout()\n+{\n+    Session::forget('user');\n+    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n+}\n+\n+public function monitorAccountsss()\n+{\n+    $users = UserSystem::all(); // Fetch all users\n+    return view('monitor-accounts', compact('users')); // Correct Blade file name\n+}\n+public function updateRole(Request $request, $id)\n+{\n+    $request->validate([\n+        'role' => 'required|string|in:admin,user',\n+    ]);\n+\n+    $user = UserSystem::findOrFail($id);\n+    $user->role = $request->role;\n+    $user->save();\n+\n+    return redirect()->route('monitor')->with('success', 'Role updated successfully!');\n+}\n+\n+public function deleteUser($id)\n+{\n+    $user = UserSystem::findOrFail($id);\n+    $user->delete();\n+\n+    return redirect()->route('monitor')->with('success', 'User deleted successfully!');\n+}\n+\n+\n+}\n"
                },
                {
                    "date": 1733292276185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,159 +56,28 @@\n         return view('login');\n     }\n \n     public function processLogin(Request $request)\n-{\n-    $request->validate([\n-        'username' => 'required|string',\n-        'password' => 'required|string',\n-    ]);\n-\n-    // Find the user by username\n-    $user = UserSystem::where('username', $request->username)->first();\n-\n-    // Check if user exists and password is correct\n-    if ($user && Hash::check($request->password, $user->password)) {\n-        // Store essential user data in session\n-        Session::put('user', [\n-            'id' => $user->id,\n-            'firstname' => $user->firstname,\n-            'lastname' => $user->lastname,\n-            'role' => $user->role,\n-        ]);\n-\n-        // Redirect to dashboard with a welcome message\n-        return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n-    }\n-\n-    // Login failed\n-    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n-}\n-\n-\n-\n-public function logout()\n-{\n-    Session::forget('user');\n-    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n-}\n-\n-public function monitorAccountsss()\n-{\n-    $users = UserSystem::all(); // Fetch all users\n-    return view('monitor-accounts', compact('users')); // Correct Blade file name\n-}\n-public function updateRole(Request $request, $id)\n-{\n-    $request->validate([\n-        'role' => 'required|string|in:admin,user',\n-    ]);\n-\n-    $user = UserSystem::findOrFail($id);\n-    $user->role = $request->role;\n-    $user->save();\n-\n-    return redirect()->route('monitor')->with('success', 'Role updated successfully!');\n-}\n-\n-public function deleteUser($id)\n-{\n-    $user = UserSystem::findOrFail($id);\n-    $user->delete();\n-\n-    return redirect()->route('monitor')->with('success', 'User deleted successfully!');\n-}\n-\n-\n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\UserSystem;\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Support\\Facades\\Hash;\n-use Illuminate\\Support\\Facades\\Session;\n-\n-class UserSystemController extends Controller\n-{\n-    // Registration methods (unchanged)\n-    public function create()\n     {\n-        return view('register');\n-    }\n-\n-    // Registration methods (unchanged)\n-    public function createCv()\n-    {\n-        return view('create_cv');\n-    }\n-\n-\n-\n+        $credentials = $request->only('username', 'password');\n     \n-\n-    public function register_users(Request $request)\n-    {\n-        $request->validate([\n-            'firstname' => 'required|string|max:255',\n-            'lastname' => 'required|string|max:255',\n-            'username' => 'required|string|max:255|unique:user_system,username',\n-            'password' => 'required|string|min:8',\n-            'email' => 'required|email|max:255|unique:user_system,email',\n-            'number' => 'required|string|max:15',\n-            'role' => 'required|string|in:admin,user', \n-        ]);\n-\n-        UserSystem::create([\n-            'firstname' => $request->firstname,\n-            'lastname' => $request->lastname,\n-            'username' => $request->username,\n-            'password' => Hash::make($request->password),\n-            'email' => $request->email,\n-            'number' => $request->number,\n-            'role' => $request->role, \n-        ]);\n-\n-        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n+        if (Auth::attempt($credentials)) {\n+            $user = Auth::user();\n+    \n+            if ($user->role === 'admin') {\n+                return redirect('resources/views/dashboard.blade.php'); // Adjust to route if needed\n+            } elseif ($user->role === 'user') {\n+                return redirect('resources/views/userdashboard.blade.php'); // Adjust to route if needed\n+            } else {\n+                Auth::logout();\n+                return back()->withErrors(['login_error' => 'Unauthorized role.']);\n+            }\n+        } else {\n+            return back()->withErrors(['login_error' => 'Invalid credentials.']);\n+        }\n     }\n \n-    // Login methods\n-    public function loginForm()\n-    {\n-        return view('login');\n-    }\n \n-    public function processLogin(Request $request)\n-{\n-    $request->validate([\n-        'username' => 'required|string',\n-        'password' => 'required|string',\n-    ]);\n-\n-    // Find the user by username\n-    $user = UserSystem::where('username', $request->username)->first();\n-\n-    // Check if user exists and password is correct\n-    if ($user && Hash::check($request->password, $user->password)) {\n-        // Store essential user data in session\n-        Session::put('user', [\n-            'id' => $user->id,\n-            'firstname' => $user->firstname,\n-            'lastname' => $user->lastname,\n-            'role' => $user->role,\n-        ]);\n-\n-        // Redirect to dashboard with a welcome message\n-        return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n-    }\n-\n-    // Login failed\n-    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n-}\n-\n-\n-\n public function logout()\n {\n     Session::forget('user');\n     return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n"
                },
                {
                    "date": 1733292535541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,17 +59,17 @@\n     public function processLogin(Request $request)\n     {\n         $credentials = $request->only('username', 'password');\n     \n-        if (Auth::attempt($credentials)) {\n-            $user = Auth::user();\n+        if (UserSystem::attempt($credentials)) {\n+            $user = UserSystem::user();\n     \n             if ($user->role === 'admin') {\n                 return redirect('resources/views/dashboard.blade.php'); // Adjust to route if needed\n             } elseif ($user->role === 'user') {\n                 return redirect('resources/views/userdashboard.blade.php'); // Adjust to route if needed\n             } else {\n-                Auth::logout();\n+                UserSystem::logout();\n                 return back()->withErrors(['login_error' => 'Unauthorized role.']);\n             }\n         } else {\n             return back()->withErrors(['login_error' => 'Invalid credentials.']);\n"
                },
                {
                    "date": 1733292576805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,17 +59,17 @@\n     public function processLogin(Request $request)\n     {\n         $credentials = $request->only('username', 'password');\n     \n-        if (UserSystem::attempt($credentials)) {\n-            $user = UserSystem::user();\n+        if (Auth::attempt($credentials)) {\n+            $user = Auth::user();\n     \n             if ($user->role === 'admin') {\n                 return redirect('resources/views/dashboard.blade.php'); // Adjust to route if needed\n             } elseif ($user->role === 'user') {\n                 return redirect('resources/views/userdashboard.blade.php'); // Adjust to route if needed\n             } else {\n-                UserSystem::logout();\n+                Auth::logout();\n                 return back()->withErrors(['login_error' => 'Unauthorized role.']);\n             }\n         } else {\n             return back()->withErrors(['login_error' => 'Invalid credentials.']);\n"
                },
                {
                    "date": 1733292933411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,28 +56,41 @@\n         return view('login');\n     }\n \n     public function processLogin(Request $request)\n-    {\n-        $credentials = $request->only('username', 'password');\n-    \n-        if (Auth::attempt($credentials)) {\n-            $user = Auth::user();\n-    \n-            if ($user->role === 'admin') {\n-                return redirect('resources/views/dashboard.blade.php'); // Adjust to route if needed\n-            } elseif ($user->role === 'user') {\n-                return redirect('resources/views/userdashboard.blade.php'); // Adjust to route if needed\n-            } else {\n-                Auth::logout();\n-                return back()->withErrors(['login_error' => 'Unauthorized role.']);\n-            }\n-        } else {\n-            return back()->withErrors(['login_error' => 'Invalid credentials.']);\n+{\n+    $request->validate([\n+        'username' => 'required|string',\n+        'password' => 'required|string',\n+    ]);\n+\n+    // Find the user by username\n+    $user = UserSystem::where('username', $request->username)->first();\n+\n+    // Check if user exists and password is correct\n+    if ($user && Hash::check($request->password, $user->password)) {\n+        // Store essential user data in session\n+        Session::put('user', [\n+            'id' => $user->id,\n+            'firstname' => $user->firstname,\n+            'lastname' => $user->lastname,\n+            'role' => $user->role,\n+        ]);\n+\n+        // Redirect based on role\n+        if ($user->role === 'admin') {\n+            return redirect()->route('admin.dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n+        } elseif ($user->role === 'user') {\n+            return redirect()->route('user.dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n         }\n     }\n \n+    // Login failed\n+    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n+}\n \n+\n+\n public function logout()\n {\n     Session::forget('user');\n     return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n"
                },
                {
                    "date": 1733293344558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,11 +77,11 @@\n         ]);\n \n         // Redirect based on role\n         if ($user->role === 'admin') {\n-            return redirect()->route('admin.dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n+            return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n         } elseif ($user->role === 'user') {\n-            return redirect()->route('user.dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n+            return redirect()->route('userdashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n         }\n     }\n \n     // Login failed\n"
                },
                {
                    "date": 1733300132978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,123 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\UserSystem;\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Hash;\n+use Illuminate\\Support\\Facades\\Session;\n+\n+class UserSystemController extends Controller\n+{\n+    // Registration methods (unchanged)\n+    public function create()\n+    {\n+        return view('register');\n+    }\n+\n+    // Registration methods (unchanged)\n+    public function createCv()\n+    {\n+        return view('create_cv');\n+    }\n+\n+\n+\n+    \n+\n+    public function register_users(Request $request)\n+    {\n+        $request->validate([\n+            'firstname' => 'required|string|max:255',\n+            'lastname' => 'required|string|max:255',\n+            'username' => 'required|string|max:255|unique:user_system,username',\n+            'password' => 'required|string|min:8',\n+            'email' => 'required|email|max:255|unique:user_system,email',\n+            'number' => 'required|string|max:15',\n+            'role' => 'required|string|in:admin,user', \n+        ]);\n+\n+        UserSystem::create([\n+            'firstname' => $request->firstname,\n+            'lastname' => $request->lastname,\n+            'username' => $request->username,\n+            'password' => Hash::make($request->password),\n+            'email' => $request->email,\n+            'number' => $request->number,\n+            'role' => $request->role, \n+        ]);\n+\n+        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n+    }\n+\n+    // Login methods\n+    public function loginForm()\n+    {\n+        return view('login');\n+    }\n+\n+    public function processLogin(Request $request)\n+{\n+    $request->validate([\n+        'username' => 'required|string',\n+        'password' => 'required|string',\n+    ]);\n+\n+    // Find the user by username\n+    $user = UserSystem::where('username', $request->username)->first();\n+\n+    // Check if user exists and password is correct\n+    if (Auth::attempt($request->only('username', 'password'))) {\n+        $user = Auth::user();\n+        // Store additional details in session if needed\n+        Session::put('user', [\n+            'id' => $user->id,\n+            'firstname' => $user->firstname,\n+            'lastname' => $user->lastname,\n+            'role' => $user->role,\n+        ]);\n+        return $user->role === 'admin'\n+            ? redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!')\n+            : redirect()->route('userdashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n+    }\n+\n+    // Login failed\n+    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n+}\n+\n+\n+\n+public function logout()\n+{\n+    Session::forget('user');\n+    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n+}\n+\n+public function monitorAccountsss()\n+{\n+    $users = UserSystem::all(); // Fetch all users\n+    return view('monitor-accounts', compact('users')); // Correct Blade file name\n+}\n+public function updateRole(Request $request, $id)\n+{\n+    $request->validate([\n+        'role' => 'required|string|in:admin,user',\n+    ]);\n+\n+    $user = UserSystem::findOrFail($id);\n+    $user->role = $request->role;\n+    $user->save();\n+\n+    return redirect()->route('monitor')->with('success', 'Role updated successfully!');\n+}\n+\n+public function deleteUser($id)\n+{\n+    $user = UserSystem::findOrFail($id);\n+    $user->delete();\n+\n+    return redirect()->route('monitor')->with('success', 'User deleted successfully!');\n+}\n+\n+\n+}\n"
                },
                {
                    "date": 1733300255195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n use App\\Models\\UserSystem;\n use Illuminate\\Http\\Request;\n use Illuminate\\Support\\Facades\\Hash;\n use Illuminate\\Support\\Facades\\Session;\n+use App\\Http\\Controllers\\Auth\n \n class UserSystemController extends Controller\n {\n     // Registration methods (unchanged)\n@@ -120,130 +121,4 @@\n }\n \n \n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\UserSystem;\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Support\\Facades\\Hash;\n-use Illuminate\\Support\\Facades\\Session;\n-\n-class UserSystemController extends Controller\n-{\n-    // Registration methods (unchanged)\n-    public function create()\n-    {\n-        return view('register');\n-    }\n-\n-    // Registration methods (unchanged)\n-    public function createCv()\n-    {\n-        return view('create_cv');\n-    }\n-\n-\n-\n-    \n-\n-    public function register_users(Request $request)\n-    {\n-        $request->validate([\n-            'firstname' => 'required|string|max:255',\n-            'lastname' => 'required|string|max:255',\n-            'username' => 'required|string|max:255|unique:user_system,username',\n-            'password' => 'required|string|min:8',\n-            'email' => 'required|email|max:255|unique:user_system,email',\n-            'number' => 'required|string|max:15',\n-            'role' => 'required|string|in:admin,user', \n-        ]);\n-\n-        UserSystem::create([\n-            'firstname' => $request->firstname,\n-            'lastname' => $request->lastname,\n-            'username' => $request->username,\n-            'password' => Hash::make($request->password),\n-            'email' => $request->email,\n-            'number' => $request->number,\n-            'role' => $request->role, \n-        ]);\n-\n-        return redirect()->route('register_user_view')->with('success', 'User registered successfully!');\n-    }\n-\n-    // Login methods\n-    public function loginForm()\n-    {\n-        return view('login');\n-    }\n-\n-    public function processLogin(Request $request)\n-{\n-    $request->validate([\n-        'username' => 'required|string',\n-        'password' => 'required|string',\n-    ]);\n-\n-    // Find the user by username\n-    $user = UserSystem::where('username', $request->username)->first();\n-\n-    // Check if user exists and password is correct\n-    if ($user && Hash::check($request->password, $user->password)) {\n-        // Store essential user data in session\n-        Session::put('user', [\n-            'id' => $user->id,\n-            'firstname' => $user->firstname,\n-            'lastname' => $user->lastname,\n-            'role' => $user->role,\n-        ]);\n-\n-        // Redirect based on role\n-        if ($user->role === 'admin') {\n-            return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n-        } elseif ($user->role === 'user') {\n-            return redirect()->route('userdashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n-        }\n-    }\n-\n-    // Login failed\n-    return back()->withErrors(['login_error' => 'Invalid username or password.']);\n-}\n-\n-\n-\n-public function logout()\n-{\n-    Session::forget('user');\n-    return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n-}\n-\n-public function monitorAccountsss()\n-{\n-    $users = UserSystem::all(); // Fetch all users\n-    return view('monitor-accounts', compact('users')); // Correct Blade file name\n-}\n-public function updateRole(Request $request, $id)\n-{\n-    $request->validate([\n-        'role' => 'required|string|in:admin,user',\n-    ]);\n-\n-    $user = UserSystem::findOrFail($id);\n-    $user->role = $request->role;\n-    $user->save();\n-\n-    return redirect()->route('monitor')->with('success', 'Role updated successfully!');\n-}\n-\n-public function deleteUser($id)\n-{\n-    $user = UserSystem::findOrFail($id);\n-    $user->delete();\n-\n-    return redirect()->route('monitor')->with('success', 'User deleted successfully!');\n-}\n-\n-\n-}\n"
                },
                {
                    "date": 1733300263913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n use App\\Models\\UserSystem;\n use Illuminate\\Http\\Request;\n use Illuminate\\Support\\Facades\\Hash;\n use Illuminate\\Support\\Facades\\Session;\n-use App\\Http\\Controllers\\Auth\n+use App\\Http\\Controllers\\Auth;\n \n class UserSystemController extends Controller\n {\n     // Registration methods (unchanged)\n"
                },
                {
                    "date": 1733300327800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n use App\\Models\\UserSystem;\n use Illuminate\\Http\\Request;\n use Illuminate\\Support\\Facades\\Hash;\n use Illuminate\\Support\\Facades\\Session;\n-use App\\Http\\Controllers\\Auth;\n \n+\n class UserSystemController extends Controller\n {\n     // Registration methods (unchanged)\n     public function create()\n"
                },
                {
                    "date": 1733300353467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,8 @@\n use Illuminate\\Http\\Request;\n use Illuminate\\Support\\Facades\\Hash;\n use Illuminate\\Support\\Facades\\Session;\n \n-\n class UserSystemController extends Controller\n {\n     // Registration methods (unchanged)\n     public function create()\n@@ -67,20 +66,23 @@\n     // Find the user by username\n     $user = UserSystem::where('username', $request->username)->first();\n \n     // Check if user exists and password is correct\n-    if (Auth::attempt($request->only('username', 'password'))) {\n-        $user = Auth::user();\n-        // Store additional details in session if needed\n+    if ($user && Hash::check($request->password, $user->password)) {\n+        // Store essential user data in session\n         Session::put('user', [\n             'id' => $user->id,\n             'firstname' => $user->firstname,\n             'lastname' => $user->lastname,\n             'role' => $user->role,\n         ]);\n-        return $user->role === 'admin'\n-            ? redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!')\n-            : redirect()->route('userdashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n+\n+        // Redirect based on role\n+        if ($user->role === 'admin') {\n+            return redirect()->route('dashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n+        } elseif ($user->role === 'user') {\n+            return redirect()->route('userdashboard')->with('success', 'Welcome back, ' . $user->firstname . '!');\n+        }\n     }\n \n     // Login failed\n     return back()->withErrors(['login_error' => 'Invalid username or password.']);\n"
                },
                {
                    "date": 1733300508618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n     $user = UserSystem::where('username', $request->username)->first();\n \n     // Check if user exists and password is correct\n     if ($user && Hash::check($request->password, $user->password)) {\n-        // Store essential user data in session\n+        // Store user data in session\n         Session::put('user', [\n             'id' => $user->id,\n             'firstname' => $user->firstname,\n             'lastname' => $user->lastname,\n@@ -88,9 +88,8 @@\n     return back()->withErrors(['login_error' => 'Invalid username or password.']);\n }\n \n \n-\n public function logout()\n {\n     Session::forget('user');\n     return redirect()->route('user.loginForm')->with('success', 'Logged out successfully!');\n"
                }
            ],
            "date": 1732855623437,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\UserSystem;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Hash;\n\nclass UserSystemController extends Controller\n{\n    public function create()\n    {\n        return view('register'); // Load the registration view\n    }\n\n    public function store(Request $request)\n    {\n        // Validate input\n        $request->validate([\n            'firstname' => 'required|string|max:255',\n            'lastname' => 'required|string|max:255',\n            'username' => 'required|string|max:255|unique:user_system,username',\n            'password' => 'required|string|min:8',\n            'email' => 'required|email|max:255|unique:user_system,email',\n            'number' => 'required|string|max:15',\n        ]);\n\n        // Create the user\n        UserSystem::create([\n            'firstname' => $request->firstname,\n            'lastname' => $request->lastname,\n            'username' => $request->username,\n            'password' => Hash::make($request->password), // Hash the password\n            'email' => $request->email,\n            'number' => $request->number,\n        ]);\n\n        return redirect()->back()->with('success', 'Registration successful!');\n    }\n}\n"
        }
    ]
}