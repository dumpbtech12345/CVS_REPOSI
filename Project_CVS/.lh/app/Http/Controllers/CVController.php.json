{
    "sourceFile": "app/Http/Controllers/CVController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 165,
            "patches": [
                {
                    "date": 1732903631162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732905359041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,19 +55,8 @@\n             'end_date.*' => 'nullable|date',\n             'responsibilities' => 'nullable|array',\n             'responsibilities.*' => 'string',\n \n-            // Education\n-            'degree' => 'nullable|array',\n-            'degree.*' => 'string|max:255',\n-            'school_name' => 'nullable|array',\n-            'school_name.*' => 'string|max:255',\n-            'field_of_study' => 'nullable|array',\n-            'field_of_study.*' => 'nullable|string|max:255',\n-            'edu_start_date' => 'nullable|array',\n-            'edu_start_date.*' => 'date',\n-            'graduation_date' => 'nullable|array',\n-            'graduation_date.*' => 'nullable|date',\n \n             // Certificates\n             'certificate_name' => 'nullable|array',\n             'certificate_name.*' => 'string|max:255',\n"
                },
                {
                    "date": 1732905379038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,21 +100,9 @@\n                 ]);\n             }\n         }\n \n-        // Save education\n-        if (!empty($validatedData['degree'])) {\n-            foreach ($validatedData['degree'] as $index => $degree) {\n-                Education::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'degree' => $degree,\n-                    'school_name' => $validatedData['school_name'][$index],\n-                    'field_of_study' => $validatedData['field_of_study'][$index] ?? null,\n-                    'start_date' => $validatedData['edu_start_date'][$index],\n-                    'graduation_date' => $validatedData['graduation_date'][$index] ?? null,\n-                ]);\n-            }\n-        }\n+       \n \n         // Save certificates\n         if (!empty($validatedData['certificate_name'])) {\n             foreach ($validatedData['certificate_name'] as $index => $certificateName) {\n"
                },
                {
                    "date": 1732905419801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,121 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function create()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+    {\n+        // Validate incoming data\n+        $validatedData = $request->validate([\n+            'first_name' => 'required|string|max:255',\n+            'last_name' => 'required|string|max:255',\n+            'email' => 'required|email|max:255',\n+            'phone' => 'required|string|max:15',\n+            'linkedin_url' => 'nullable|url',\n+            'address' => 'required|string|max:500',\n+\n+            // Skills\n+            'skills' => 'nullable|array',\n+            'skills.*' => 'string|max:255',\n+\n+            // Work Experience\n+            'job_title' => 'nullable|array',\n+            'job_title.*' => 'string|max:255',\n+            'company_name' => 'nullable|array',\n+            'company_name.*' => 'string|max:255',\n+            'location' => 'nullable|array',\n+            'location.*' => 'string|max:255',\n+            'start_date' => 'nullable|array',\n+            'start_date.*' => 'date',\n+            'end_date' => 'nullable|array',\n+            'end_date.*' => 'nullable|date',\n+            'responsibilities' => 'nullable|array',\n+            'responsibilities.*' => 'string',\n+\n+\n+            // Certificates\n+            'certificate_name' => 'nullable|array',\n+            'certificate_name.*' => 'string|max:255',\n+            'issuing_organization' => 'nullable|array',\n+            'issuing_organization.*' => 'string|max:255',\n+            'issue_date' => 'nullable|array',\n+            'issue_date.*' => 'date',\n+        ]);\n+\n+        // Save personal info\n+        $personalInfo = PersonalInfo::create([\n+            'first_name' => $validatedData['first_name'],\n+            'last_name' => $validatedData['last_name'],\n+            'email' => $validatedData['email'],\n+            'phone' => $validatedData['phone'],\n+            'linkedin_url' => $validatedData['linkedin_url'] ?? null,\n+            'address' => $validatedData['address'],\n+        ]);\n+\n+        // Save skills\n+        if (!empty($validatedData['skills'])) {\n+            foreach ($validatedData['skills'] as $skill) {\n+                Skill::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'name' => $skill,\n+                ]);\n+            }\n+        }\n+\n+        // Save work experiences\n+        if (!empty($validatedData['job_title'])) {\n+            foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+                WorkExperience::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'job_title' => $jobTitle,\n+                    'company_name' => $validatedData['company_name'][$index],\n+                    'location' => $validatedData['location'][$index],\n+                    'start_date' => $validatedData['start_date'][$index],\n+                    'end_date' => $validatedData['end_date'][$index] ?? null,\n+                    'responsibilities' => $validatedData['responsibilities'][$index],\n+                ]);\n+            }\n+        }\n+\n+       \n+\n+        // Save certificates\n+        if (!empty($validatedData['certificate_name'])) {\n+            foreach ($validatedData['certificate_name'] as $index => $certificateName) {\n+                Certificate::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'name' => $certificateName,\n+                    'issuing_organization' => $validatedData['issuing_organization'][$index],\n+                    'issue_date' => $validatedData['issue_date'][$index],\n+                ]);\n+            }\n+        }\n+\n+        // Redirect back with success message\n+        return redirect()->route('user.dashboard')->with('success', 'CV Created Successfully!');\n+    }\n+}\n"
                },
                {
                    "date": 1732906413717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,128 +115,7 @@\n             }\n         }\n \n         // Redirect back with success message\n-        return redirect()->route('user.dashboard')->with('success', 'CV Created Successfully!');\n+        return redirect()->route('user.create_cv')->with('success', 'CV Created Successfully!');\n     }\n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function create()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-    {\n-        // Validate incoming data\n-        $validatedData = $request->validate([\n-            'first_name' => 'required|string|max:255',\n-            'last_name' => 'required|string|max:255',\n-            'email' => 'required|email|max:255',\n-            'phone' => 'required|string|max:15',\n-            'linkedin_url' => 'nullable|url',\n-            'address' => 'required|string|max:500',\n-\n-            // Skills\n-            'skills' => 'nullable|array',\n-            'skills.*' => 'string|max:255',\n-\n-            // Work Experience\n-            'job_title' => 'nullable|array',\n-            'job_title.*' => 'string|max:255',\n-            'company_name' => 'nullable|array',\n-            'company_name.*' => 'string|max:255',\n-            'location' => 'nullable|array',\n-            'location.*' => 'string|max:255',\n-            'start_date' => 'nullable|array',\n-            'start_date.*' => 'date',\n-            'end_date' => 'nullable|array',\n-            'end_date.*' => 'nullable|date',\n-            'responsibilities' => 'nullable|array',\n-            'responsibilities.*' => 'string',\n-\n-\n-            // Certificates\n-            'certificate_name' => 'nullable|array',\n-            'certificate_name.*' => 'string|max:255',\n-            'issuing_organization' => 'nullable|array',\n-            'issuing_organization.*' => 'string|max:255',\n-            'issue_date' => 'nullable|array',\n-            'issue_date.*' => 'date',\n-        ]);\n-\n-        // Save personal info\n-        $personalInfo = PersonalInfo::create([\n-            'first_name' => $validatedData['first_name'],\n-            'last_name' => $validatedData['last_name'],\n-            'email' => $validatedData['email'],\n-            'phone' => $validatedData['phone'],\n-            'linkedin_url' => $validatedData['linkedin_url'] ?? null,\n-            'address' => $validatedData['address'],\n-        ]);\n-\n-        // Save skills\n-        if (!empty($validatedData['skills'])) {\n-            foreach ($validatedData['skills'] as $skill) {\n-                Skill::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'name' => $skill,\n-                ]);\n-            }\n-        }\n-\n-        // Save work experiences\n-        if (!empty($validatedData['job_title'])) {\n-            foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-                WorkExperience::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'job_title' => $jobTitle,\n-                    'company_name' => $validatedData['company_name'][$index],\n-                    'location' => $validatedData['location'][$index],\n-                    'start_date' => $validatedData['start_date'][$index],\n-                    'end_date' => $validatedData['end_date'][$index] ?? null,\n-                    'responsibilities' => $validatedData['responsibilities'][$index],\n-                ]);\n-            }\n-        }\n-\n-       \n-\n-        // Save certificates\n-        if (!empty($validatedData['certificate_name'])) {\n-            foreach ($validatedData['certificate_name'] as $index => $certificateName) {\n-                Certificate::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'name' => $certificateName,\n-                    'issuing_organization' => $validatedData['issuing_organization'][$index],\n-                    'issue_date' => $validatedData['issue_date'][$index],\n-                ]);\n-            }\n-        }\n-\n-        // Redirect back with success message\n-        return redirect()->route('user.dashboard')->with('success', 'CV Created Successfully!');\n-    }\n-}\n"
                },
                {
                    "date": 1732906617524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,8 +55,19 @@\n             'end_date.*' => 'nullable|date',\n             'responsibilities' => 'nullable|array',\n             'responsibilities.*' => 'string',\n \n+            // Education\n+            'degree' => 'nullable|array',\n+            'degree.*' => 'string|max:255',\n+            'school_name' => 'nullable|array',\n+            'school_name.*' => 'string|max:255',\n+            'field_of_study' => 'nullable|array',\n+            'field_of_study.*' => 'nullable|string|max:255',\n+            'edu_start_date' => 'nullable|array',\n+            'edu_start_date.*' => 'date',\n+            'graduation_date' => 'nullable|array',\n+            'graduation_date.*' => 'nullable|date',\n \n             // Certificates\n             'certificate_name' => 'nullable|array',\n             'certificate_name.*' => 'string|max:255',\n@@ -100,9 +111,21 @@\n                 ]);\n             }\n         }\n \n-       \n+        // Save education\n+        if (!empty($validatedData['degree'])) {\n+            foreach ($validatedData['degree'] as $index => $degree) {\n+                Education::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'degree' => $degree,\n+                    'school_name' => $validatedData['school_name'][$index],\n+                    'field_of_study' => $validatedData['field_of_study'][$index] ?? null,\n+                    'start_date' => $validatedData['edu_start_date'][$index],\n+                    'graduation_date' => $validatedData['graduation_date'][$index] ?? null,\n+                ]);\n+            }\n+        }\n \n         // Save certificates\n         if (!empty($validatedData['certificate_name'])) {\n             foreach ($validatedData['certificate_name'] as $index => $certificateName) {\n"
                },
                {
                    "date": 1732908192406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,118 +27,117 @@\n      * @param  \\Illuminate\\Http\\Request  $request\n      * @return \\Illuminate\\Http\\RedirectResponse\n      */\n     public function store(Request $request)\n-    {\n-        // Validate incoming data\n-        $validatedData = $request->validate([\n-            'first_name' => 'required|string|max:255',\n-            'last_name' => 'required|string|max:255',\n-            'email' => 'required|email|max:255',\n-            'phone' => 'required|string|max:15',\n-            'linkedin_url' => 'nullable|url',\n-            'address' => 'required|string|max:500',\n+{\n+    // Validate incoming data\n+    $validatedData = $request->validate([\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'linkedin_url' => 'nullable|url',\n+        'address' => 'required|string|max:500',\n \n-            // Skills\n-            'skills' => 'nullable|array',\n-            'skills.*' => 'string|max:255',\n+        // Skills\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n \n-            // Work Experience\n-            'job_title' => 'nullable|array',\n-            'job_title.*' => 'string|max:255',\n-            'company_name' => 'nullable|array',\n-            'company_name.*' => 'string|max:255',\n-            'location' => 'nullable|array',\n-            'location.*' => 'string|max:255',\n-            'start_date' => 'nullable|array',\n-            'start_date.*' => 'date',\n-            'end_date' => 'nullable|array',\n-            'end_date.*' => 'nullable|date',\n-            'responsibilities' => 'nullable|array',\n-            'responsibilities.*' => 'string',\n+        // Work Experience\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n \n-            // Education\n-            'degree' => 'nullable|array',\n-            'degree.*' => 'string|max:255',\n-            'school_name' => 'nullable|array',\n-            'school_name.*' => 'string|max:255',\n-            'field_of_study' => 'nullable|array',\n-            'field_of_study.*' => 'nullable|string|max:255',\n-            'edu_start_date' => 'nullable|array',\n-            'edu_start_date.*' => 'date',\n-            'graduation_date' => 'nullable|array',\n-            'graduation_date.*' => 'nullable|date',\n+        // Education\n+        'school_name' => 'nullable|array',\n+        'school_name.*' => 'string|max:255',\n+        'degree' => 'nullable|array',\n+        'degree.*' => 'string|max:255',\n+        'field_of_study' => 'nullable|array',\n+        'field_of_study.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'graduation_date' => 'nullable|array',\n+        'graduation_date.*' => 'nullable|date',\n \n-            // Certificates\n-            'certificate_name' => 'nullable|array',\n-            'certificate_name.*' => 'string|max:255',\n-            'issuing_organization' => 'nullable|array',\n-            'issuing_organization.*' => 'string|max:255',\n-            'issue_date' => 'nullable|array',\n-            'issue_date.*' => 'date',\n-        ]);\n+        // Certificates\n+        'certificate_name' => 'nullable|array',\n+        'certificate_name.*' => 'string|max:255',\n+        'issuing_organization' => 'nullable|array',\n+        'issuing_organization.*' => 'string|max:255',\n+        'issue_date' => 'nullable|array',\n+        'issue_date.*' => 'date',\n+    ]);\n \n-        // Save personal info\n-        $personalInfo = PersonalInfo::create([\n-            'first_name' => $validatedData['first_name'],\n-            'last_name' => $validatedData['last_name'],\n-            'email' => $validatedData['email'],\n-            'phone' => $validatedData['phone'],\n-            'linkedin_url' => $validatedData['linkedin_url'] ?? null,\n-            'address' => $validatedData['address'],\n-        ]);\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'linkedin_url' => $validatedData['linkedin_url'] ?? null,\n+        'address' => $validatedData['address'],\n+    ]);\n \n-        // Save skills\n-        if (!empty($validatedData['skills'])) {\n-            foreach ($validatedData['skills'] as $skill) {\n-                Skill::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'name' => $skill,\n-                ]);\n-            }\n+    // Save skills\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n         }\n+    }\n \n-        // Save work experiences\n-        if (!empty($validatedData['job_title'])) {\n-            foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-                WorkExperience::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'job_title' => $jobTitle,\n-                    'company_name' => $validatedData['company_name'][$index],\n-                    'location' => $validatedData['location'][$index],\n-                    'start_date' => $validatedData['start_date'][$index],\n-                    'end_date' => $validatedData['end_date'][$index] ?? null,\n-                    'responsibilities' => $validatedData['responsibilities'][$index],\n-                ]);\n-            }\n+    // Save work experiences\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index],\n+                'location' => $validatedData['location'][$index],\n+                'start_date' => $validatedData['start_date'][$index],\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index],\n+            ]);\n         }\n+    }\n \n-        // Save education\n-        if (!empty($validatedData['degree'])) {\n-            foreach ($validatedData['degree'] as $index => $degree) {\n-                Education::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'degree' => $degree,\n-                    'school_name' => $validatedData['school_name'][$index],\n-                    'field_of_study' => $validatedData['field_of_study'][$index] ?? null,\n-                    'start_date' => $validatedData['edu_start_date'][$index],\n-                    'graduation_date' => $validatedData['graduation_date'][$index] ?? null,\n-                ]);\n-            }\n+    // Save education\n+    if (!empty($validatedData['school_name'])) {\n+        foreach ($validatedData['school_name'] as $index => $schoolName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'school_name' => $schoolName,\n+                'degree' => $validatedData['degree'][$index] ?? null,\n+                'field_of_study' => $validatedData['field_of_study'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['graduation_date'][$index] ?? null,\n+            ]);\n         }\n+    }\n \n-        // Save certificates\n-        if (!empty($validatedData['certificate_name'])) {\n-            foreach ($validatedData['certificate_name'] as $index => $certificateName) {\n-                Certificate::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'name' => $certificateName,\n-                    'issuing_organization' => $validatedData['issuing_organization'][$index],\n-                    'issue_date' => $validatedData['issue_date'][$index],\n-                ]);\n-            }\n+    // Save certificates\n+    if (!empty($validatedData['certificate_name'])) {\n+        foreach ($validatedData['certificate_name'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organization'][$index],\n+                'issue_date' => $validatedData['issue_date'][$index],\n+            ]);\n         }\n+    }\n \n-        // Redirect back with success message\n-        return redirect()->route('user.create_cv')->with('success', 'CV Created Successfully!');\n-    }\n+    // Redirect back with success message\n+    return redirect()->route('user.create_cv')->with('success', 'CV Created Successfully!');\n }\n"
                },
                {
                    "date": 1732908204658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,4 +140,5 @@\n \n     // Redirect back with success message\n     return redirect()->route('user.create_cv')->with('success', 'CV Created Successfully!');\n }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732908404969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,19 +55,21 @@\n         'end_date.*' => 'nullable|date',\n         'responsibilities' => 'nullable|array',\n         'responsibilities.*' => 'string',\n \n-        // Education\n-        'school_name' => 'nullable|array',\n-        'school_name.*' => 'string|max:255',\n-        'degree' => 'nullable|array',\n-        'degree.*' => 'string|max:255',\n-        'field_of_study' => 'nullable|array',\n-        'field_of_study.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'graduation_date' => 'nullable|array',\n-        'graduation_date.*' => 'nullable|date',\n+       // Education\n+'education_name' => 'nullable|array',\n+'education_name.*' => 'string|max:255',\n+'degree' => 'nullable|array',\n+'degree.*' => 'string|max:255',\n+'school_name' => 'nullable|array',\n+'school_name.*' => 'string|max:255',\n+'field_of_study' => 'nullable|array',\n+'field_of_study.*' => 'string|max:255',\n+'education_start_date' => 'nullable|array',\n+'education_start_date.*' => 'date',\n+'graduation_date' => 'nullable|array',\n+'graduation_date.*' => 'nullable|date',\n \n         // Certificates\n         'certificate_name' => 'nullable|array',\n         'certificate_name.*' => 'string|max:255',\n@@ -111,21 +113,22 @@\n             ]);\n         }\n     }\n \n-    // Save education\n-    if (!empty($validatedData['school_name'])) {\n-        foreach ($validatedData['school_name'] as $index => $schoolName) {\n-            Education::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'school_name' => $schoolName,\n-                'degree' => $validatedData['degree'][$index] ?? null,\n-                'field_of_study' => $validatedData['field_of_study'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['graduation_date'][$index] ?? null,\n-            ]);\n-        }\n+  // Save educations\n+if (!empty($validatedData['education_name'])) {\n+    foreach ($validatedData['education_name'] as $index => $educationName) {\n+        Education::create([\n+            'personal_info_id' => $personalInfo->id,\n+            'name' => $educationName,\n+            'degree' => $validatedData['degree'][$index],\n+            'school_name' => $validatedData['school_name'][$index],\n+            'field_of_study' => $validatedData['field_of_study'][$index],\n+            'start_date' => $validatedData['education_start_date'][$index],\n+            'graduation_date' => $validatedData['graduation_date'][$index],\n+        ]);\n     }\n+}\n \n     // Save certificates\n     if (!empty($validatedData['certificate_name'])) {\n         foreach ($validatedData['certificate_name'] as $index => $certificateName) {\n"
                },
                {
                    "date": 1732942767169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n         'first_name' => 'required|string|max:255',\n         'last_name' => 'required|string|max:255',\n         'email' => 'required|email|max:255',\n         'phone' => 'required|string|max:15',\n-        'linkedin_url' => 'nullable|url',\n+        \n         'address' => 'required|string|max:500',\n \n         // Skills\n         'skills' => 'nullable|array',\n@@ -84,9 +84,9 @@\n         'first_name' => $validatedData['first_name'],\n         'last_name' => $validatedData['last_name'],\n         'email' => $validatedData['email'],\n         'phone' => $validatedData['phone'],\n-        'linkedin_url' => $validatedData['linkedin_url'] ?? null,\n+       \n         'address' => $validatedData['address'],\n     ]);\n \n     // Save skills\n"
                },
                {
                    "date": 1732942971059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,18 +56,18 @@\n         'responsibilities' => 'nullable|array',\n         'responsibilities.*' => 'string',\n \n        // Education\n-'education_name' => 'nullable|array',\n-'education_name.*' => 'string|max:255',\n+'name' => 'nullable|array',\n+'name.*' => 'string|max:255',\n 'degree' => 'nullable|array',\n 'degree.*' => 'string|max:255',\n 'school_name' => 'nullable|array',\n 'school_name.*' => 'string|max:255',\n 'field_of_study' => 'nullable|array',\n 'field_of_study.*' => 'string|max:255',\n-'education_start_date' => 'nullable|array',\n-'education_start_date.*' => 'date',\n+'start_date' => 'nullable|array',\n+'start_date.*' => 'date',\n 'graduation_date' => 'nullable|array',\n 'graduation_date.*' => 'nullable|date',\n \n         // Certificates\n"
                },
                {
                    "date": 1732943027312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,10 +70,10 @@\n 'graduation_date' => 'nullable|array',\n 'graduation_date.*' => 'nullable|date',\n \n         // Certificates\n-        'certificate_name' => 'nullable|array',\n-        'certificate_name.*' => 'string|max:255',\n+        'name' => 'nullable|array',\n+        'name.*' => 'string|max:255',\n         'issuing_organization' => 'nullable|array',\n         'issuing_organization.*' => 'string|max:255',\n         'issue_date' => 'nullable|array',\n         'issue_date.*' => 'date',\n"
                },
                {
                    "date": 1732943076816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,147 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function create()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+{\n+    // Validate incoming data\n+    $validatedData = $request->validate([\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        \n+        'address' => 'required|string|max:500',\n+\n+        // Skills\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+\n+        // Work Experience\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+\n+       // Education\n+'name' => 'nullable|array',\n+'name.*' => 'string|max:255',\n+'degree' => 'nullable|array',\n+'degree.*' => 'string|max:255',\n+'school_name' => 'nullable|array',\n+'school_name.*' => 'string|max:255',\n+'field_of_study' => 'nullable|array',\n+'field_of_study.*' => 'string|max:255',\n+'start_date' => 'nullable|array',\n+'start_date.*' => 'date',\n+'graduation_date' => 'nullable|array',\n+'graduation_date.*' => 'nullable|date',\n+\n+        // Certificates\n+        'name' => 'nullable|array',\n+        'name.*' => 'string|max:255',\n+        'issuing_organization' => 'nullable|array',\n+        'issuing_organization.*' => 'string|max:255',\n+        'issue_date' => 'nullable|array',\n+        'issue_date.*' => 'date',\n+    ]);\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+       \n+        'address' => $validatedData['address'],\n+    ]);\n+\n+    // Save skills\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+\n+    // Save work experiences\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index],\n+                'location' => $validatedData['location'][$index],\n+                'start_date' => $validatedData['start_date'][$index],\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index],\n+            ]);\n+        }\n+    }\n+\n+  // Save educations\n+if (!empty($validatedData['name'])) {\n+    foreach ($validatedData['name'] as $index => $educationName) {\n+        Education::create([\n+            'personal_info_id' => $personalInfo->id,\n+            'name' => $educationName,\n+            'degree' => $validatedData['degree'][$index],\n+            'school_name' => $validatedData['school_name'][$index],\n+            'field_of_study' => $validatedData['field_of_study'][$index],\n+            'start_date' => $validatedData['education_start_date'][$index],\n+            'graduation_date' => $validatedData['graduation_date'][$index],\n+        ]);\n+    }\n+}\n+\n+    // Save certificates\n+    if (!empty($validatedData['certificate_name'])) {\n+        foreach ($validatedData['certificate_name'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organization'][$index],\n+                'issue_date' => $validatedData['issue_date'][$index],\n+            ]);\n+        }\n+    }\n+\n+    // Redirect back with success message\n+    return redirect()->route('user.create_cv')->with('success', 'CV Created Successfully!');\n+}\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732943128226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n             'name' => $educationName,\n             'degree' => $validatedData['degree'][$index],\n             'school_name' => $validatedData['school_name'][$index],\n             'field_of_study' => $validatedData['field_of_study'][$index],\n-            'start_date' => $validatedData['education_start_date'][$index],\n+            'start_date' => $validatedData['start_date'][$index],\n             'graduation_date' => $validatedData['graduation_date'][$index],\n         ]);\n     }\n }\n@@ -143,152 +143,5 @@\n \n     // Redirect back with success message\n     return redirect()->route('user.create_cv')->with('success', 'CV Created Successfully!');\n }\n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function create()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-{\n-    // Validate incoming data\n-    $validatedData = $request->validate([\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        \n-        'address' => 'required|string|max:500',\n-\n-        // Skills\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-\n-        // Work Experience\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-\n-       // Education\n-'name' => 'nullable|array',\n-'name.*' => 'string|max:255',\n-'degree' => 'nullable|array',\n-'degree.*' => 'string|max:255',\n-'school_name' => 'nullable|array',\n-'school_name.*' => 'string|max:255',\n-'field_of_study' => 'nullable|array',\n-'field_of_study.*' => 'string|max:255',\n-'start_date' => 'nullable|array',\n-'start_date.*' => 'date',\n-'graduation_date' => 'nullable|array',\n-'graduation_date.*' => 'nullable|date',\n-\n-        // Certificates\n-        'name' => 'nullable|array',\n-        'name.*' => 'string|max:255',\n-        'issuing_organization' => 'nullable|array',\n-        'issuing_organization.*' => 'string|max:255',\n-        'issue_date' => 'nullable|array',\n-        'issue_date.*' => 'date',\n-    ]);\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-       \n-        'address' => $validatedData['address'],\n-    ]);\n-\n-    // Save skills\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-\n-    // Save work experiences\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index],\n-                'location' => $validatedData['location'][$index],\n-                'start_date' => $validatedData['start_date'][$index],\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index],\n-            ]);\n-        }\n-    }\n-\n-  // Save educations\n-if (!empty($validatedData['education_name'])) {\n-    foreach ($validatedData['education_name'] as $index => $educationName) {\n-        Education::create([\n-            'personal_info_id' => $personalInfo->id,\n-            'name' => $educationName,\n-            'degree' => $validatedData['degree'][$index],\n-            'school_name' => $validatedData['school_name'][$index],\n-            'field_of_study' => $validatedData['field_of_study'][$index],\n-            'start_date' => $validatedData['education_start_date'][$index],\n-            'graduation_date' => $validatedData['graduation_date'][$index],\n-        ]);\n-    }\n-}\n-\n-    // Save certificates\n-    if (!empty($validatedData['certificate_name'])) {\n-        foreach ($validatedData['certificate_name'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organization'][$index],\n-                'issue_date' => $validatedData['issue_date'][$index],\n-            ]);\n-        }\n-    }\n-\n-    // Redirect back with success message\n-    return redirect()->route('user.create_cv')->with('success', 'CV Created Successfully!');\n-}\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732943182551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,10 +129,10 @@\n     }\n }\n \n     // Save certificates\n-    if (!empty($validatedData['certificate_name'])) {\n-        foreach ($validatedData['certificate_name'] as $index => $certificateName) {\n+    if (!empty($validatedData['name'])) {\n+        foreach ($validatedData['name'] as $index => $certificateName) {\n             Certificate::create([\n                 'personal_info_id' => $personalInfo->id,\n                 'name' => $certificateName,\n                 'issuing_organization' => $validatedData['issuing_organization'][$index],\n"
                },
                {
                    "date": 1732944197256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,7 +141,7 @@\n         }\n     }\n \n     // Redirect back with success message\n-    return redirect()->route('user.create_cv')->with('success', 'CV Created Successfully!');\n+    return redirect()->route('create-cv')->with('success', 'CV Created Successfully!');\n }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732944770320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,7 +141,7 @@\n         }\n     }\n \n     // Redirect back with success message\n-    return redirect()->route('create-cv')->with('success', 'CV Created Successfully!');\n+    return redirect()->route('create_cv')->with('success', 'CV Created Successfully!');\n }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732945782544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,7 +141,7 @@\n         }\n     }\n \n     // Redirect back with success message\n-    return redirect()->route('create_cv')->with('success', 'CV Created Successfully!');\n+    return redirect()->route('create-cv')->with('success', 'CV Created Successfully!');\n }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732945872131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n      * Show the CV creation form.\n      *\n      * @return \\Illuminate\\View\\View\n      */\n-    public function create()\n+    public function creates()\n     {\n         return view('create_cv'); // Ensure this matches your blade file's location\n     }\n \n"
                },
                {
                    "date": 1732945951801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,147 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+{\n+    // Validate incoming data\n+    $validatedData = $request->validate([\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        \n+        'address' => 'required|string|max:500',\n+\n+        // Skills\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+\n+        // Work Experience\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+\n+       // Education\n+'name' => 'nullable|array',\n+'name.*' => 'string|max:255',\n+'degree' => 'nullable|array',\n+'degree.*' => 'string|max:255',\n+'school_name' => 'nullable|array',\n+'school_name.*' => 'string|max:255',\n+'field_of_study' => 'nullable|array',\n+'field_of_study.*' => 'string|max:255',\n+'start_date' => 'nullable|array',\n+'start_date.*' => 'date',\n+'graduation_date' => 'nullable|array',\n+'graduation_date.*' => 'nullable|date',\n+\n+        // Certificates\n+        'name' => 'nullable|array',\n+        'name.*' => 'string|max:255',\n+        'issuing_organization' => 'nullable|array',\n+        'issuing_organization.*' => 'string|max:255',\n+        'issue_date' => 'nullable|array',\n+        'issue_date.*' => 'date',\n+    ]);\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+       \n+        'address' => $validatedData['address'],\n+    ]);\n+\n+    // Save skills\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+\n+    // Save work experiences\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index],\n+                'location' => $validatedData['location'][$index],\n+                'start_date' => $validatedData['start_date'][$index],\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index],\n+            ]);\n+        }\n+    }\n+\n+  // Save educations\n+if (!empty($validatedData['name'])) {\n+    foreach ($validatedData['name'] as $index => $educationName) {\n+        Education::create([\n+            'personal_info_id' => $personalInfo->id,\n+            'name' => $educationName,\n+            'degree' => $validatedData['degree'][$index],\n+            'school_name' => $validatedData['school_name'][$index],\n+            'field_of_study' => $validatedData['field_of_study'][$index],\n+            'start_date' => $validatedData['start_date'][$index],\n+            'graduation_date' => $validatedData['graduation_date'][$index],\n+        ]);\n+    }\n+}\n+\n+    // Save certificates\n+    if (!empty($validatedData['name'])) {\n+        foreach ($validatedData['name'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organization'][$index],\n+                'issue_date' => $validatedData['issue_date'][$index],\n+            ]);\n+        }\n+    }\n+\n+    // Redirect back with success message\n+    return redirect()->route('create-cv')->with('success', 'CV Created Successfully!');\n+}\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732947083485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,154 +141,7 @@\n         }\n     }\n \n     // Redirect back with success message\n-    return redirect()->route('create-cv')->with('success', 'CV Created Successfully!');\n+    return redirect()->route('createCv')->with('success', 'CV Created Successfully!');\n }\n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-{\n-    // Validate incoming data\n-    $validatedData = $request->validate([\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        \n-        'address' => 'required|string|max:500',\n-\n-        // Skills\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-\n-        // Work Experience\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-\n-       // Education\n-'name' => 'nullable|array',\n-'name.*' => 'string|max:255',\n-'degree' => 'nullable|array',\n-'degree.*' => 'string|max:255',\n-'school_name' => 'nullable|array',\n-'school_name.*' => 'string|max:255',\n-'field_of_study' => 'nullable|array',\n-'field_of_study.*' => 'string|max:255',\n-'start_date' => 'nullable|array',\n-'start_date.*' => 'date',\n-'graduation_date' => 'nullable|array',\n-'graduation_date.*' => 'nullable|date',\n-\n-        // Certificates\n-        'name' => 'nullable|array',\n-        'name.*' => 'string|max:255',\n-        'issuing_organization' => 'nullable|array',\n-        'issuing_organization.*' => 'string|max:255',\n-        'issue_date' => 'nullable|array',\n-        'issue_date.*' => 'date',\n-    ]);\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-       \n-        'address' => $validatedData['address'],\n-    ]);\n-\n-    // Save skills\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-\n-    // Save work experiences\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index],\n-                'location' => $validatedData['location'][$index],\n-                'start_date' => $validatedData['start_date'][$index],\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index],\n-            ]);\n-        }\n-    }\n-\n-  // Save educations\n-if (!empty($validatedData['name'])) {\n-    foreach ($validatedData['name'] as $index => $educationName) {\n-        Education::create([\n-            'personal_info_id' => $personalInfo->id,\n-            'name' => $educationName,\n-            'degree' => $validatedData['degree'][$index],\n-            'school_name' => $validatedData['school_name'][$index],\n-            'field_of_study' => $validatedData['field_of_study'][$index],\n-            'start_date' => $validatedData['start_date'][$index],\n-            'graduation_date' => $validatedData['graduation_date'][$index],\n-        ]);\n-    }\n-}\n-\n-    // Save certificates\n-    if (!empty($validatedData['name'])) {\n-        foreach ($validatedData['name'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organization'][$index],\n-                'issue_date' => $validatedData['issue_date'][$index],\n-            ]);\n-        }\n-    }\n-\n-    // Redirect back with success message\n-    return redirect()->route('create-cv')->with('success', 'CV Created Successfully!');\n-}\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732947308905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n      * Show the CV creation form.\n      *\n      * @return \\Illuminate\\View\\View\n      */\n-    public function creates()\n+    public function create()\n     {\n         return view('create_cv'); // Ensure this matches your blade file's location\n     }\n \n@@ -34,9 +34,9 @@\n         'first_name' => 'required|string|max:255',\n         'last_name' => 'required|string|max:255',\n         'email' => 'required|email|max:255',\n         'phone' => 'required|string|max:15',\n-        \n+        'linkedin_url' => 'nullable|url',\n         'address' => 'required|string|max:500',\n \n         // Skills\n         'skills' => 'nullable|array',\n@@ -56,24 +56,24 @@\n         'responsibilities' => 'nullable|array',\n         'responsibilities.*' => 'string',\n \n        // Education\n-'name' => 'nullable|array',\n-'name.*' => 'string|max:255',\n+'education_name' => 'nullable|array',\n+'education_name.*' => 'string|max:255',\n 'degree' => 'nullable|array',\n 'degree.*' => 'string|max:255',\n 'school_name' => 'nullable|array',\n 'school_name.*' => 'string|max:255',\n 'field_of_study' => 'nullable|array',\n 'field_of_study.*' => 'string|max:255',\n-'start_date' => 'nullable|array',\n-'start_date.*' => 'date',\n+'education_start_date' => 'nullable|array',\n+'education_start_date.*' => 'date',\n 'graduation_date' => 'nullable|array',\n 'graduation_date.*' => 'nullable|date',\n \n         // Certificates\n-        'name' => 'nullable|array',\n-        'name.*' => 'string|max:255',\n+        'certificate_name' => 'nullable|array',\n+        'certificate_name.*' => 'string|max:255',\n         'issuing_organization' => 'nullable|array',\n         'issuing_organization.*' => 'string|max:255',\n         'issue_date' => 'nullable|array',\n         'issue_date.*' => 'date',\n@@ -84,9 +84,9 @@\n         'first_name' => $validatedData['first_name'],\n         'last_name' => $validatedData['last_name'],\n         'email' => $validatedData['email'],\n         'phone' => $validatedData['phone'],\n-       \n+        'linkedin_url' => $validatedData['linkedin_url'] ?? null,\n         'address' => $validatedData['address'],\n     ]);\n \n     // Save skills\n@@ -114,25 +114,25 @@\n         }\n     }\n \n   // Save educations\n-if (!empty($validatedData['name'])) {\n-    foreach ($validatedData['name'] as $index => $educationName) {\n+if (!empty($validatedData['education_name'])) {\n+    foreach ($validatedData['education_name'] as $index => $educationName) {\n         Education::create([\n             'personal_info_id' => $personalInfo->id,\n             'name' => $educationName,\n             'degree' => $validatedData['degree'][$index],\n             'school_name' => $validatedData['school_name'][$index],\n             'field_of_study' => $validatedData['field_of_study'][$index],\n-            'start_date' => $validatedData['start_date'][$index],\n+            'start_date' => $validatedData['education_start_date'][$index],\n             'graduation_date' => $validatedData['graduation_date'][$index],\n         ]);\n     }\n }\n \n     // Save certificates\n-    if (!empty($validatedData['name'])) {\n-        foreach ($validatedData['name'] as $index => $certificateName) {\n+    if (!empty($validatedData['certificate_name'])) {\n+        foreach ($validatedData['certificate_name'] as $index => $certificateName) {\n             Certificate::create([\n                 'personal_info_id' => $personalInfo->id,\n                 'name' => $certificateName,\n                 'issuing_organization' => $validatedData['issuing_organization'][$index],\n@@ -141,7 +141,7 @@\n         }\n     }\n \n     // Redirect back with success message\n-    return redirect()->route('createCv')->with('success', 'CV Created Successfully!');\n+    return redirect()->route('user.create_cv')->with('success', 'CV Created Successfully!');\n }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732947345744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n         'first_name' => 'required|string|max:255',\n         'last_name' => 'required|string|max:255',\n         'email' => 'required|email|max:255',\n         'phone' => 'required|string|max:15',\n-        'linkedin_url' => 'nullable|url',\n+       \n         'address' => 'required|string|max:500',\n \n         // Skills\n         'skills' => 'nullable|array',\n@@ -84,9 +84,9 @@\n         'first_name' => $validatedData['first_name'],\n         'last_name' => $validatedData['last_name'],\n         'email' => $validatedData['email'],\n         'phone' => $validatedData['phone'],\n-        'linkedin_url' => $validatedData['linkedin_url'] ?? null,\n+    \n         'address' => $validatedData['address'],\n     ]);\n \n     // Save skills\n"
                },
                {
                    "date": 1732947551384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,147 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function create()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+{\n+    // Validate incoming data\n+    $validatedData = $request->validate([\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+       \n+        'address' => 'required|string|max:500',\n+\n+        // Skills\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+\n+        // Work Experience\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+\n+       // Education\n+'name' => 'nullable|array',\n+'name.*' => 'string|max:255',\n+'degree' => 'nullable|array',\n+'degree.*' => 'string|max:255',\n+'school_name' => 'nullable|array',\n+'school_name.*' => 'string|max:255',\n+'field_of_study' => 'nullable|array',\n+'field_of_study.*' => 'string|max:255',\n+'education_start_date' => 'nullable|array',\n+'education_start_date.*' => 'date',\n+'graduation_date' => 'nullable|array',\n+'graduation_date.*' => 'nullable|date',\n+\n+        // Certificates\n+        'certificate_name' => 'nullable|array',\n+        'certificate_name.*' => 'string|max:255',\n+        'issuing_organization' => 'nullable|array',\n+        'issuing_organization.*' => 'string|max:255',\n+        'issue_date' => 'nullable|array',\n+        'issue_date.*' => 'date',\n+    ]);\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+    \n+        'address' => $validatedData['address'],\n+    ]);\n+\n+    // Save skills\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+\n+    // Save work experiences\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index],\n+                'location' => $validatedData['location'][$index],\n+                'start_date' => $validatedData['start_date'][$index],\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index],\n+            ]);\n+        }\n+    }\n+\n+  // Save educations\n+if (!empty($validatedData['education_name'])) {\n+    foreach ($validatedData['education_name'] as $index => $educationName) {\n+        Education::create([\n+            'personal_info_id' => $personalInfo->id,\n+            'name' => $educationName,\n+            'degree' => $validatedData['degree'][$index],\n+            'school_name' => $validatedData['school_name'][$index],\n+            'field_of_study' => $validatedData['field_of_study'][$index],\n+            'start_date' => $validatedData['education_start_date'][$index],\n+            'graduation_date' => $validatedData['graduation_date'][$index],\n+        ]);\n+    }\n+}\n+\n+    // Save certificates\n+    if (!empty($validatedData['certificate_name'])) {\n+        foreach ($validatedData['certificate_name'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organization'][$index],\n+                'issue_date' => $validatedData['issue_date'][$index],\n+            ]);\n+        }\n+    }\n+\n+    // Redirect back with success message\n+    return redirect()->route('user.create_cv')->with('success', 'CV Created Successfully!');\n+}\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732947597126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,10 +64,10 @@\n 'school_name' => 'nullable|array',\n 'school_name.*' => 'string|max:255',\n 'field_of_study' => 'nullable|array',\n 'field_of_study.*' => 'string|max:255',\n-'education_start_date' => 'nullable|array',\n-'education_start_date.*' => 'date',\n+'start_date' => 'nullable|array',\n+'start_date.*' => 'date',\n 'graduation_date' => 'nullable|array',\n 'graduation_date.*' => 'nullable|date',\n \n         // Certificates\n@@ -143,152 +143,5 @@\n \n     // Redirect back with success message\n     return redirect()->route('user.create_cv')->with('success', 'CV Created Successfully!');\n }\n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function create()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-{\n-    // Validate incoming data\n-    $validatedData = $request->validate([\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-       \n-        'address' => 'required|string|max:500',\n-\n-        // Skills\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-\n-        // Work Experience\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-\n-       // Education\n-'education_name' => 'nullable|array',\n-'education_name.*' => 'string|max:255',\n-'degree' => 'nullable|array',\n-'degree.*' => 'string|max:255',\n-'school_name' => 'nullable|array',\n-'school_name.*' => 'string|max:255',\n-'field_of_study' => 'nullable|array',\n-'field_of_study.*' => 'string|max:255',\n-'education_start_date' => 'nullable|array',\n-'education_start_date.*' => 'date',\n-'graduation_date' => 'nullable|array',\n-'graduation_date.*' => 'nullable|date',\n-\n-        // Certificates\n-        'certificate_name' => 'nullable|array',\n-        'certificate_name.*' => 'string|max:255',\n-        'issuing_organization' => 'nullable|array',\n-        'issuing_organization.*' => 'string|max:255',\n-        'issue_date' => 'nullable|array',\n-        'issue_date.*' => 'date',\n-    ]);\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-    \n-        'address' => $validatedData['address'],\n-    ]);\n-\n-    // Save skills\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-\n-    // Save work experiences\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index],\n-                'location' => $validatedData['location'][$index],\n-                'start_date' => $validatedData['start_date'][$index],\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index],\n-            ]);\n-        }\n-    }\n-\n-  // Save educations\n-if (!empty($validatedData['education_name'])) {\n-    foreach ($validatedData['education_name'] as $index => $educationName) {\n-        Education::create([\n-            'personal_info_id' => $personalInfo->id,\n-            'name' => $educationName,\n-            'degree' => $validatedData['degree'][$index],\n-            'school_name' => $validatedData['school_name'][$index],\n-            'field_of_study' => $validatedData['field_of_study'][$index],\n-            'start_date' => $validatedData['education_start_date'][$index],\n-            'graduation_date' => $validatedData['graduation_date'][$index],\n-        ]);\n-    }\n-}\n-\n-    // Save certificates\n-    if (!empty($validatedData['certificate_name'])) {\n-        foreach ($validatedData['certificate_name'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organization'][$index],\n-                'issue_date' => $validatedData['issue_date'][$index],\n-            ]);\n-        }\n-    }\n-\n-    // Redirect back with success message\n-    return redirect()->route('user.create_cv')->with('success', 'CV Created Successfully!');\n-}\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732947661763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,10 +70,10 @@\n 'graduation_date' => 'nullable|array',\n 'graduation_date.*' => 'nullable|date',\n \n         // Certificates\n-        'certificate_name' => 'nullable|array',\n-        'certificate_name.*' => 'string|max:255',\n+        'name' => 'nullable|array',\n+        'name.*' => 'string|max:255',\n         'issuing_organization' => 'nullable|array',\n         'issuing_organization.*' => 'string|max:255',\n         'issue_date' => 'nullable|array',\n         'issue_date.*' => 'date',\n"
                },
                {
                    "date": 1732948776170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,8 +140,7 @@\n             ]);\n         }\n     }\n \n-    // Redirect back with success message\n-    return redirect()->route('user.create_cv')->with('success', 'CV Created Successfully!');\n+\n }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732948886886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,7 +140,7 @@\n             ]);\n         }\n     }\n \n-\n+    return redirect()->route('register')->with('success', 'User registered successfully!');\n }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732949074042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,7 +140,7 @@\n             ]);\n         }\n     }\n \n-    return redirect()->route('register')->with('success', 'User registered successfully!');\n+    return redirect()->route('register')->with('');\n }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732949079280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,7 +140,7 @@\n             ]);\n         }\n     }\n \n-    return redirect()->route('register')->with('');\n+    return redirect()->route('register');\n }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732949137042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,7 +140,7 @@\n             ]);\n         }\n     }\n \n-    return redirect()->route('register');\n+    return redirect()->route('user.create_cv');\n }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732949265990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,7 +140,7 @@\n             ]);\n         }\n     }\n \n-    return redirect()->route('user.create_cv');\n+    return redirect()->route('create_cv');\n }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732949276895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n      * Show the CV creation form.\n      *\n      * @return \\Illuminate\\View\\View\n      */\n-    public function create()\n+    public function creates()\n     {\n         return view('create_cv'); // Ensure this matches your blade file's location\n     }\n \n"
                },
                {
                    "date": 1732950466590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,7 +140,7 @@\n             ]);\n         }\n     }\n \n-    return redirect()->route('create_cv');\n+    return redirect()->route('CreateCv');\n }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732951268476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,120 +27,118 @@\n      * @param  \\Illuminate\\Http\\Request  $request\n      * @return \\Illuminate\\Http\\RedirectResponse\n      */\n     public function store(Request $request)\n-{\n-    // Validate incoming data\n-    $validatedData = $request->validate([\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-       \n-        'address' => 'required|string|max:500',\n-\n-        // Skills\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-\n-        // Work Experience\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-\n-       // Education\n-'name' => 'nullable|array',\n-'name.*' => 'string|max:255',\n-'degree' => 'nullable|array',\n-'degree.*' => 'string|max:255',\n-'school_name' => 'nullable|array',\n-'school_name.*' => 'string|max:255',\n-'field_of_study' => 'nullable|array',\n-'field_of_study.*' => 'string|max:255',\n-'start_date' => 'nullable|array',\n-'start_date.*' => 'date',\n-'graduation_date' => 'nullable|array',\n-'graduation_date.*' => 'nullable|date',\n-\n-        // Certificates\n-        'name' => 'nullable|array',\n-        'name.*' => 'string|max:255',\n-        'issuing_organization' => 'nullable|array',\n-        'issuing_organization.*' => 'string|max:255',\n-        'issue_date' => 'nullable|array',\n-        'issue_date.*' => 'date',\n-    ]);\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n+    {\n+        // Validate incoming data\n+        $validatedData = $request->validate([\n+            'first_name' => 'required|string|max:255',\n+            'last_name' => 'required|string|max:255',\n+            'email' => 'required|email|max:255',\n+            'phone' => 'required|string|max:15',\n+            'address' => 'required|string|max:500',\n     \n-        'address' => $validatedData['address'],\n-    ]);\n-\n-    // Save skills\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n+            // Skills\n+            'skills' => 'nullable|array',\n+            'skills.*' => 'string|max:255',\n+    \n+            // Work Experience\n+            'job_title' => 'nullable|array',\n+            'job_title.*' => 'string|max:255',\n+            'company_name' => 'nullable|array',\n+            'company_name.*' => 'string|max:255',\n+            'location' => 'nullable|array',\n+            'location.*' => 'string|max:255',\n+            'start_date' => 'nullable|array',\n+            'start_date.*' => 'date',\n+            'end_date' => 'nullable|array',\n+            'end_date.*' => 'nullable|date',\n+            'responsibilities' => 'nullable|array',\n+            'responsibilities.*' => 'string',\n+    \n+            // Education\n+            'education_names' => 'nullable|array',\n+            'education_names.*' => 'string|max:255',\n+            'degrees' => 'nullable|array',\n+            'degrees.*' => 'string|max:255',\n+            'school_names' => 'nullable|array',\n+            'school_names.*' => 'string|max:255',\n+            'fields_of_study' => 'nullable|array',\n+            'fields_of_study.*' => 'string|max:255',\n+            'education_start_dates' => 'nullable|array',\n+            'education_start_dates.*' => 'date',\n+            'graduation_dates' => 'nullable|array',\n+            'graduation_dates.*' => 'nullable|date',\n+    \n+            // Certificates\n+            'certificate_names' => 'nullable|array',\n+            'certificate_names.*' => 'string|max:255',\n+            'issuing_organizations' => 'nullable|array',\n+            'issuing_organizations.*' => 'string|max:255',\n+            'issue_dates' => 'nullable|array',\n+            'issue_dates.*' => 'date',\n+        ]);\n+    \n+        // Save personal info\n+        $personalInfo = PersonalInfo::create([\n+            'first_name' => $validatedData['first_name'],\n+            'last_name' => $validatedData['last_name'],\n+            'email' => $validatedData['email'],\n+            'phone' => $validatedData['phone'],\n+            'address' => $validatedData['address'],\n+        ]);\n+    \n+        // Save skills\n+        if (!empty($validatedData['skills'])) {\n+            foreach ($validatedData['skills'] as $skill) {\n+                Skill::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'name' => $skill,\n+                ]);\n+            }\n         }\n-    }\n-\n-    // Save work experiences\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index],\n-                'location' => $validatedData['location'][$index],\n-                'start_date' => $validatedData['start_date'][$index],\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index],\n-            ]);\n+    \n+        // Save work experiences\n+        if (!empty($validatedData['job_title'])) {\n+            foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+                WorkExperience::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'job_title' => $jobTitle,\n+                    'company_name' => $validatedData['company_name'][$index],\n+                    'location' => $validatedData['location'][$index],\n+                    'start_date' => $validatedData['start_date'][$index],\n+                    'end_date' => $validatedData['end_date'][$index] ?? null,\n+                    'responsibilities' => $validatedData['responsibilities'][$index],\n+                ]);\n+            }\n         }\n-    }\n-\n-  // Save educations\n-if (!empty($validatedData['education_name'])) {\n-    foreach ($validatedData['education_name'] as $index => $educationName) {\n-        Education::create([\n-            'personal_info_id' => $personalInfo->id,\n-            'name' => $educationName,\n-            'degree' => $validatedData['degree'][$index],\n-            'school_name' => $validatedData['school_name'][$index],\n-            'field_of_study' => $validatedData['field_of_study'][$index],\n-            'start_date' => $validatedData['education_start_date'][$index],\n-            'graduation_date' => $validatedData['graduation_date'][$index],\n-        ]);\n-    }\n-}\n-\n-    // Save certificates\n-    if (!empty($validatedData['certificate_name'])) {\n-        foreach ($validatedData['certificate_name'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organization'][$index],\n-                'issue_date' => $validatedData['issue_date'][$index],\n-            ]);\n+    \n+        // Save educations\n+        if (!empty($validatedData['education_names'])) {\n+            foreach ($validatedData['education_names'] as $index => $educationName) {\n+                Education::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'name' => $educationName,\n+                    'degree' => $validatedData['degrees'][$index],\n+                    'school_name' => $validatedData['school_names'][$index],\n+                    'field_of_study' => $validatedData['fields_of_study'][$index],\n+                    'start_date' => $validatedData['education_start_dates'][$index],\n+                    'graduation_date' => $validatedData['graduation_dates'][$index],\n+                ]);\n+            }\n         }\n+    \n+        // Save certificates\n+        if (!empty($validatedData['certificate_names'])) {\n+            foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+                Certificate::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'name' => $certificateName,\n+                    'issuing_organization' => $validatedData['issuing_organizations'][$index],\n+                    'issue_date' => $validatedData['issue_dates'][$index],\n+                ]);\n+            }\n+        }\n+    \n+        return redirect()->route('CreateCv');\n     }\n-\n-    return redirect()->route('CreateCv');\n-}\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732951634563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,21 +54,21 @@\n             'end_date.*' => 'nullable|date',\n             'responsibilities' => 'nullable|array',\n             'responsibilities.*' => 'string',\n     \n-            // Education\n-            'education_names' => 'nullable|array',\n-            'education_names.*' => 'string|max:255',\n-            'degrees' => 'nullable|array',\n-            'degrees.*' => 'string|max:255',\n-            'school_names' => 'nullable|array',\n-            'school_names.*' => 'string|max:255',\n-            'fields_of_study' => 'nullable|array',\n-            'fields_of_study.*' => 'string|max:255',\n-            'education_start_dates' => 'nullable|array',\n-            'education_start_dates.*' => 'date',\n-            'graduation_dates' => 'nullable|array',\n-            'graduation_dates.*' => 'nullable|date',\n+     // Education validation\n+'education_name' => 'nullable|array',\n+'education_name.*' => 'string|max:255',\n+'education_degree' => 'nullable|array',\n+'education_degree.*' => 'string|max:255',\n+'education_school_name' => 'nullable|array',\n+'education_school_name.*' => 'string|max:255',\n+'education_field_of_study' => 'nullable|array',\n+'education_field_of_study.*' => 'string|max:255',\n+'education_start_date' => 'nullable|array',\n+'education_start_date.*' => 'date',\n+'education_graduation_date' => 'nullable|array',\n+'education_graduation_date.*' => 'nullable|date',\n     \n             // Certificates\n             'certificate_names' => 'nullable|array',\n             'certificate_names.*' => 'string|max:255',\n@@ -111,22 +111,22 @@\n                 ]);\n             }\n         }\n     \n-        // Save educations\n-        if (!empty($validatedData['education_names'])) {\n-            foreach ($validatedData['education_names'] as $index => $educationName) {\n-                Education::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'name' => $educationName,\n-                    'degree' => $validatedData['degrees'][$index],\n-                    'school_name' => $validatedData['school_names'][$index],\n-                    'field_of_study' => $validatedData['fields_of_study'][$index],\n-                    'start_date' => $validatedData['education_start_dates'][$index],\n-                    'graduation_date' => $validatedData['graduation_dates'][$index],\n-                ]);\n-            }\n-        }\n+     // Save educations\n+if (!empty($validatedData['education_name'])) {\n+    foreach ($validatedData['education_name'] as $index => $educationName) {\n+        Education::create([\n+            'personal_info_id' => $personalInfo->id,\n+            'degree' => $validatedData['education_degree'][$index],\n+            'school_name' => $validatedData['education_school_name'][$index],\n+            'field_of_study' => $validatedData['education_field_of_study'][$index],\n+            'start_date' => $validatedData['education_start_date'][$index],\n+            'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+        ]);\n+    }\n+}\n+\n     \n         // Save certificates\n         if (!empty($validatedData['certificate_names'])) {\n             foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n"
                },
                {
                    "date": 1732951646051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,19 +126,19 @@\n     }\n }\n \n     \n-        // Save certificates\n-        if (!empty($validatedData['certificate_names'])) {\n-            foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-                Certificate::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'name' => $certificateName,\n-                    'issuing_organization' => $validatedData['issuing_organizations'][$index],\n-                    'issue_date' => $validatedData['issue_dates'][$index],\n-                ]);\n-            }\n-        }\n+       // Save certificates\n+if (!empty($validatedData['certificate_name'])) {\n+    foreach ($validatedData['certificate_name'] as $index => $certificateName) {\n+        Certificate::create([\n+            'personal_info_id' => $personalInfo->id,\n+            'name' => $certificateName,\n+            'issuing_organization' => $validatedData['issuing_organization'][$index],\n+            'issue_date' => $validatedData['issue_date'][$index],\n+        ]);\n+    }\n+}\n     \n         return redirect()->route('CreateCv');\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732952937503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,9 @@\n     public function store(Request $request)\n     {\n         // Validate incoming data\n         $validatedData = $request->validate([\n+            // Personal Info validation\n             'first_name' => 'required|string|max:255',\n             'last_name' => 'required|string|max:255',\n             'email' => 'required|email|max:255',\n             'phone' => 'required|string|max:15',\n@@ -54,23 +55,23 @@\n             'end_date.*' => 'nullable|date',\n             'responsibilities' => 'nullable|array',\n             'responsibilities.*' => 'string',\n     \n-     // Education validation\n-'education_name' => 'nullable|array',\n-'education_name.*' => 'string|max:255',\n-'education_degree' => 'nullable|array',\n-'education_degree.*' => 'string|max:255',\n-'education_school_name' => 'nullable|array',\n-'education_school_name.*' => 'string|max:255',\n-'education_field_of_study' => 'nullable|array',\n-'education_field_of_study.*' => 'string|max:255',\n-'education_start_date' => 'nullable|array',\n-'education_start_date.*' => 'date',\n-'education_graduation_date' => 'nullable|array',\n-'education_graduation_date.*' => 'nullable|date',\n+            // Education validation\n+            'education_name' => 'nullable|array',\n+            'education_name.*' => 'string|max:255',\n+            'education_degree' => 'nullable|array',\n+            'education_degree.*' => 'string|max:255',\n+            'education_school_name' => 'nullable|array',\n+            'education_school_name.*' => 'string|max:255',\n+            'education_field_of_study' => 'nullable|array',\n+            'education_field_of_study.*' => 'string|max:255',\n+            'education_start_date' => 'nullable|array',\n+            'education_start_date.*' => 'date',\n+            'education_graduation_date' => 'nullable|array',\n+            'education_graduation_date.*' => 'nullable|date',\n     \n-            // Certificates\n+            // Certificates validation\n             'certificate_names' => 'nullable|array',\n             'certificate_names.*' => 'string|max:255',\n             'issuing_organizations' => 'nullable|array',\n             'issuing_organizations.*' => 'string|max:255',\n@@ -111,34 +112,34 @@\n                 ]);\n             }\n         }\n     \n-     // Save educations\n-if (!empty($validatedData['education_name'])) {\n-    foreach ($validatedData['education_name'] as $index => $educationName) {\n-        Education::create([\n-            'personal_info_id' => $personalInfo->id,\n-            'degree' => $validatedData['education_degree'][$index],\n-            'school_name' => $validatedData['education_school_name'][$index],\n-            'field_of_study' => $validatedData['education_field_of_study'][$index],\n-            'start_date' => $validatedData['education_start_date'][$index],\n-            'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-        ]);\n-    }\n-}\n-\n+        // Save educations\n+        if (!empty($validatedData['education_name'])) {\n+            foreach ($validatedData['education_name'] as $index => $educationName) {\n+                Education::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'degree' => $validatedData['education_degree'][$index],\n+                    'school_name' => $validatedData['education_school_name'][$index],\n+                    'field_of_study' => $validatedData['education_field_of_study'][$index],\n+                    'start_date' => $validatedData['education_start_date'][$index],\n+                    'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+                ]);\n+            }\n+        }\n     \n-       // Save certificates\n-if (!empty($validatedData['certificate_name'])) {\n-    foreach ($validatedData['certificate_name'] as $index => $certificateName) {\n-        Certificate::create([\n-            'personal_info_id' => $personalInfo->id,\n-            'name' => $certificateName,\n-            'issuing_organization' => $validatedData['issuing_organization'][$index],\n-            'issue_date' => $validatedData['issue_date'][$index],\n-        ]);\n-    }\n-}\n+        // Save certificates\n+        if (!empty($validatedData['certificate_names'])) {\n+            foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+                Certificate::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'name' => $certificateName,\n+                    'issuing_organization' => $validatedData['issuing_organizations'][$index],\n+                    'issue_date' => $validatedData['issue_dates'][$index],\n+                ]);\n+            }\n+        }\n     \n         return redirect()->route('CreateCv');\n     }\n+    \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732972475286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,15 +119,15 @@\n                 Education::create([\n                     'personal_info_id' => $personalInfo->id,\n                     'degree' => $validatedData['education_degree'][$index],\n                     'school_name' => $validatedData['education_school_name'][$index],\n-                    'field_of_study' => $validatedData['education_field_of_study'][$index],\n+                    'Educlevel' => $validatedData['education_field_of_study'][$index],\n                     'start_date' => $validatedData['education_start_date'][$index],\n                     'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n                 ]);\n             }\n         }\n-    \n+   \n         // Save certificates\n         if (!empty($validatedData['certificate_names'])) {\n             foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n                 Certificate::create([\n"
                },
                {
                    "date": 1732972817855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,10 +62,10 @@\n             'education_degree' => 'nullable|array',\n             'education_degree.*' => 'string|max:255',\n             'education_school_name' => 'nullable|array',\n             'education_school_name.*' => 'string|max:255',\n-            'education_field_of_study' => 'nullable|array',\n-            'education_field_of_study.*' => 'string|max:255',\n+            'education_Educlevel' => 'nullable|array',\n+            'education_Educlevel.*' => 'string|max:255',\n             'education_start_date' => 'nullable|array',\n             'education_start_date.*' => 'date',\n             'education_graduation_date' => 'nullable|array',\n             'education_graduation_date.*' => 'nullable|date',\n"
                },
                {
                    "date": 1732976273907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+    {\n+        // Validate incoming data\n+        $validatedData = $request->validate([\n+            // Personal Info validation\n+            'first_name' => 'required|string|max:255',\n+            'last_name' => 'required|string|max:255',\n+            'email' => 'required|email|max:255',\n+            'phone' => 'required|string|max:15',\n+            'address' => 'required|string|max:500',\n+    \n+            // Skills\n+            'skills' => 'nullable|array',\n+            'skills.*' => 'string|max:255',\n+    \n+            // Work Experience\n+            'job_title' => 'nullable|array',\n+            'job_title.*' => 'string|max:255',\n+            'company_name' => 'nullable|array',\n+            'company_name.*' => 'string|max:255',\n+            'location' => 'nullable|array',\n+            'location.*' => 'string|max:255',\n+            'start_date' => 'nullable|array',\n+            'start_date.*' => 'date',\n+            'end_date' => 'nullable|array',\n+            'end_date.*' => 'nullable|date',\n+            'responsibilities' => 'nullable|array',\n+            'responsibilities.*' => 'string',\n+    \n+            // Education validation\n+            'education_name' => 'nullable|array',\n+            'education_name.*' => 'string|max:255',\n+            'education_degree' => 'nullable|array',\n+            'education_degree.*' => 'string|max:255',\n+            'education_school_name' => 'nullable|array',\n+            'education_school_name.*' => 'string|max:255',\n+            'education_Educlevel' => 'nullable|array',\n+            'education_Educlevel.*' => 'string|max:255',\n+            'education_start_date' => 'nullable|array',\n+            'education_start_date.*' => 'date',\n+            'education_graduation_date' => 'nullable|array',\n+            'education_graduation_date.*' => 'nullable|date',\n+    \n+            // Certificates validation\n+            'certificate_names' => 'nullable|array',\n+            'certificate_names.*' => 'string|max:255',\n+            'issuing_organizations' => 'nullable|array',\n+            'issuing_organizations.*' => 'string|max:255',\n+            'issue_dates' => 'nullable|array',\n+            'issue_dates.*' => 'date',\n+        ]);\n+    \n+        // Save personal info\n+        $personalInfo = PersonalInfo::create([\n+            'first_name' => $validatedData['first_name'],\n+            'last_name' => $validatedData['last_name'],\n+            'email' => $validatedData['email'],\n+            'phone' => $validatedData['phone'],\n+            'address' => $validatedData['address'],\n+        ]);\n+    \n+        // Save skills\n+        if (!empty($validatedData['skills'])) {\n+            foreach ($validatedData['skills'] as $skill) {\n+                Skill::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'name' => $skill,\n+                ]);\n+            }\n+        }\n+    \n+        // Save work experiences\n+        if (!empty($validatedData['job_title'])) {\n+            foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+                WorkExperience::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'job_title' => $jobTitle,\n+                    'company_name' => $validatedData['company_name'][$index],\n+                    'location' => $validatedData['location'][$index],\n+                    'start_date' => $validatedData['start_date'][$index],\n+                    'end_date' => $validatedData['end_date'][$index] ?? null,\n+                    'responsibilities' => $validatedData['responsibilities'][$index],\n+                ]);\n+            }\n+        }\n+    \n+        // Save educations\n+        if (!empty($validatedData['education_name'])) {\n+            foreach ($validatedData['education_name'] as $index => $educationName) {\n+                Education::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'degree' => $validatedData['education_degree'][$index],\n+                    'school_name' => $validatedData['education_school_name'][$index],\n+                    'Educlevel' => $validatedData['education_field_of_study'][$index],\n+                    'start_date' => $validatedData['education_start_date'][$index],\n+                    'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+                ]);\n+            }\n+        }\n+   \n+        // Save certificates\n+        if (!empty($validatedData['certificate_names'])) {\n+            foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+                Certificate::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'name' => $certificateName,\n+                    'issuing_organization' => $validatedData['issuing_organizations'][$index],\n+                    'issue_date' => $validatedData['issue_dates'][$index],\n+                ]);\n+            }\n+        }\n+    \n+        return redirect()->route('CreateCv');\n+    }\n+    \n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732976303098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,10 +119,10 @@\n                 Education::create([\n                     'personal_info_id' => $personalInfo->id,\n                     'degree' => $validatedData['education_degree'][$index],\n                     'school_name' => $validatedData['education_school_name'][$index],\n-                    'Educlevel' => $validatedData['education_field_of_study'][$index],\n-                    'start_date' => $validatedData['education_start_date'][$index],\n+                    'Educlevel' => $validatedData['education_Educlevel'][$index],\n+                    'start_date' => $validatedData['education_Educlevel'][$index],\n                     'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n                 ]);\n             }\n         }\n@@ -141,150 +141,5 @@\n     \n         return redirect()->route('CreateCv');\n     }\n     \n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-    {\n-        // Validate incoming data\n-        $validatedData = $request->validate([\n-            // Personal Info validation\n-            'first_name' => 'required|string|max:255',\n-            'last_name' => 'required|string|max:255',\n-            'email' => 'required|email|max:255',\n-            'phone' => 'required|string|max:15',\n-            'address' => 'required|string|max:500',\n-    \n-            // Skills\n-            'skills' => 'nullable|array',\n-            'skills.*' => 'string|max:255',\n-    \n-            // Work Experience\n-            'job_title' => 'nullable|array',\n-            'job_title.*' => 'string|max:255',\n-            'company_name' => 'nullable|array',\n-            'company_name.*' => 'string|max:255',\n-            'location' => 'nullable|array',\n-            'location.*' => 'string|max:255',\n-            'start_date' => 'nullable|array',\n-            'start_date.*' => 'date',\n-            'end_date' => 'nullable|array',\n-            'end_date.*' => 'nullable|date',\n-            'responsibilities' => 'nullable|array',\n-            'responsibilities.*' => 'string',\n-    \n-            // Education validation\n-            'education_name' => 'nullable|array',\n-            'education_name.*' => 'string|max:255',\n-            'education_degree' => 'nullable|array',\n-            'education_degree.*' => 'string|max:255',\n-            'education_school_name' => 'nullable|array',\n-            'education_school_name.*' => 'string|max:255',\n-            'education_Educlevel' => 'nullable|array',\n-            'education_Educlevel.*' => 'string|max:255',\n-            'education_start_date' => 'nullable|array',\n-            'education_start_date.*' => 'date',\n-            'education_graduation_date' => 'nullable|array',\n-            'education_graduation_date.*' => 'nullable|date',\n-    \n-            // Certificates validation\n-            'certificate_names' => 'nullable|array',\n-            'certificate_names.*' => 'string|max:255',\n-            'issuing_organizations' => 'nullable|array',\n-            'issuing_organizations.*' => 'string|max:255',\n-            'issue_dates' => 'nullable|array',\n-            'issue_dates.*' => 'date',\n-        ]);\n-    \n-        // Save personal info\n-        $personalInfo = PersonalInfo::create([\n-            'first_name' => $validatedData['first_name'],\n-            'last_name' => $validatedData['last_name'],\n-            'email' => $validatedData['email'],\n-            'phone' => $validatedData['phone'],\n-            'address' => $validatedData['address'],\n-        ]);\n-    \n-        // Save skills\n-        if (!empty($validatedData['skills'])) {\n-            foreach ($validatedData['skills'] as $skill) {\n-                Skill::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'name' => $skill,\n-                ]);\n-            }\n-        }\n-    \n-        // Save work experiences\n-        if (!empty($validatedData['job_title'])) {\n-            foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-                WorkExperience::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'job_title' => $jobTitle,\n-                    'company_name' => $validatedData['company_name'][$index],\n-                    'location' => $validatedData['location'][$index],\n-                    'start_date' => $validatedData['start_date'][$index],\n-                    'end_date' => $validatedData['end_date'][$index] ?? null,\n-                    'responsibilities' => $validatedData['responsibilities'][$index],\n-                ]);\n-            }\n-        }\n-    \n-        // Save educations\n-        if (!empty($validatedData['education_name'])) {\n-            foreach ($validatedData['education_name'] as $index => $educationName) {\n-                Education::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'degree' => $validatedData['education_degree'][$index],\n-                    'school_name' => $validatedData['education_school_name'][$index],\n-                    'Educlevel' => $validatedData['education_field_of_study'][$index],\n-                    'start_date' => $validatedData['education_start_date'][$index],\n-                    'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-                ]);\n-            }\n-        }\n-   \n-        // Save certificates\n-        if (!empty($validatedData['certificate_names'])) {\n-            foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-                Certificate::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'name' => $certificateName,\n-                    'issuing_organization' => $validatedData['issuing_organizations'][$index],\n-                    'issue_date' => $validatedData['issue_dates'][$index],\n-                ]);\n-            }\n-        }\n-    \n-        return redirect()->route('CreateCv');\n-    }\n-    \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732976308635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,9 +120,9 @@\n                     'personal_info_id' => $personalInfo->id,\n                     'degree' => $validatedData['education_degree'][$index],\n                     'school_name' => $validatedData['education_school_name'][$index],\n                     'Educlevel' => $validatedData['education_Educlevel'][$index],\n-                    'start_date' => $validatedData['education_Educlevel'][$index],\n+                    'start_date' => $validatedData['education_start_date'][$index],\n                     'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n                 ]);\n             }\n         }\n"
                },
                {
                    "date": 1732981332993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+    {\n+        // Validate incoming data\n+        $validatedData = $request->validate([\n+            // Personal Info validation\n+            'first_name' => 'required|string|max:255',\n+            'last_name' => 'required|string|max:255',\n+            'email' => 'required|email|max:255',\n+            'phone' => 'required|string|max:15',\n+            'address' => 'required|string|max:500',\n+    \n+            // Skills\n+            'skills' => 'nullable|array',\n+            'skills.*' => 'string|max:255',\n+    \n+            // Work Experience\n+            'job_title' => 'nullable|array',\n+            'job_title.*' => 'string|max:255',\n+            'company_name' => 'nullable|array',\n+            'company_name.*' => 'string|max:255',\n+            'location' => 'nullable|array',\n+            'location.*' => 'string|max:255',\n+            'start_date' => 'nullable|array',\n+            'start_date.*' => 'date',\n+            'end_date' => 'nullable|array',\n+            'end_date.*' => 'nullable|date',\n+            'responsibilities' => 'nullable|array',\n+            'responsibilities.*' => 'string',\n+    \n+            // Education validation\n+            'education_name' => 'nullable|array',\n+            'education_name.*' => 'string|max:255',\n+            'education_degree' => 'nullable|array',\n+            'education_degree.*' => 'string|max:255',\n+            'education_school_name' => 'nullable|array',\n+            'education_school_name.*' => 'string|max:255',\n+            'education_Educlevel' => 'nullable|array',\n+            'education_Educlevel.*' => 'string|max:255',\n+            'education_start_date' => 'nullable|array',\n+            'education_start_date.*' => 'date',\n+            'education_graduation_date' => 'nullable|array',\n+            'education_graduation_date.*' => 'nullable|date',\n+    \n+            // Certificates validation\n+            'certificate_names' => 'nullable|array',\n+            'certificate_names.*' => 'string|max:255',\n+            'issuing_organizations' => 'nullable|array',\n+            'issuing_organizations.*' => 'string|max:255',\n+            'issue_dates' => 'nullable|array',\n+            'issue_dates.*' => 'date',\n+        ]);\n+    \n+        // Save personal info\n+        $personalInfo = PersonalInfo::create([\n+            'first_name' => $validatedData['first_name'],\n+            'last_name' => $validatedData['last_name'],\n+            'email' => $validatedData['email'],\n+            'phone' => $validatedData['phone'],\n+            'address' => $validatedData['address'],\n+        ]);\n+    \n+        // Save skills\n+        if (!empty($validatedData['skills'])) {\n+            foreach ($validatedData['skills'] as $skill) {\n+                Skill::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'name' => $skill,\n+                ]);\n+            }\n+        }\n+    \n+        // Save work experiences\n+        if (!empty($validatedData['job_title'])) {\n+            foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+                WorkExperience::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'job_title' => $jobTitle,\n+                    'company_name' => $validatedData['company_name'][$index],\n+                    'location' => $validatedData['location'][$index],\n+                    'start_date' => $validatedData['start_date'][$index],\n+                    'end_date' => $validatedData['end_date'][$index] ?? null,\n+                    'responsibilities' => $validatedData['responsibilities'][$index],\n+                ]);\n+            }\n+        }\n+    \n+        // Save educations\n+        if (!empty($validatedData['education_name'])) {\n+            foreach ($validatedData['education_name'] as $index => $educationName) {\n+                Education::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'degree' => $validatedData['education_degree'][$index],\n+                    'school_name' => $validatedData['education_school_name'][$index],\n+                    'Educlevel' => $validatedData['education_Educlevel'][$index],\n+                    'start_date' => $validatedData['education_start_date'][$index],\n+                    'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+                ]);\n+            }\n+        }\n+   \n+        // Save certificates\n+        if (!empty($validatedData['certificate_names'])) {\n+            foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+                Certificate::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'name' => $certificateName,\n+                    'issuing_organization' => $validatedData['issuing_organizations'][$index],\n+                    'issue_date' => $validatedData['issue_dates'][$index],\n+                ]);\n+            }\n+        }\n+    \n+        return redirect()->route('CreateCv');\n+    }\n+    \n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732981375951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,150 +141,5 @@\n     \n         return redirect()->route('CreateCv');\n     }\n     \n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-    {\n-        // Validate incoming data\n-        $validatedData = $request->validate([\n-            // Personal Info validation\n-            'first_name' => 'required|string|max:255',\n-            'last_name' => 'required|string|max:255',\n-            'email' => 'required|email|max:255',\n-            'phone' => 'required|string|max:15',\n-            'address' => 'required|string|max:500',\n-    \n-            // Skills\n-            'skills' => 'nullable|array',\n-            'skills.*' => 'string|max:255',\n-    \n-            // Work Experience\n-            'job_title' => 'nullable|array',\n-            'job_title.*' => 'string|max:255',\n-            'company_name' => 'nullable|array',\n-            'company_name.*' => 'string|max:255',\n-            'location' => 'nullable|array',\n-            'location.*' => 'string|max:255',\n-            'start_date' => 'nullable|array',\n-            'start_date.*' => 'date',\n-            'end_date' => 'nullable|array',\n-            'end_date.*' => 'nullable|date',\n-            'responsibilities' => 'nullable|array',\n-            'responsibilities.*' => 'string',\n-    \n-            // Education validation\n-            'education_name' => 'nullable|array',\n-            'education_name.*' => 'string|max:255',\n-            'education_degree' => 'nullable|array',\n-            'education_degree.*' => 'string|max:255',\n-            'education_school_name' => 'nullable|array',\n-            'education_school_name.*' => 'string|max:255',\n-            'education_Educlevel' => 'nullable|array',\n-            'education_Educlevel.*' => 'string|max:255',\n-            'education_start_date' => 'nullable|array',\n-            'education_start_date.*' => 'date',\n-            'education_graduation_date' => 'nullable|array',\n-            'education_graduation_date.*' => 'nullable|date',\n-    \n-            // Certificates validation\n-            'certificate_names' => 'nullable|array',\n-            'certificate_names.*' => 'string|max:255',\n-            'issuing_organizations' => 'nullable|array',\n-            'issuing_organizations.*' => 'string|max:255',\n-            'issue_dates' => 'nullable|array',\n-            'issue_dates.*' => 'date',\n-        ]);\n-    \n-        // Save personal info\n-        $personalInfo = PersonalInfo::create([\n-            'first_name' => $validatedData['first_name'],\n-            'last_name' => $validatedData['last_name'],\n-            'email' => $validatedData['email'],\n-            'phone' => $validatedData['phone'],\n-            'address' => $validatedData['address'],\n-        ]);\n-    \n-        // Save skills\n-        if (!empty($validatedData['skills'])) {\n-            foreach ($validatedData['skills'] as $skill) {\n-                Skill::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'name' => $skill,\n-                ]);\n-            }\n-        }\n-    \n-        // Save work experiences\n-        if (!empty($validatedData['job_title'])) {\n-            foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-                WorkExperience::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'job_title' => $jobTitle,\n-                    'company_name' => $validatedData['company_name'][$index],\n-                    'location' => $validatedData['location'][$index],\n-                    'start_date' => $validatedData['start_date'][$index],\n-                    'end_date' => $validatedData['end_date'][$index] ?? null,\n-                    'responsibilities' => $validatedData['responsibilities'][$index],\n-                ]);\n-            }\n-        }\n-    \n-        // Save educations\n-        if (!empty($validatedData['education_name'])) {\n-            foreach ($validatedData['education_name'] as $index => $educationName) {\n-                Education::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'degree' => $validatedData['education_degree'][$index],\n-                    'school_name' => $validatedData['education_school_name'][$index],\n-                    'Educlevel' => $validatedData['education_Educlevel'][$index],\n-                    'start_date' => $validatedData['education_start_date'][$index],\n-                    'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-                ]);\n-            }\n-        }\n-   \n-        // Save certificates\n-        if (!empty($validatedData['certificate_names'])) {\n-            foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-                Certificate::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'name' => $certificateName,\n-                    'issuing_organization' => $validatedData['issuing_organizations'][$index],\n-                    'issue_date' => $validatedData['issue_dates'][$index],\n-                ]);\n-            }\n-        }\n-    \n-        return redirect()->route('CreateCv');\n-    }\n-    \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732986978678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,5 +141,22 @@\n     \n         return redirect()->route('CreateCv');\n     }\n     \n-}\n\\ No newline at end of file\n+\n+/**\n+ * Display the created CV.\n+ *\n+ * @param int $id\n+ * @return \\Illuminate\\View\\View\n+ */\n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_after_creation', compact('personalInfo'));\n+}\n+\n+\n+}\n+\n"
                },
                {
                    "date": 1732987068214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,9 +138,9 @@\n                 ]);\n             }\n         }\n     \n-        return redirect()->route('CreateCv');\n+        return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n     }\n     \n \n /**\n"
                },
                {
                    "date": 1733024396084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,15 @@\n             'last_name' => 'required|string|max:255',\n             'email' => 'required|email|max:255',\n             'phone' => 'required|string|max:15',\n             'address' => 'required|string|max:500',\n+            // Validation rules\n+            'Image' => 'nullable|image|mimes:jpg,png,jpeg,gif|max:2048', // Accept image files up to 2MB\n+            'Objective' => 'nullable|string|max:255',\n+            'Facebook' => 'nullable|string|url|max:255',\n+            'BirthDate' => 'nullable|date',\n+\n+\n     \n             // Skills\n             'skills' => 'nullable|array',\n             'skills.*' => 'string|max:255',\n@@ -69,8 +76,10 @@\n             'education_start_date.*' => 'date',\n             'education_graduation_date' => 'nullable|array',\n             'education_graduation_date.*' => 'nullable|date',\n     \n+\n+\n             // Certificates validation\n             'certificate_names' => 'nullable|array',\n             'certificate_names.*' => 'string|max:255',\n             'issuing_organizations' => 'nullable|array',\n@@ -78,15 +87,25 @@\n             'issue_dates' => 'nullable|array',\n             'issue_dates.*' => 'date',\n         ]);\n     \n+        if ($request->hasFile('Image')) {\n+            $imagePath = $request->file('Image')->store('images', 'public'); // Save in the 'public/images' directory\n+        } else {\n+            $imagePath = null;\n+        }\n+        \n         // Save personal info\n         $personalInfo = PersonalInfo::create([\n             'first_name' => $validatedData['first_name'],\n             'last_name' => $validatedData['last_name'],\n             'email' => $validatedData['email'],\n             'phone' => $validatedData['phone'],\n             'address' => $validatedData['address'],\n+            'Image' => $imagePath,\n+            'Objective' => $validatedData['Objective'] ?? null,\n+            'Facebook' => $validatedData['Facebook'] ?? null,\n+            'BirthDate' => $validatedData['BirthDate'] ?? null,\n         ]);\n     \n         // Save skills\n         if (!empty($validatedData['skills'])) {\n"
                },
                {
                    "date": 1733024935846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,22 +87,22 @@\n             'issue_dates' => 'nullable|array',\n             'issue_dates.*' => 'date',\n         ]);\n     \n-        if ($request->hasFile('Image')) {\n-            $imagePath = $request->file('Image')->store('images', 'public'); // Save in the 'public/images' directory\n-        } else {\n-            $imagePath = null;\n-        }\n+       // Handle Image Upload\n+    $imagePath = null;\n+    if ($request->hasFile('Image')) {\n+        $imagePath = $request->file('Image')->store('images', 'public');\n+    }\n         \n         // Save personal info\n         $personalInfo = PersonalInfo::create([\n             'first_name' => $validatedData['first_name'],\n             'last_name' => $validatedData['last_name'],\n             'email' => $validatedData['email'],\n             'phone' => $validatedData['phone'],\n             'address' => $validatedData['address'],\n-            'Image' => $imagePath,\n+            'Image' => $imagePath, // Store the image path\n             'Objective' => $validatedData['Objective'] ?? null,\n             'Facebook' => $validatedData['Facebook'] ?? null,\n             'BirthDate' => $validatedData['BirthDate'] ?? null,\n         ]);\n"
                },
                {
                    "date": 1733025599237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,177 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+    {\n+        // Validate incoming data\n+        $validatedData = $request->validate([\n+            // Personal Info validation\n+            'first_name' => 'required|string|max:255',\n+            'last_name' => 'required|string|max:255',\n+            'email' => 'required|email|max:255',\n+            'phone' => 'required|string|max:15',\n+            'address' => 'required|string|max:500',\n+            // Validation rules\n+           \n+            'Objective' => 'nullable|string|max:255',\n+            'Facebook' => 'nullable|string|url|max:255',\n+            'BirthDate' => 'nullable|date',\n+\n+\n+    \n+            // Skills\n+            'skills' => 'nullable|array',\n+            'skills.*' => 'string|max:255',\n+    \n+            // Work Experience\n+            'job_title' => 'nullable|array',\n+            'job_title.*' => 'string|max:255',\n+            'company_name' => 'nullable|array',\n+            'company_name.*' => 'string|max:255',\n+            'location' => 'nullable|array',\n+            'location.*' => 'string|max:255',\n+            'start_date' => 'nullable|array',\n+            'start_date.*' => 'date',\n+            'end_date' => 'nullable|array',\n+            'end_date.*' => 'nullable|date',\n+            'responsibilities' => 'nullable|array',\n+            'responsibilities.*' => 'string',\n+    \n+            // Education validation\n+            'education_name' => 'nullable|array',\n+            'education_name.*' => 'string|max:255',\n+            'education_degree' => 'nullable|array',\n+            'education_degree.*' => 'string|max:255',\n+            'education_school_name' => 'nullable|array',\n+            'education_school_name.*' => 'string|max:255',\n+            'education_Educlevel' => 'nullable|array',\n+            'education_Educlevel.*' => 'string|max:255',\n+            'education_start_date' => 'nullable|array',\n+            'education_start_date.*' => 'date',\n+            'education_graduation_date' => 'nullable|array',\n+            'education_graduation_date.*' => 'nullable|date',\n+    \n+\n+\n+            // Certificates validation\n+            'certificate_names' => 'nullable|array',\n+            'certificate_names.*' => 'string|max:255',\n+            'issuing_organizations' => 'nullable|array',\n+            'issuing_organizations.*' => 'string|max:255',\n+            'issue_dates' => 'nullable|array',\n+            'issue_dates.*' => 'date',\n+        ]);\n+    \n+    \n+        \n+        // Save personal info\n+        $personalInfo = PersonalInfo::create([\n+            'first_name' => $validatedData['first_name'],\n+            'last_name' => $validatedData['last_name'],\n+            'email' => $validatedData['email'],\n+            'phone' => $validatedData['phone'],\n+            'address' => $validatedData['address'],\n+      \n+            'Objective' => $validatedData['Objective'] ?? null,\n+            'Facebook' => $validatedData['Facebook'] ?? null,\n+            'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        ]);\n+    \n+        // Save skills\n+        if (!empty($validatedData['skills'])) {\n+            foreach ($validatedData['skills'] as $skill) {\n+                Skill::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'name' => $skill,\n+                ]);\n+            }\n+        }\n+    \n+        // Save work experiences\n+        if (!empty($validatedData['job_title'])) {\n+            foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+                WorkExperience::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'job_title' => $jobTitle,\n+                    'company_name' => $validatedData['company_name'][$index],\n+                    'location' => $validatedData['location'][$index],\n+                    'start_date' => $validatedData['start_date'][$index],\n+                    'end_date' => $validatedData['end_date'][$index] ?? null,\n+                    'responsibilities' => $validatedData['responsibilities'][$index],\n+                ]);\n+            }\n+        }\n+    \n+        // Save educations\n+        if (!empty($validatedData['education_name'])) {\n+            foreach ($validatedData['education_name'] as $index => $educationName) {\n+                Education::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'degree' => $validatedData['education_degree'][$index],\n+                    'school_name' => $validatedData['education_school_name'][$index],\n+                    'Educlevel' => $validatedData['education_Educlevel'][$index],\n+                    'start_date' => $validatedData['education_start_date'][$index],\n+                    'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+                ]);\n+            }\n+        }\n+   \n+        // Save certificates\n+        if (!empty($validatedData['certificate_names'])) {\n+            foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+                Certificate::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'name' => $certificateName,\n+                    'issuing_organization' => $validatedData['issuing_organizations'][$index],\n+                    'issue_date' => $validatedData['issue_dates'][$index],\n+                ]);\n+            }\n+        }\n+    \n+        return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+    }\n+    \n+\n+/**\n+ * Display the created CV.\n+ *\n+ * @param int $id\n+ * @return \\Illuminate\\View\\View\n+ */\n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_after_creation', compact('personalInfo'));\n+}\n+\n+\n+}\n+\n"
                },
                {
                    "date": 1733025644666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,185 +174,4 @@\n \n \n }\n \n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-    {\n-        // Validate incoming data\n-        $validatedData = $request->validate([\n-            // Personal Info validation\n-            'first_name' => 'required|string|max:255',\n-            'last_name' => 'required|string|max:255',\n-            'email' => 'required|email|max:255',\n-            'phone' => 'required|string|max:15',\n-            'address' => 'required|string|max:500',\n-            // Validation rules\n-            'Image' => 'nullable|image|mimes:jpg,png,jpeg,gif|max:2048', // Accept image files up to 2MB\n-            'Objective' => 'nullable|string|max:255',\n-            'Facebook' => 'nullable|string|url|max:255',\n-            'BirthDate' => 'nullable|date',\n-\n-\n-    \n-            // Skills\n-            'skills' => 'nullable|array',\n-            'skills.*' => 'string|max:255',\n-    \n-            // Work Experience\n-            'job_title' => 'nullable|array',\n-            'job_title.*' => 'string|max:255',\n-            'company_name' => 'nullable|array',\n-            'company_name.*' => 'string|max:255',\n-            'location' => 'nullable|array',\n-            'location.*' => 'string|max:255',\n-            'start_date' => 'nullable|array',\n-            'start_date.*' => 'date',\n-            'end_date' => 'nullable|array',\n-            'end_date.*' => 'nullable|date',\n-            'responsibilities' => 'nullable|array',\n-            'responsibilities.*' => 'string',\n-    \n-            // Education validation\n-            'education_name' => 'nullable|array',\n-            'education_name.*' => 'string|max:255',\n-            'education_degree' => 'nullable|array',\n-            'education_degree.*' => 'string|max:255',\n-            'education_school_name' => 'nullable|array',\n-            'education_school_name.*' => 'string|max:255',\n-            'education_Educlevel' => 'nullable|array',\n-            'education_Educlevel.*' => 'string|max:255',\n-            'education_start_date' => 'nullable|array',\n-            'education_start_date.*' => 'date',\n-            'education_graduation_date' => 'nullable|array',\n-            'education_graduation_date.*' => 'nullable|date',\n-    \n-\n-\n-            // Certificates validation\n-            'certificate_names' => 'nullable|array',\n-            'certificate_names.*' => 'string|max:255',\n-            'issuing_organizations' => 'nullable|array',\n-            'issuing_organizations.*' => 'string|max:255',\n-            'issue_dates' => 'nullable|array',\n-            'issue_dates.*' => 'date',\n-        ]);\n-    \n-       // Handle Image Upload\n-    $imagePath = null;\n-    if ($request->hasFile('Image')) {\n-        $imagePath = $request->file('Image')->store('images', 'public');\n-    }\n-        \n-        // Save personal info\n-        $personalInfo = PersonalInfo::create([\n-            'first_name' => $validatedData['first_name'],\n-            'last_name' => $validatedData['last_name'],\n-            'email' => $validatedData['email'],\n-            'phone' => $validatedData['phone'],\n-            'address' => $validatedData['address'],\n-            'Image' => $imagePath, // Store the image path\n-            'Objective' => $validatedData['Objective'] ?? null,\n-            'Facebook' => $validatedData['Facebook'] ?? null,\n-            'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        ]);\n-    \n-        // Save skills\n-        if (!empty($validatedData['skills'])) {\n-            foreach ($validatedData['skills'] as $skill) {\n-                Skill::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'name' => $skill,\n-                ]);\n-            }\n-        }\n-    \n-        // Save work experiences\n-        if (!empty($validatedData['job_title'])) {\n-            foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-                WorkExperience::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'job_title' => $jobTitle,\n-                    'company_name' => $validatedData['company_name'][$index],\n-                    'location' => $validatedData['location'][$index],\n-                    'start_date' => $validatedData['start_date'][$index],\n-                    'end_date' => $validatedData['end_date'][$index] ?? null,\n-                    'responsibilities' => $validatedData['responsibilities'][$index],\n-                ]);\n-            }\n-        }\n-    \n-        // Save educations\n-        if (!empty($validatedData['education_name'])) {\n-            foreach ($validatedData['education_name'] as $index => $educationName) {\n-                Education::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'degree' => $validatedData['education_degree'][$index],\n-                    'school_name' => $validatedData['education_school_name'][$index],\n-                    'Educlevel' => $validatedData['education_Educlevel'][$index],\n-                    'start_date' => $validatedData['education_start_date'][$index],\n-                    'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-                ]);\n-            }\n-        }\n-   \n-        // Save certificates\n-        if (!empty($validatedData['certificate_names'])) {\n-            foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-                Certificate::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'name' => $certificateName,\n-                    'issuing_organization' => $validatedData['issuing_organizations'][$index],\n-                    'issue_date' => $validatedData['issue_dates'][$index],\n-                ]);\n-            }\n-        }\n-    \n-        return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n-    }\n-    \n-\n-/**\n- * Display the created CV.\n- *\n- * @param int $id\n- * @return \\Illuminate\\View\\View\n- */\n-public function viewCV($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_after_creation', compact('personalInfo'));\n-}\n-\n-\n-}\n-\n"
                },
                {
                    "date": 1733033758752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n      *\n      * @param  \\Illuminate\\Http\\Request  $request\n      * @return \\Illuminate\\Http\\RedirectResponse\n      */\n-    public function store(Request $request)\n+    public function register(Request $request)\n     {\n         // Validate incoming data\n         $validatedData = $request->validate([\n             // Personal Info validation\n"
                },
                {
                    "date": 1733033770522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,177 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function register(Request $request)\n+    {\n+        // Validate incoming data\n+        $validatedData = $request->validate([\n+            // Personal Info validation\n+            'first_name' => 'required|string|max:255',\n+            'last_name' => 'required|string|max:255',\n+            'email' => 'required|email|max:255',\n+            'phone' => 'required|string|max:15',\n+            'address' => 'required|string|max:500',\n+            // Validation rules\n+           \n+            'Objective' => 'nullable|string|max:255',\n+            'Facebook' => 'nullable|string|url|max:255',\n+            'BirthDate' => 'nullable|date',\n+\n+\n+    \n+            // Skills\n+            'skills' => 'nullable|array',\n+            'skills.*' => 'string|max:255',\n+    \n+            // Work Experience\n+            'job_title' => 'nullable|array',\n+            'job_title.*' => 'string|max:255',\n+            'company_name' => 'nullable|array',\n+            'company_name.*' => 'string|max:255',\n+            'location' => 'nullable|array',\n+            'location.*' => 'string|max:255',\n+            'start_date' => 'nullable|array',\n+            'start_date.*' => 'date',\n+            'end_date' => 'nullable|array',\n+            'end_date.*' => 'nullable|date',\n+            'responsibilities' => 'nullable|array',\n+            'responsibilities.*' => 'string',\n+    \n+            // Education validation\n+            'education_name' => 'nullable|array',\n+            'education_name.*' => 'string|max:255',\n+            'education_degree' => 'nullable|array',\n+            'education_degree.*' => 'string|max:255',\n+            'education_school_name' => 'nullable|array',\n+            'education_school_name.*' => 'string|max:255',\n+            'education_Educlevel' => 'nullable|array',\n+            'education_Educlevel.*' => 'string|max:255',\n+            'education_start_date' => 'nullable|array',\n+            'education_start_date.*' => 'date',\n+            'education_graduation_date' => 'nullable|array',\n+            'education_graduation_date.*' => 'nullable|date',\n+    \n+\n+\n+            // Certificates validation\n+            'certificate_names' => 'nullable|array',\n+            'certificate_names.*' => 'string|max:255',\n+            'issuing_organizations' => 'nullable|array',\n+            'issuing_organizations.*' => 'string|max:255',\n+            'issue_dates' => 'nullable|array',\n+            'issue_dates.*' => 'date',\n+        ]);\n+    \n+    \n+        \n+        // Save personal info\n+        $personalInfo = PersonalInfo::create([\n+            'first_name' => $validatedData['first_name'],\n+            'last_name' => $validatedData['last_name'],\n+            'email' => $validatedData['email'],\n+            'phone' => $validatedData['phone'],\n+            'address' => $validatedData['address'],\n+      \n+            'Objective' => $validatedData['Objective'] ?? null,\n+            'Facebook' => $validatedData['Facebook'] ?? null,\n+            'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        ]);\n+    \n+        // Save skills\n+        if (!empty($validatedData['skills'])) {\n+            foreach ($validatedData['skills'] as $skill) {\n+                Skill::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'name' => $skill,\n+                ]);\n+            }\n+        }\n+    \n+        // Save work experiences\n+        if (!empty($validatedData['job_title'])) {\n+            foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+                WorkExperience::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'job_title' => $jobTitle,\n+                    'company_name' => $validatedData['company_name'][$index],\n+                    'location' => $validatedData['location'][$index],\n+                    'start_date' => $validatedData['start_date'][$index],\n+                    'end_date' => $validatedData['end_date'][$index] ?? null,\n+                    'responsibilities' => $validatedData['responsibilities'][$index],\n+                ]);\n+            }\n+        }\n+    \n+        // Save educations\n+        if (!empty($validatedData['education_name'])) {\n+            foreach ($validatedData['education_name'] as $index => $educationName) {\n+                Education::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'degree' => $validatedData['education_degree'][$index],\n+                    'school_name' => $validatedData['education_school_name'][$index],\n+                    'Educlevel' => $validatedData['education_Educlevel'][$index],\n+                    'start_date' => $validatedData['education_start_date'][$index],\n+                    'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+                ]);\n+            }\n+        }\n+   \n+        // Save certificates\n+        if (!empty($validatedData['certificate_names'])) {\n+            foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+                Certificate::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'name' => $certificateName,\n+                    'issuing_organization' => $validatedData['issuing_organizations'][$index],\n+                    'issue_date' => $validatedData['issue_dates'][$index],\n+                ]);\n+            }\n+        }\n+    \n+        return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+    }\n+    \n+\n+/**\n+ * Display the created CV.\n+ *\n+ * @param int $id\n+ * @return \\Illuminate\\View\\View\n+ */\n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_after_creation', compact('personalInfo'));\n+}\n+\n+\n+}\n+\n"
                },
                {
                    "date": 1733033799425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n      *\n      * @param  \\Illuminate\\Http\\Request  $request\n      * @return \\Illuminate\\Http\\RedirectResponse\n      */\n-    public function register(Request $request)\n+    public function store(Request $request)\n     {\n         // Validate incoming data\n         $validatedData = $request->validate([\n             // Personal Info validation\n@@ -174,181 +174,4 @@\n \n \n }\n \n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function register(Request $request)\n-    {\n-        // Validate incoming data\n-        $validatedData = $request->validate([\n-            // Personal Info validation\n-            'first_name' => 'required|string|max:255',\n-            'last_name' => 'required|string|max:255',\n-            'email' => 'required|email|max:255',\n-            'phone' => 'required|string|max:15',\n-            'address' => 'required|string|max:500',\n-            // Validation rules\n-           \n-            'Objective' => 'nullable|string|max:255',\n-            'Facebook' => 'nullable|string|url|max:255',\n-            'BirthDate' => 'nullable|date',\n-\n-\n-    \n-            // Skills\n-            'skills' => 'nullable|array',\n-            'skills.*' => 'string|max:255',\n-    \n-            // Work Experience\n-            'job_title' => 'nullable|array',\n-            'job_title.*' => 'string|max:255',\n-            'company_name' => 'nullable|array',\n-            'company_name.*' => 'string|max:255',\n-            'location' => 'nullable|array',\n-            'location.*' => 'string|max:255',\n-            'start_date' => 'nullable|array',\n-            'start_date.*' => 'date',\n-            'end_date' => 'nullable|array',\n-            'end_date.*' => 'nullable|date',\n-            'responsibilities' => 'nullable|array',\n-            'responsibilities.*' => 'string',\n-    \n-            // Education validation\n-            'education_name' => 'nullable|array',\n-            'education_name.*' => 'string|max:255',\n-            'education_degree' => 'nullable|array',\n-            'education_degree.*' => 'string|max:255',\n-            'education_school_name' => 'nullable|array',\n-            'education_school_name.*' => 'string|max:255',\n-            'education_Educlevel' => 'nullable|array',\n-            'education_Educlevel.*' => 'string|max:255',\n-            'education_start_date' => 'nullable|array',\n-            'education_start_date.*' => 'date',\n-            'education_graduation_date' => 'nullable|array',\n-            'education_graduation_date.*' => 'nullable|date',\n-    \n-\n-\n-            // Certificates validation\n-            'certificate_names' => 'nullable|array',\n-            'certificate_names.*' => 'string|max:255',\n-            'issuing_organizations' => 'nullable|array',\n-            'issuing_organizations.*' => 'string|max:255',\n-            'issue_dates' => 'nullable|array',\n-            'issue_dates.*' => 'date',\n-        ]);\n-    \n-    \n-        \n-        // Save personal info\n-        $personalInfo = PersonalInfo::create([\n-            'first_name' => $validatedData['first_name'],\n-            'last_name' => $validatedData['last_name'],\n-            'email' => $validatedData['email'],\n-            'phone' => $validatedData['phone'],\n-            'address' => $validatedData['address'],\n-      \n-            'Objective' => $validatedData['Objective'] ?? null,\n-            'Facebook' => $validatedData['Facebook'] ?? null,\n-            'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        ]);\n-    \n-        // Save skills\n-        if (!empty($validatedData['skills'])) {\n-            foreach ($validatedData['skills'] as $skill) {\n-                Skill::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'name' => $skill,\n-                ]);\n-            }\n-        }\n-    \n-        // Save work experiences\n-        if (!empty($validatedData['job_title'])) {\n-            foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-                WorkExperience::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'job_title' => $jobTitle,\n-                    'company_name' => $validatedData['company_name'][$index],\n-                    'location' => $validatedData['location'][$index],\n-                    'start_date' => $validatedData['start_date'][$index],\n-                    'end_date' => $validatedData['end_date'][$index] ?? null,\n-                    'responsibilities' => $validatedData['responsibilities'][$index],\n-                ]);\n-            }\n-        }\n-    \n-        // Save educations\n-        if (!empty($validatedData['education_name'])) {\n-            foreach ($validatedData['education_name'] as $index => $educationName) {\n-                Education::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'degree' => $validatedData['education_degree'][$index],\n-                    'school_name' => $validatedData['education_school_name'][$index],\n-                    'Educlevel' => $validatedData['education_Educlevel'][$index],\n-                    'start_date' => $validatedData['education_start_date'][$index],\n-                    'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-                ]);\n-            }\n-        }\n-   \n-        // Save certificates\n-        if (!empty($validatedData['certificate_names'])) {\n-            foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-                Certificate::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'name' => $certificateName,\n-                    'issuing_organization' => $validatedData['issuing_organizations'][$index],\n-                    'issue_date' => $validatedData['issue_dates'][$index],\n-                ]);\n-            }\n-        }\n-    \n-        return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n-    }\n-    \n-\n-/**\n- * Display the created CV.\n- *\n- * @param int $id\n- * @return \\Illuminate\\View\\View\n- */\n-public function viewCV($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_after_creation', compact('personalInfo'));\n-}\n-\n-\n-}\n-\n"
                },
                {
                    "date": 1733071929345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,9 @@\n         $validatedData = $request->validate([\n             // Personal Info validation\n             'first_name' => 'required|string|max:255',\n             'last_name' => 'required|string|max:255',\n+            'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048', // Image validation\n             'email' => 'required|email|max:255',\n             'phone' => 'required|string|max:15',\n             'address' => 'required|string|max:500',\n             // Validation rules\n"
                },
                {
                    "date": 1733072058475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,15 @@\n             'issue_dates' => 'nullable|array',\n             'issue_dates.*' => 'date',\n         ]);\n     \n-    \n+        if ($request->hasFile('image')) {\n+            $imageName = time() . '.' . $request->image->extension(); // Unique name for the image\n+            $request->image->move(public_path('uploads/images'), $imageName); // Save to public/uploads/images\n+            $validatedData['image'] = $imageName;\n+        } else {\n+            $validatedData['image'] = null; // No image uploaded\n+        }\n         \n         // Save personal info\n         $personalInfo = PersonalInfo::create([\n             'first_name' => $validatedData['first_name'],\n"
                },
                {
                    "date": 1733072648371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n             'Objective' => $validatedData['Objective'] ?? null,\n             'Facebook' => $validatedData['Facebook'] ?? null,\n             'BirthDate' => $validatedData['BirthDate'] ?? null,\n         ]);\n-    \n+\n         // Save skills\n         if (!empty($validatedData['skills'])) {\n             foreach ($validatedData['skills'] as $skill) {\n                 Skill::create([\n"
                },
                {
                    "date": 1733072800357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,13 +89,18 @@\n             'issue_dates.*' => 'date',\n         ]);\n     \n         if ($request->hasFile('image')) {\n-            $imageName = time() . '.' . $request->image->extension(); // Unique name for the image\n-            $request->image->move(public_path('uploads/images'), $imageName); // Save to public/uploads/images\n-            $validatedData['image'] = $imageName;\n+            try {\n+                $imageName = time() . '.' . $request->image->extension(); \n+                $request->image->move(public_path('uploads/images'), $imageName);\n+                $validatedData['image'] = $imageName;\n+            } catch (\\Exception $e) {\n+                \\Log::error(\"Image Upload Error: \" . $e->getMessage());\n+                return back()->withErrors(['image' => 'Image upload failed. Please try again.']);\n+            }\n         } else {\n-            $validatedData['image'] = null; // No image uploaded\n+            $validatedData['image'] = null;\n         }\n         \n         // Save personal info\n         $personalInfo = PersonalInfo::create([\n"
                },
                {
                    "date": 1733073174971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,18 +89,18 @@\n             'issue_dates.*' => 'date',\n         ]);\n     \n         if ($request->hasFile('image')) {\n-            try {\n-                $imageName = time() . '.' . $request->image->extension(); \n-                $request->image->move(public_path('uploads/images'), $imageName);\n-                $validatedData['image'] = $imageName;\n-            } catch (\\Exception $e) {\n-                \\Log::error(\"Image Upload Error: \" . $e->getMessage());\n-                return back()->withErrors(['image' => 'Image upload failed. Please try again.']);\n-            }\n+            // Generate a unique name for the image\n+            $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+            \n+            // Move the uploaded image to the specified directory\n+            $request->image->move(public_path('uploads/images'), $imageName);\n+            \n+            // Save the image name in the database\n+            $validatedData['image'] = $imageName;\n         } else {\n-            $validatedData['image'] = null;\n+            $validatedData['image'] = null; // Handle if no image is uploaded\n         }\n         \n         // Save personal info\n         $personalInfo = PersonalInfo::create([\n"
                },
                {
                    "date": 1733074191596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,21 +88,25 @@\n             'issue_dates' => 'nullable|array',\n             'issue_dates.*' => 'date',\n         ]);\n     \n-        if ($request->hasFile('image')) {\n-            // Generate a unique name for the image\n-            $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-            \n-            // Move the uploaded image to the specified directory\n-            $request->image->move(public_path('uploads/images'), $imageName);\n-            \n-            // Save the image name in the database\n-            $validatedData['image'] = $imageName;\n-        } else {\n-            $validatedData['image'] = null; // Handle if no image is uploaded\n-        }\n+       // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        // Generate a unique name for the image\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n         \n+        // Move the uploaded image to the specified directory\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        \n+        // Save the image path in the validated data\n+        $validatedData['image'] = 'uploads/images/' . $imageName; // Relative path\n+    } else {\n+        $validatedData['image'] = null; // Default value if no image is uploaded\n+    }\n+\n+    // Insert the data into the database\n+    \\App\\Models\\PersonalInfo::create($validatedData);\n+        \n         // Save personal info\n         $personalInfo = PersonalInfo::create([\n             'first_name' => $validatedData['first_name'],\n             'last_name' => $validatedData['last_name'],\n"
                },
                {
                    "date": 1733074204696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,9 +103,9 @@\n         $validatedData['image'] = null; // Default value if no image is uploaded\n     }\n \n     // Insert the data into the database\n-    \\App\\Models\\PersonalInfo::create($validatedData);\n+    App\\Models\\PersonalInfo::create($validatedData);\n         \n         // Save personal info\n         $personalInfo = PersonalInfo::create([\n             'first_name' => $validatedData['first_name'],\n"
                },
                {
                    "date": 1733074224180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,9 +103,9 @@\n         $validatedData['image'] = null; // Default value if no image is uploaded\n     }\n \n     // Insert the data into the database\n-    App\\Models\\PersonalInfo::create($validatedData);\n+    \\App\\Models\\PersonalInfo::create($validatedData);\n         \n         // Save personal info\n         $personalInfo = PersonalInfo::create([\n             'first_name' => $validatedData['first_name'],\n"
                },
                {
                    "date": 1733074476932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,10 +102,10 @@\n     } else {\n         $validatedData['image'] = null; // Default value if no image is uploaded\n     }\n \n-    // Insert the data into the database\n-    \\App\\Models\\PersonalInfo::create($validatedData);\n+\n+  \n         \n         // Save personal info\n         $personalInfo = PersonalInfo::create([\n             'first_name' => $validatedData['first_name'],\n"
                },
                {
                    "date": 1733074751492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,8 +109,9 @@\n         // Save personal info\n         $personalInfo = PersonalInfo::create([\n             'first_name' => $validatedData['first_name'],\n             'last_name' => $validatedData['last_name'],\n+            'image' => $validatedData['image'], // Ensure this is present\n             'email' => $validatedData['email'],\n             'phone' => $validatedData['phone'],\n             'address' => $validatedData['address'],\n       \n"
                },
                {
                    "date": 1733147845230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,11 @@\n            \n             'Objective' => 'nullable|string|max:255',\n             'Facebook' => 'nullable|string|url|max:255',\n             'BirthDate' => 'nullable|date',\n+            'Height' => 'required|string|max:500',\n+            'weight' => 'required|string|max:500',\n+            'Marital_Status' => 'required|string|max:500',\n \n \n     \n             // Skills\n"
                },
                {
                    "date": 1733147944988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,11 +42,11 @@\n            \n             'Objective' => 'nullable|string|max:255',\n             'Facebook' => 'nullable|string|url|max:255',\n             'BirthDate' => 'nullable|date',\n-            'Height' => 'required|string|max:500',\n-            'weight' => 'required|string|max:500',\n-            'Marital_Status' => 'required|string|max:500',\n+            'Height' => 'required|string|max:255',\n+            'weight' => 'required|string|max:255',\n+            'Marital_Status' => 'required|string|max:255',\n \n \n     \n             // Skills\n"
                },
                {
                    "date": 1733148014289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,8 +120,12 @@\n       \n             'Objective' => $validatedData['Objective'] ?? null,\n             'Facebook' => $validatedData['Facebook'] ?? null,\n             'BirthDate' => $validatedData['BirthDate'] ?? null,\n+\n+            'Height' => $validatedData['Height'] ?? null,\n+            'weight' => $validatedData['weight'] ?? null,\n+            'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n         ]);\n \n         // Save skills\n         if (!empty($validatedData['skills'])) {\n"
                },
                {
                    "date": 1733148926719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,130 +28,116 @@\n      * @return \\Illuminate\\Http\\RedirectResponse\n      */\n     public function store(Request $request)\n     {\n-        // Validate incoming data\n-        $validatedData = $request->validate([\n-            // Personal Info validation\n-            'first_name' => 'required|string|max:255',\n-            'last_name' => 'required|string|max:255',\n-            'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048', // Image validation\n-            'email' => 'required|email|max:255',\n-            'phone' => 'required|string|max:15',\n-            'address' => 'required|string|max:500',\n-            // Validation rules\n-           \n-            'Objective' => 'nullable|string|max:255',\n-            'Facebook' => 'nullable|string|url|max:255',\n-            'BirthDate' => 'nullable|date',\n-            'Height' => 'required|string|max:255',\n-            'weight' => 'required|string|max:255',\n-            'Marital_Status' => 'required|string|max:255',\n+       // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Personal Info validation\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048', // Image validation\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n \n+        // Optional fields\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n \n-    \n-            // Skills\n-            'skills' => 'nullable|array',\n-            'skills.*' => 'string|max:255',\n-    \n-            // Work Experience\n-            'job_title' => 'nullable|array',\n-            'job_title.*' => 'string|max:255',\n-            'company_name' => 'nullable|array',\n-            'company_name.*' => 'string|max:255',\n-            'location' => 'nullable|array',\n-            'location.*' => 'string|max:255',\n-            'start_date' => 'nullable|array',\n-            'start_date.*' => 'date',\n-            'end_date' => 'nullable|array',\n-            'end_date.*' => 'nullable|date',\n-            'responsibilities' => 'nullable|array',\n-            'responsibilities.*' => 'string',\n-    \n-            // Education validation\n-            'education_name' => 'nullable|array',\n-            'education_name.*' => 'string|max:255',\n-            'education_degree' => 'nullable|array',\n-            'education_degree.*' => 'string|max:255',\n-            'education_school_name' => 'nullable|array',\n-            'education_school_name.*' => 'string|max:255',\n-            'education_Educlevel' => 'nullable|array',\n-            'education_Educlevel.*' => 'string|max:255',\n-            'education_start_date' => 'nullable|array',\n-            'education_start_date.*' => 'date',\n-            'education_graduation_date' => 'nullable|array',\n-            'education_graduation_date.*' => 'nullable|date',\n-    \n+        // Skills\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n \n+        // Work Experience\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n \n-            // Certificates validation\n-            'certificate_names' => 'nullable|array',\n-            'certificate_names.*' => 'string|max:255',\n-            'issuing_organizations' => 'nullable|array',\n-            'issuing_organizations.*' => 'string|max:255',\n-            'issue_dates' => 'nullable|array',\n-            'issue_dates.*' => 'date',\n-        ]);\n+        // Education validation\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+\n+        // Certificates validation\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n     \n-       // Handle the image upload\n+        // Handle the image upload\n     if ($request->hasFile('image')) {\n-        // Generate a unique name for the image\n         $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        \n-        // Move the uploaded image to the specified directory\n         $request->image->move(public_path('uploads/images'), $imageName);\n-        \n-        // Save the image path in the validated data\n-        $validatedData['image'] = 'uploads/images/' . $imageName; // Relative path\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n     } else {\n         $validatedData['image'] = null; // Default value if no image is uploaded\n     }\n \n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n \n-  \n-        \n-        // Save personal info\n-        $personalInfo = PersonalInfo::create([\n-            'first_name' => $validatedData['first_name'],\n-            'last_name' => $validatedData['last_name'],\n-            'image' => $validatedData['image'], // Ensure this is present\n-            'email' => $validatedData['email'],\n-            'phone' => $validatedData['phone'],\n-            'address' => $validatedData['address'],\n-      \n-            'Objective' => $validatedData['Objective'] ?? null,\n-            'Facebook' => $validatedData['Facebook'] ?? null,\n-            'BirthDate' => $validatedData['BirthDate'] ?? null,\n-\n-            'Height' => $validatedData['Height'] ?? null,\n-            'weight' => $validatedData['weight'] ?? null,\n-            'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-        ]);\n-\n-        // Save skills\n-        if (!empty($validatedData['skills'])) {\n-            foreach ($validatedData['skills'] as $skill) {\n-                Skill::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'name' => $skill,\n-                ]);\n-            }\n+     // Save skills (can be empty)\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n         }\n-    \n-        // Save work experiences\n-        if (!empty($validatedData['job_title'])) {\n-            foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-                WorkExperience::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'job_title' => $jobTitle,\n-                    'company_name' => $validatedData['company_name'][$index],\n-                    'location' => $validatedData['location'][$index],\n-                    'start_date' => $validatedData['start_date'][$index],\n-                    'end_date' => $validatedData['end_date'][$index] ?? null,\n-                    'responsibilities' => $validatedData['responsibilities'][$index],\n-                ]);\n-            }\n+    }\n+       // Save work experiences (can be empty)\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n         }\n+    }\n     \n         // Save educations\n         if (!empty($validatedData['education_name'])) {\n             foreach ($validatedData['education_name'] as $index => $educationName) {\n"
                },
                {
                    "date": 1733148937297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,21 +137,21 @@\n             ]);\n         }\n     }\n     \n-        // Save educations\n-        if (!empty($validatedData['education_name'])) {\n-            foreach ($validatedData['education_name'] as $index => $educationName) {\n-                Education::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'degree' => $validatedData['education_degree'][$index],\n-                    'school_name' => $validatedData['education_school_name'][$index],\n-                    'Educlevel' => $validatedData['education_Educlevel'][$index],\n-                    'start_date' => $validatedData['education_start_date'][$index],\n-                    'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-                ]);\n-            }\n+         // Save educations (can be empty)\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n         }\n+    }\n    \n         // Save certificates\n         if (!empty($validatedData['certificate_names'])) {\n             foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n"
                },
                {
                    "date": 1733148953930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,22 +151,22 @@\n             ]);\n         }\n     }\n    \n-        // Save certificates\n-        if (!empty($validatedData['certificate_names'])) {\n-            foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-                Certificate::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'name' => $certificateName,\n-                    'issuing_organization' => $validatedData['issuing_organizations'][$index],\n-                    'issue_date' => $validatedData['issue_dates'][$index],\n-                ]);\n-            }\n+        // Save certificates (can be empty)\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n         }\n-    \n-        return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n     }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+}\n     \n \n /**\n  * Display the created CV.\n"
                },
                {
                    "date": 1733150704358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,10 @@\n      * @param  \\Illuminate\\Http\\Request  $request\n      * @return \\Illuminate\\Http\\RedirectResponse\n      */\n     public function store(Request $request)\n-    {\n-       // Validate incoming data\n+{\n+    // Validate incoming data\n     $validatedData = $request->validate([\n         // Personal Info validation\n         'first_name' => 'required|string|max:255',\n         'last_name' => 'required|string|max:255',\n@@ -87,8 +87,26 @@\n         'issue_dates' => 'nullable|array',\n         'issue_dates.*' => 'date',\n     ]);\n \n+    // Initialize empty arrays if the fields are not present\n+    $validatedData['skills'] = $validatedData['skills'] ?? [];\n+    $validatedData['job_title'] = $validatedData['job_title'] ?? [];\n+    $validatedData['company_name'] = $validatedData['company_name'] ?? [];\n+    $validatedData['location'] = $validatedData['location'] ?? [];\n+    $validatedData['start_date'] = $validatedData['start_date'] ?? [];\n+    $validatedData['end_date'] = $validatedData['end_date'] ?? [];\n+    $validatedData['responsibilities'] = $validatedData['responsibilities'] ?? [];\n+    $validatedData['education_name'] = $validatedData['education_name'] ?? [];\n+    $validatedData['education_degree'] = $validatedData['education_degree'] ?? [];\n+    $validatedData['education_school_name'] = $validatedData['education_school_name'] ?? [];\n+    $validatedData['education_Educlevel'] = $validatedData['education_Educlevel'] ?? [];\n+    $validatedData['education_start_date'] = $validatedData['education_start_date'] ?? [];\n+    $validatedData['education_graduation_date'] = $validatedData['education_graduation_date'] ?? [];\n+    $validatedData['certificate_names'] = $validatedData['certificate_names'] ?? [];\n+    $validatedData['issuing_organizations'] = $validatedData['issuing_organizations'] ?? [];\n+    $validatedData['issue_dates'] = $validatedData['issue_dates'] ?? [];\n+\n     \n         // Handle the image upload\n     if ($request->hasFile('image')) {\n         $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n"
                },
                {
                    "date": 1733150789898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,205 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+{\n+    // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Personal Info validation\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048', // Image validation\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+\n+        // Optional fields\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+\n+        // Skills\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+\n+        // Work Experience\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+\n+        // Education validation\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+\n+        // Certificates validation\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n+    // Initialize empty arrays if the fields are not present\n+    $validatedData['skills'] = $validatedData['skills'] ?? [];\n+    $validatedData['job_title'] = $validatedData['job_title'] ?? [];\n+    $validatedData['company_name'] = $validatedData['company_name'] ?? [];\n+    $validatedData['location'] = $validatedData['location'] ?? [];\n+    $validatedData['start_date'] = $validatedData['start_date'] ?? [];\n+    $validatedData['end_date'] = $validatedData['end_date'] ?? [];\n+    $validatedData['responsibilities'] = $validatedData['responsibilities'] ?? [];\n+    $validatedData['education_name'] = $validatedData['education_name'] ?? [];\n+    $validatedData['education_degree'] = $validatedData['education_degree'] ?? [];\n+    $validatedData['education_school_name'] = $validatedData['education_school_name'] ?? [];\n+    $validatedData['education_Educlevel'] = $validatedData['education_Educlevel'] ?? [];\n+    $validatedData['education_start_date'] = $validatedData['education_start_date'] ?? [];\n+    $validatedData['education_graduation_date'] = $validatedData['education_graduation_date'] ?? [];\n+    $validatedData['certificate_names'] = $validatedData['certificate_names'] ?? [];\n+    $validatedData['issuing_organizations'] = $validatedData['issuing_organizations'] ?? [];\n+    $validatedData['issue_dates'] = $validatedData['issue_dates'] ?? [];\n+\n+    \n+        // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null; // Default value if no image is uploaded\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+     // Save skills (can be empty)\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+       // Save work experiences (can be empty)\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+    \n+         // Save educations (can be empty)\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+   \n+        // Save certificates (can be empty)\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+}\n+    \n+\n+/**\n+ * Display the created CV.\n+ *\n+ * @param int $id\n+ * @return \\Illuminate\\View\\View\n+ */\n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_after_creation', compact('personalInfo'));\n+}\n+\n+\n+}\n+\n"
                },
                {
                    "date": 1733150915846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,215 +27,10 @@\n      * @param  \\Illuminate\\Http\\Request  $request\n      * @return \\Illuminate\\Http\\RedirectResponse\n      */\n     public function store(Request $request)\n-{\n-    // Validate incoming data\n-    $validatedData = $request->validate([\n-        // Personal Info validation\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048', // Image validation\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-\n-        // Optional fields\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-\n-        // Skills\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-\n-        // Work Experience\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-\n-        // Education validation\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-\n-        // Certificates validation\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n-    ]);\n-\n-    // Initialize empty arrays if the fields are not present\n-    $validatedData['skills'] = $validatedData['skills'] ?? [];\n-    $validatedData['job_title'] = $validatedData['job_title'] ?? [];\n-    $validatedData['company_name'] = $validatedData['company_name'] ?? [];\n-    $validatedData['location'] = $validatedData['location'] ?? [];\n-    $validatedData['start_date'] = $validatedData['start_date'] ?? [];\n-    $validatedData['end_date'] = $validatedData['end_date'] ?? [];\n-    $validatedData['responsibilities'] = $validatedData['responsibilities'] ?? [];\n-    $validatedData['education_name'] = $validatedData['education_name'] ?? [];\n-    $validatedData['education_degree'] = $validatedData['education_degree'] ?? [];\n-    $validatedData['education_school_name'] = $validatedData['education_school_name'] ?? [];\n-    $validatedData['education_Educlevel'] = $validatedData['education_Educlevel'] ?? [];\n-    $validatedData['education_start_date'] = $validatedData['education_start_date'] ?? [];\n-    $validatedData['education_graduation_date'] = $validatedData['education_graduation_date'] ?? [];\n-    $validatedData['certificate_names'] = $validatedData['certificate_names'] ?? [];\n-    $validatedData['issuing_organizations'] = $validatedData['issuing_organizations'] ?? [];\n-    $validatedData['issue_dates'] = $validatedData['issue_dates'] ?? [];\n-\n-    \n-        // Handle the image upload\n-    if ($request->hasFile('image')) {\n-        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        $request->image->move(public_path('uploads/images'), $imageName);\n-        $validatedData['image'] = 'uploads/images/' . $imageName;\n-    } else {\n-        $validatedData['image'] = null; // Default value if no image is uploaded\n-    }\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'image' => $validatedData['image'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'] ?? null,\n-        'weight' => $validatedData['weight'] ?? null,\n-        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-    ]);\n-\n-     // Save skills (can be empty)\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-       // Save work experiences (can be empty)\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-    \n-         // Save educations (can be empty)\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-   \n-        // Save certificates (can be empty)\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n-}\n-    \n-\n-/**\n- * Display the created CV.\n- *\n- * @param int $id\n- * @return \\Illuminate\\View\\View\n- */\n-public function viewCV($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_after_creation', compact('personalInfo'));\n-}\n-\n-\n-}\n-\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n     {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-{\n-    // Validate incoming data\n+       // Validate incoming data\n     $validatedData = $request->validate([\n         // Personal Info validation\n         'first_name' => 'required|string|max:255',\n         'last_name' => 'required|string|max:255',\n@@ -292,26 +87,8 @@\n         'issue_dates' => 'nullable|array',\n         'issue_dates.*' => 'date',\n     ]);\n \n-    // Initialize empty arrays if the fields are not present\n-    $validatedData['skills'] = $validatedData['skills'] ?? [];\n-    $validatedData['job_title'] = $validatedData['job_title'] ?? [];\n-    $validatedData['company_name'] = $validatedData['company_name'] ?? [];\n-    $validatedData['location'] = $validatedData['location'] ?? [];\n-    $validatedData['start_date'] = $validatedData['start_date'] ?? [];\n-    $validatedData['end_date'] = $validatedData['end_date'] ?? [];\n-    $validatedData['responsibilities'] = $validatedData['responsibilities'] ?? [];\n-    $validatedData['education_name'] = $validatedData['education_name'] ?? [];\n-    $validatedData['education_degree'] = $validatedData['education_degree'] ?? [];\n-    $validatedData['education_school_name'] = $validatedData['education_school_name'] ?? [];\n-    $validatedData['education_Educlevel'] = $validatedData['education_Educlevel'] ?? [];\n-    $validatedData['education_start_date'] = $validatedData['education_start_date'] ?? [];\n-    $validatedData['education_graduation_date'] = $validatedData['education_graduation_date'] ?? [];\n-    $validatedData['certificate_names'] = $validatedData['certificate_names'] ?? [];\n-    $validatedData['issuing_organizations'] = $validatedData['issuing_organizations'] ?? [];\n-    $validatedData['issue_dates'] = $validatedData['issue_dates'] ?? [];\n-\n     \n         // Handle the image upload\n     if ($request->hasFile('image')) {\n         $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n"
                },
                {
                    "date": 1733157752648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,193 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+    {\n+       // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Personal Info validation\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048', // Image validation\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+\n+        // Optional fields\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+\n+        // Skills\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+\n+        // Work Experience\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+\n+        // Education validation\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+\n+        // Certificates validation\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n+    \n+        // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null; // Default value if no image is uploaded\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+     // Save skills (can be empty)\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+       // Save work experiences (can be empty)\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+    \n+         // Save educations (can be empty)\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+   \n+        // Save certificates (can be empty)\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+}\n+    \n+\n+/**\n+ * Display the created CV.\n+ *\n+ * @param int $id\n+ * @return \\Illuminate\\View\\View\n+ */\n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_after_creation', compact('personalInfo'));\n+}\n+\n+\n+public function index()\n+{\n+    $personalInfos = PersonalInfo::all(); // Fetch all personal info entries\n+    return view('list_of_cvs', compact('personalInfos')); // Pass data to the view\n+}\n+\n+}\n+\n"
                },
                {
                    "date": 1733157854026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,209 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+    {\n+       // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Personal Info validation\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048', // Image validation\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+\n+        // Optional fields\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+\n+        // Skills\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+\n+        // Work Experience\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+\n+        // Education validation\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+\n+        // Certificates validation\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n+    \n+        // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null; // Default value if no image is uploaded\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+     // Save skills (can be empty)\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+       // Save work experiences (can be empty)\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+    \n+         // Save educations (can be empty)\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+   \n+        // Save certificates (can be empty)\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+}\n+    \n+\n+/**\n+ * Display the created CV.\n+ *\n+ * @param int $id\n+ * @return \\Illuminate\\View\\View\n+ */\n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_after_creation', compact('personalInfo'));\n+}\n+\n+\n+public function index()\n+{\n+    $personalInfos = PersonalInfo::all(); // Fetch all personal info entries\n+    return view('list_of_cvs', compact('personalInfos')); // Pass data to the view\n+}\n+\n+public function showPersonalInfo($id)\n+{\n+    // Assuming 'PersonalInfo' is the model for your `cvs` table\n+    $personalInfos = PersonalInfo::find($id); // Fetch the record by ID\n+\n+    // Check if the data exists\n+    if (!$personalInfos) {\n+        abort(404, 'CV not found.');\n+    }\n+\n+    // Pass it to the view\n+    return view('your_view_name', compact('personalInfos'));\n+}\n+\n+\n+\n+}\n+\n"
                },
                {
                    "date": 1733157873076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,209 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+    {\n+       // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Personal Info validation\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048', // Image validation\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+\n+        // Optional fields\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+\n+        // Skills\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+\n+        // Work Experience\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+\n+        // Education validation\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+\n+        // Certificates validation\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n+    \n+        // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null; // Default value if no image is uploaded\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+     // Save skills (can be empty)\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+       // Save work experiences (can be empty)\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+    \n+         // Save educations (can be empty)\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+   \n+        // Save certificates (can be empty)\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+}\n+    \n+\n+/**\n+ * Display the created CV.\n+ *\n+ * @param int $id\n+ * @return \\Illuminate\\View\\View\n+ */\n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_after_creation', compact('personalInfo'));\n+}\n+\n+\n+public function index()\n+{\n+    $personalInfos = PersonalInfo::all(); // Fetch all personal info entries\n+    return view('list_of_cvs', compact('personalInfos')); // Pass data to the view\n+}\n+\n+public function showPersonalInfo($id)\n+{\n+    // Assuming 'PersonalInfo' is the model for your `cvs` table\n+    $personalInfos = PersonalInfo::find($id); // Fetch the record by ID\n+\n+    // Check if the data exists\n+    if (!$personalInfos) {\n+        abort(404, 'CV not found.');\n+    }\n+\n+    // Pass it to the view\n+    return view('your_view_name', compact('personalInfos'));\n+}\n+\n+\n+\n+}\n+\n"
                },
                {
                    "date": 1733157896147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,617 +182,8 @@\n     return view('view_cv_after_creation', compact('personalInfo'));\n }\n \n \n-public function index()\n-{\n-    $personalInfos = PersonalInfo::all(); // Fetch all personal info entries\n-    return view('list_of_cvs', compact('personalInfos')); // Pass data to the view\n-}\n \n-public function showPersonalInfo($id)\n-{\n-    // Assuming 'PersonalInfo' is the model for your `cvs` table\n-    $personalInfos = PersonalInfo::find($id); // Fetch the record by ID\n \n-    // Check if the data exists\n-    if (!$personalInfos) {\n-        abort(404, 'CV not found.');\n-    }\n-\n-    // Pass it to the view\n-    return view('your_view_name', compact('personalInfos'));\n }\n \n-\n-\n-}\n-\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-    {\n-       // Validate incoming data\n-    $validatedData = $request->validate([\n-        // Personal Info validation\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048', // Image validation\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-\n-        // Optional fields\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-\n-        // Skills\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-\n-        // Work Experience\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-\n-        // Education validation\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-\n-        // Certificates validation\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n-    ]);\n-\n-    \n-        // Handle the image upload\n-    if ($request->hasFile('image')) {\n-        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        $request->image->move(public_path('uploads/images'), $imageName);\n-        $validatedData['image'] = 'uploads/images/' . $imageName;\n-    } else {\n-        $validatedData['image'] = null; // Default value if no image is uploaded\n-    }\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'image' => $validatedData['image'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'] ?? null,\n-        'weight' => $validatedData['weight'] ?? null,\n-        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-    ]);\n-\n-     // Save skills (can be empty)\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-       // Save work experiences (can be empty)\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-    \n-         // Save educations (can be empty)\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-   \n-        // Save certificates (can be empty)\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n-}\n-    \n-\n-/**\n- * Display the created CV.\n- *\n- * @param int $id\n- * @return \\Illuminate\\View\\View\n- */\n-public function viewCV($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_after_creation', compact('personalInfo'));\n-}\n-\n-\n-public function index()\n-{\n-    $personalInfos = PersonalInfo::all(); // Fetch all personal info entries\n-    return view('list_of_cvs', compact('personalInfos')); // Pass data to the view\n-}\n-\n-public function showPersonalInfo($id)\n-{\n-    // Assuming 'PersonalInfo' is the model for your `cvs` table\n-    $personalInfos = PersonalInfo::find($id); // Fetch the record by ID\n-\n-    // Check if the data exists\n-    if (!$personalInfos) {\n-        abort(404, 'CV not found.');\n-    }\n-\n-    // Pass it to the view\n-    return view('your_view_name', compact('personalInfos'));\n-}\n-\n-\n-\n-}\n-\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-    {\n-       // Validate incoming data\n-    $validatedData = $request->validate([\n-        // Personal Info validation\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048', // Image validation\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-\n-        // Optional fields\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-\n-        // Skills\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-\n-        // Work Experience\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-\n-        // Education validation\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-\n-        // Certificates validation\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n-    ]);\n-\n-    \n-        // Handle the image upload\n-    if ($request->hasFile('image')) {\n-        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        $request->image->move(public_path('uploads/images'), $imageName);\n-        $validatedData['image'] = 'uploads/images/' . $imageName;\n-    } else {\n-        $validatedData['image'] = null; // Default value if no image is uploaded\n-    }\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'image' => $validatedData['image'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'] ?? null,\n-        'weight' => $validatedData['weight'] ?? null,\n-        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-    ]);\n-\n-     // Save skills (can be empty)\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-       // Save work experiences (can be empty)\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-    \n-         // Save educations (can be empty)\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-   \n-        // Save certificates (can be empty)\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n-}\n-    \n-\n-/**\n- * Display the created CV.\n- *\n- * @param int $id\n- * @return \\Illuminate\\View\\View\n- */\n-public function viewCV($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_after_creation', compact('personalInfo'));\n-}\n-\n-\n-public function index()\n-{\n-    $personalInfos = PersonalInfo::all(); // Fetch all personal info entries\n-    return view('list_of_cvs', compact('personalInfos')); // Pass data to the view\n-}\n-\n-}\n-\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-    {\n-       // Validate incoming data\n-    $validatedData = $request->validate([\n-        // Personal Info validation\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048', // Image validation\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-\n-        // Optional fields\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-\n-        // Skills\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-\n-        // Work Experience\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-\n-        // Education validation\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-\n-        // Certificates validation\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n-    ]);\n-\n-    \n-        // Handle the image upload\n-    if ($request->hasFile('image')) {\n-        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        $request->image->move(public_path('uploads/images'), $imageName);\n-        $validatedData['image'] = 'uploads/images/' . $imageName;\n-    } else {\n-        $validatedData['image'] = null; // Default value if no image is uploaded\n-    }\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'image' => $validatedData['image'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'] ?? null,\n-        'weight' => $validatedData['weight'] ?? null,\n-        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-    ]);\n-\n-     // Save skills (can be empty)\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-       // Save work experiences (can be empty)\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-    \n-         // Save educations (can be empty)\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-   \n-        // Save certificates (can be empty)\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n-}\n-    \n-\n-/**\n- * Display the created CV.\n- *\n- * @param int $id\n- * @return \\Illuminate\\View\\View\n- */\n-public function viewCV($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_after_creation', compact('personalInfo'));\n-}\n-\n-\n-}\n-\n"
                },
                {
                    "date": 1733158798379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n use App\\Models\\WorkExperience;\n use App\\Models\\Education;\n use App\\Models\\Certificate;\n use Illuminate\\Http\\Request;\n+use App\\Models\\CreatorResume;\n \n class CVController extends Controller\n {\n     /**\n"
                },
                {
                    "date": 1733159167857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,9 +182,14 @@\n \n     return view('view_cv_after_creation', compact('personalInfo'));\n }\n \n+public function index()\n+{\n+    $cvs = CreatorResume::with('personalInfo', 'creator')->get();\n \n+    return view('dashboard', compact('cvs'));\n+}\n \n \n }\n \n"
                },
                {
                    "date": 1733159338936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n public function index()\n {\n     $cvs = CreatorResume::with('personalInfo', 'creator')->get();\n \n-    return view('dashboard', compact('cvs'));\n+    return view('user.dashboard', compact('cvs'));\n }\n \n \n }\n"
                },
                {
                    "date": 1733159495939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,11 +184,13 @@\n }\n \n public function index()\n {\n-    $cvs = CreatorResume::with('personalInfo', 'creator')->get();\n+    // Fetch all CVs with related personal info and user details\n+    $cvs = CreatorResume::with(['personalInfo', 'createdBy'])->get();\n \n-    return view('user.dashboard', compact('cvs'));\n+    // Pass the data to the view\n+    return view('dashboard', compact('cvs'));\n }\n \n \n }\n"
                },
                {
                    "date": 1733161938124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,145 +29,147 @@\n      * @return \\Illuminate\\Http\\RedirectResponse\n      */\n     public function store(Request $request)\n     {\n-       // Validate incoming data\n-    $validatedData = $request->validate([\n-        // Personal Info validation\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048', // Image validation\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-\n-        // Optional fields\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-\n-        // Skills\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-\n-        // Work Experience\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-\n-        // Education validation\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-\n-        // Certificates validation\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n-    ]);\n-\n+        // Validate incoming data\n+        $validatedData = $request->validate([\n+            // Personal Info validation\n+            'first_name' => 'required|string|max:255',\n+            'last_name' => 'required|string|max:255',\n+            'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n+            'email' => 'required|email|max:255',\n+            'phone' => 'required|string|max:15',\n+            'address' => 'required|string|max:500',\n+            'Objective' => 'nullable|string|max:255',\n+            'Facebook' => 'nullable|string|url|max:255',\n+            'BirthDate' => 'nullable|date',\n+            'Height' => 'required|string|max:255',\n+            'weight' => 'required|string|max:255',\n+            'Marital_Status' => 'required|string|max:255',\n+            // Skills\n+            'skills' => 'nullable|array',\n+            'skills.*' => 'string|max:255',\n+            // Work Experience\n+            'job_title' => 'nullable|array',\n+            'job_title.*' => 'string|max:255',\n+            'company_name' => 'nullable|array',\n+            'company_name.*' => 'string|max:255',\n+            'location' => 'nullable|array',\n+            'location.*' => 'string|max:255',\n+            'start_date' => 'nullable|array',\n+            'start_date.*' => 'date',\n+            'end_date' => 'nullable|array',\n+            'end_date.*' => 'nullable|date',\n+            'responsibilities' => 'nullable|array',\n+            'responsibilities.*' => 'string',\n+            // Education validation\n+            'education_name' => 'nullable|array',\n+            'education_name.*' => 'string|max:255',\n+            'education_degree' => 'nullable|array',\n+            'education_degree.*' => 'string|max:255',\n+            'education_school_name' => 'nullable|array',\n+            'education_school_name.*' => 'string|max:255',\n+            'education_Educlevel' => 'nullable|array',\n+            'education_Educlevel.*' => 'string|max:255',\n+            'education_start_date' => 'nullable|array',\n+            'education_start_date.*' => 'date',\n+            'education_graduation_date' => 'nullable|array',\n+            'education_graduation_date.*' => 'nullable|date',\n+            // Certificates validation\n+            'certificate_names' => 'nullable|array',\n+            'certificate_names.*' => 'string|max:255',\n+            'issuing_organizations' => 'nullable|array',\n+            'issuing_organizations.*' => 'string|max:255',\n+            'issue_dates' => 'nullable|array',\n+            'issue_dates.*' => 'date',\n+        ]);\n     \n         // Handle the image upload\n-    if ($request->hasFile('image')) {\n-        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        $request->image->move(public_path('uploads/images'), $imageName);\n-        $validatedData['image'] = 'uploads/images/' . $imageName;\n-    } else {\n-        $validatedData['image'] = null; // Default value if no image is uploaded\n-    }\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'image' => $validatedData['image'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'] ?? null,\n-        'weight' => $validatedData['weight'] ?? null,\n-        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-    ]);\n-\n-     // Save skills (can be empty)\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n+        if ($request->hasFile('image')) {\n+            $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+            $request->image->move(public_path('uploads/images'), $imageName);\n+            $validatedData['image'] = 'uploads/images/' . $imageName;\n+        } else {\n+            $validatedData['image'] = null; // Default value if no image is uploaded\n         }\n-    }\n-       // Save work experiences (can be empty)\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-            ]);\n+    \n+        // Save personal info\n+        $personalInfo = PersonalInfo::create([\n+            'first_name' => $validatedData['first_name'],\n+            'last_name' => $validatedData['last_name'],\n+            'image' => $validatedData['image'],\n+            'email' => $validatedData['email'],\n+            'phone' => $validatedData['phone'],\n+            'address' => $validatedData['address'],\n+            'Objective' => $validatedData['Objective'] ?? null,\n+            'Facebook' => $validatedData['Facebook'] ?? null,\n+            'BirthDate' => $validatedData['BirthDate'] ?? null,\n+            'Height' => $validatedData['Height'] ?? null,\n+            'weight' => $validatedData['weight'] ?? null,\n+            'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+        ]);\n+    \n+        // Save skills\n+        if (!empty($validatedData['skills'])) {\n+            foreach ($validatedData['skills'] as $skill) {\n+                Skill::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'name' => $skill,\n+                ]);\n+            }\n         }\n-    }\n     \n-         // Save educations (can be empty)\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-            ]);\n+        // Save work experiences\n+        if (!empty($validatedData['job_title'])) {\n+            foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+                WorkExperience::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'job_title' => $jobTitle,\n+                    'company_name' => $validatedData['company_name'][$index] ?? null,\n+                    'location' => $validatedData['location'][$index] ?? null,\n+                    'start_date' => $validatedData['start_date'][$index] ?? null,\n+                    'end_date' => $validatedData['end_date'][$index] ?? null,\n+                    'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+                ]);\n+            }\n         }\n-    }\n-   \n-        // Save certificates (can be empty)\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-            ]);\n+    \n+        // Save educations\n+        if (!empty($validatedData['education_name'])) {\n+            foreach ($validatedData['education_name'] as $index => $educationName) {\n+                Education::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'degree' => $validatedData['education_degree'][$index] ?? null,\n+                    'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                    'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                    'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                    'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+                ]);\n+            }\n         }\n+    \n+        // Save certificates\n+        if (!empty($validatedData['certificate_names'])) {\n+            foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+                Certificate::create([\n+                    'personal_info_id' => $personalInfo->id,\n+                    'name' => $certificateName,\n+                    'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                    'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+                ]);\n+            }\n+        }\n+    \n+        // Save creator resume\n+        $creatorResume = CreatorResume::create([\n+            'personal_info_id' => $personalInfo->id,\n+            'Created_by' => auth()->id(),\n+            'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n+            'Status' => 'Active', // Default status\n+        ]);\n+    \n+        return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n     }\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n-}\n     \n \n /**\n  * Display the created CV.\n"
                },
                {
                    "date": 1733165298537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,197 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+use App\\Models\\CreatorResume;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+    {\n+       // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Personal Info validation\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048', // Image validation\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+\n+        // Optional fields\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+\n+        // Skills\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+\n+        // Work Experience\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+\n+        // Education validation\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+\n+        // Certificates validation\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n+    \n+        // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null; // Default value if no image is uploaded\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+     // Save skills (can be empty)\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+       // Save work experiences (can be empty)\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+    \n+         // Save educations (can be empty)\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+   \n+        // Save certificates (can be empty)\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+}\n+    \n+\n+/**\n+ * Display the created CV.\n+ *\n+ * @param int $id\n+ * @return \\Illuminate\\View\\View\n+ */\n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_after_creation', compact('personalInfo'));\n+}\n+\n+public function index()\n+{\n+    // Fetch all CVs with related personal info and user details\n+    $cvs = CreatorResume::with(['personalInfo', 'createdBy'])->get();\n+\n+    // Pass the data to the view\n+    return view('dashboard', compact('cvs'));\n+}\n+\n+\n+}\n+\n"
                },
                {
                    "date": 1733165313468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,32 +27,28 @@\n      *\n      * @param  \\Illuminate\\Http\\Request  $request\n      * @return \\Illuminate\\Http\\RedirectResponse\n      */\n-    public function store(Request $request)\n-    {\n-       // Validate incoming data\n+   public function store(Request $request)\n+{\n+    // Validate incoming data\n     $validatedData = $request->validate([\n         // Personal Info validation\n         'first_name' => 'required|string|max:255',\n         'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048', // Image validation\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n         'email' => 'required|email|max:255',\n         'phone' => 'required|string|max:15',\n         'address' => 'required|string|max:500',\n-\n-        // Optional fields\n         'Objective' => 'nullable|string|max:255',\n         'Facebook' => 'nullable|string|url|max:255',\n         'BirthDate' => 'nullable|date',\n         'Height' => 'required|string|max:255',\n         'weight' => 'required|string|max:255',\n         'Marital_Status' => 'required|string|max:255',\n-\n         // Skills\n         'skills' => 'nullable|array',\n         'skills.*' => 'string|max:255',\n-\n         // Work Experience\n         'job_title' => 'nullable|array',\n         'job_title.*' => 'string|max:255',\n         'company_name' => 'nullable|array',\n@@ -64,9 +60,8 @@\n         'end_date' => 'nullable|array',\n         'end_date.*' => 'nullable|date',\n         'responsibilities' => 'nullable|array',\n         'responsibilities.*' => 'string',\n-\n         // Education validation\n         'education_name' => 'nullable|array',\n         'education_name.*' => 'string|max:255',\n         'education_degree' => 'nullable|array',\n@@ -78,9 +73,8 @@\n         'education_start_date' => 'nullable|array',\n         'education_start_date.*' => 'date',\n         'education_graduation_date' => 'nullable|array',\n         'education_graduation_date.*' => 'nullable|date',\n-\n         // Certificates validation\n         'certificate_names' => 'nullable|array',\n         'certificate_names.*' => 'string|max:255',\n         'issuing_organizations' => 'nullable|array',\n@@ -88,10 +82,9 @@\n         'issue_dates' => 'nullable|array',\n         'issue_dates.*' => 'date',\n     ]);\n \n-    \n-        // Handle the image upload\n+    // Handle the image upload\n     if ($request->hasFile('image')) {\n         $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n         $request->image->move(public_path('uploads/images'), $imageName);\n         $validatedData['image'] = 'uploads/images/' . $imageName;\n@@ -114,18 +107,19 @@\n         'weight' => $validatedData['weight'] ?? null,\n         'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n     ]);\n \n-     // Save skills (can be empty)\n+    // Save skills\n     if (!empty($validatedData['skills'])) {\n         foreach ($validatedData['skills'] as $skill) {\n             Skill::create([\n                 'personal_info_id' => $personalInfo->id,\n                 'name' => $skill,\n             ]);\n         }\n     }\n-       // Save work experiences (can be empty)\n+\n+    // Save work experiences\n     if (!empty($validatedData['job_title'])) {\n         foreach ($validatedData['job_title'] as $index => $jobTitle) {\n             WorkExperience::create([\n                 'personal_info_id' => $personalInfo->id,\n@@ -137,10 +131,10 @@\n                 'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n             ]);\n         }\n     }\n-    \n-         // Save educations (can be empty)\n+\n+    // Save educations\n     if (!empty($validatedData['education_name'])) {\n         foreach ($validatedData['education_name'] as $index => $educationName) {\n             Education::create([\n                 'personal_info_id' => $personalInfo->id,\n@@ -151,10 +145,10 @@\n                 'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n             ]);\n         }\n     }\n-   \n-        // Save certificates (can be empty)\n+\n+    // Save certificates\n     if (!empty($validatedData['certificate_names'])) {\n         foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n             Certificate::create([\n                 'personal_info_id' => $personalInfo->id,\n@@ -164,8 +158,16 @@\n             ]);\n         }\n     }\n \n+    // Save creator resume\n+    $creatorResume = CreatorResume::create([\n+        'personal_info_id' => $personalInfo->id,\n+        'Created_by' => auth()->id(),\n+        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n+        'Status' => 'Active', // Default status\n+    ]);\n+\n     return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n }\n     \n \n@@ -194,203 +196,4 @@\n \n \n }\n \n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-use App\\Models\\CreatorResume;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-    {\n-        // Validate incoming data\n-        $validatedData = $request->validate([\n-            // Personal Info validation\n-            'first_name' => 'required|string|max:255',\n-            'last_name' => 'required|string|max:255',\n-            'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n-            'email' => 'required|email|max:255',\n-            'phone' => 'required|string|max:15',\n-            'address' => 'required|string|max:500',\n-            'Objective' => 'nullable|string|max:255',\n-            'Facebook' => 'nullable|string|url|max:255',\n-            'BirthDate' => 'nullable|date',\n-            'Height' => 'required|string|max:255',\n-            'weight' => 'required|string|max:255',\n-            'Marital_Status' => 'required|string|max:255',\n-            // Skills\n-            'skills' => 'nullable|array',\n-            'skills.*' => 'string|max:255',\n-            // Work Experience\n-            'job_title' => 'nullable|array',\n-            'job_title.*' => 'string|max:255',\n-            'company_name' => 'nullable|array',\n-            'company_name.*' => 'string|max:255',\n-            'location' => 'nullable|array',\n-            'location.*' => 'string|max:255',\n-            'start_date' => 'nullable|array',\n-            'start_date.*' => 'date',\n-            'end_date' => 'nullable|array',\n-            'end_date.*' => 'nullable|date',\n-            'responsibilities' => 'nullable|array',\n-            'responsibilities.*' => 'string',\n-            // Education validation\n-            'education_name' => 'nullable|array',\n-            'education_name.*' => 'string|max:255',\n-            'education_degree' => 'nullable|array',\n-            'education_degree.*' => 'string|max:255',\n-            'education_school_name' => 'nullable|array',\n-            'education_school_name.*' => 'string|max:255',\n-            'education_Educlevel' => 'nullable|array',\n-            'education_Educlevel.*' => 'string|max:255',\n-            'education_start_date' => 'nullable|array',\n-            'education_start_date.*' => 'date',\n-            'education_graduation_date' => 'nullable|array',\n-            'education_graduation_date.*' => 'nullable|date',\n-            // Certificates validation\n-            'certificate_names' => 'nullable|array',\n-            'certificate_names.*' => 'string|max:255',\n-            'issuing_organizations' => 'nullable|array',\n-            'issuing_organizations.*' => 'string|max:255',\n-            'issue_dates' => 'nullable|array',\n-            'issue_dates.*' => 'date',\n-        ]);\n-    \n-        // Handle the image upload\n-        if ($request->hasFile('image')) {\n-            $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-            $request->image->move(public_path('uploads/images'), $imageName);\n-            $validatedData['image'] = 'uploads/images/' . $imageName;\n-        } else {\n-            $validatedData['image'] = null; // Default value if no image is uploaded\n-        }\n-    \n-        // Save personal info\n-        $personalInfo = PersonalInfo::create([\n-            'first_name' => $validatedData['first_name'],\n-            'last_name' => $validatedData['last_name'],\n-            'image' => $validatedData['image'],\n-            'email' => $validatedData['email'],\n-            'phone' => $validatedData['phone'],\n-            'address' => $validatedData['address'],\n-            'Objective' => $validatedData['Objective'] ?? null,\n-            'Facebook' => $validatedData['Facebook'] ?? null,\n-            'BirthDate' => $validatedData['BirthDate'] ?? null,\n-            'Height' => $validatedData['Height'] ?? null,\n-            'weight' => $validatedData['weight'] ?? null,\n-            'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-        ]);\n-    \n-        // Save skills\n-        if (!empty($validatedData['skills'])) {\n-            foreach ($validatedData['skills'] as $skill) {\n-                Skill::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'name' => $skill,\n-                ]);\n-            }\n-        }\n-    \n-        // Save work experiences\n-        if (!empty($validatedData['job_title'])) {\n-            foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-                WorkExperience::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'job_title' => $jobTitle,\n-                    'company_name' => $validatedData['company_name'][$index] ?? null,\n-                    'location' => $validatedData['location'][$index] ?? null,\n-                    'start_date' => $validatedData['start_date'][$index] ?? null,\n-                    'end_date' => $validatedData['end_date'][$index] ?? null,\n-                    'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-                ]);\n-            }\n-        }\n-    \n-        // Save educations\n-        if (!empty($validatedData['education_name'])) {\n-            foreach ($validatedData['education_name'] as $index => $educationName) {\n-                Education::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'degree' => $validatedData['education_degree'][$index] ?? null,\n-                    'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                    'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                    'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                    'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-                ]);\n-            }\n-        }\n-    \n-        // Save certificates\n-        if (!empty($validatedData['certificate_names'])) {\n-            foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-                Certificate::create([\n-                    'personal_info_id' => $personalInfo->id,\n-                    'name' => $certificateName,\n-                    'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                    'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-                ]);\n-            }\n-        }\n-    \n-        // Save creator resume\n-        $creatorResume = CreatorResume::create([\n-            'personal_info_id' => $personalInfo->id,\n-            'Created_by' => auth()->id(),\n-            'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n-            'Status' => 'Active', // Default status\n-        ]);\n-    \n-        return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n-    }\n-    \n-\n-/**\n- * Display the created CV.\n- *\n- * @param int $id\n- * @return \\Illuminate\\View\\View\n- */\n-public function viewCV($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_after_creation', compact('personalInfo'));\n-}\n-\n-public function index()\n-{\n-    // Fetch all CVs with related personal info and user details\n-    $cvs = CreatorResume::with(['personalInfo', 'createdBy'])->get();\n-\n-    // Pass the data to the view\n-    return view('dashboard', compact('cvs'));\n-}\n-\n-\n-}\n-\n"
                },
                {
                    "date": 1733165491695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,9 +161,9 @@\n \n     // Save creator resume\n     $creatorResume = CreatorResume::create([\n         'personal_info_id' => $personalInfo->id,\n-        'Created_by' => auth()->id(),\n+        \n         'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n         'Status' => 'Active', // Default status\n     ]);\n \n"
                },
                {
                    "date": 1733165668184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,28 +27,32 @@\n      *\n      * @param  \\Illuminate\\Http\\Request  $request\n      * @return \\Illuminate\\Http\\RedirectResponse\n      */\n-   public function store(Request $request)\n-{\n-    // Validate incoming data\n+    public function store(Request $request)\n+    {\n+       // Validate incoming data\n     $validatedData = $request->validate([\n         // Personal Info validation\n         'first_name' => 'required|string|max:255',\n         'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048', // Image validation\n         'email' => 'required|email|max:255',\n         'phone' => 'required|string|max:15',\n         'address' => 'required|string|max:500',\n+\n+        // Optional fields\n         'Objective' => 'nullable|string|max:255',\n         'Facebook' => 'nullable|string|url|max:255',\n         'BirthDate' => 'nullable|date',\n         'Height' => 'required|string|max:255',\n         'weight' => 'required|string|max:255',\n         'Marital_Status' => 'required|string|max:255',\n+\n         // Skills\n         'skills' => 'nullable|array',\n         'skills.*' => 'string|max:255',\n+\n         // Work Experience\n         'job_title' => 'nullable|array',\n         'job_title.*' => 'string|max:255',\n         'company_name' => 'nullable|array',\n@@ -60,8 +64,9 @@\n         'end_date' => 'nullable|array',\n         'end_date.*' => 'nullable|date',\n         'responsibilities' => 'nullable|array',\n         'responsibilities.*' => 'string',\n+\n         // Education validation\n         'education_name' => 'nullable|array',\n         'education_name.*' => 'string|max:255',\n         'education_degree' => 'nullable|array',\n@@ -73,8 +78,9 @@\n         'education_start_date' => 'nullable|array',\n         'education_start_date.*' => 'date',\n         'education_graduation_date' => 'nullable|array',\n         'education_graduation_date.*' => 'nullable|date',\n+\n         // Certificates validation\n         'certificate_names' => 'nullable|array',\n         'certificate_names.*' => 'string|max:255',\n         'issuing_organizations' => 'nullable|array',\n@@ -82,9 +88,10 @@\n         'issue_dates' => 'nullable|array',\n         'issue_dates.*' => 'date',\n     ]);\n \n-    // Handle the image upload\n+    \n+        // Handle the image upload\n     if ($request->hasFile('image')) {\n         $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n         $request->image->move(public_path('uploads/images'), $imageName);\n         $validatedData['image'] = 'uploads/images/' . $imageName;\n@@ -107,19 +114,18 @@\n         'weight' => $validatedData['weight'] ?? null,\n         'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n     ]);\n \n-    // Save skills\n+     // Save skills (can be empty)\n     if (!empty($validatedData['skills'])) {\n         foreach ($validatedData['skills'] as $skill) {\n             Skill::create([\n                 'personal_info_id' => $personalInfo->id,\n                 'name' => $skill,\n             ]);\n         }\n     }\n-\n-    // Save work experiences\n+       // Save work experiences (can be empty)\n     if (!empty($validatedData['job_title'])) {\n         foreach ($validatedData['job_title'] as $index => $jobTitle) {\n             WorkExperience::create([\n                 'personal_info_id' => $personalInfo->id,\n@@ -131,10 +137,10 @@\n                 'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n             ]);\n         }\n     }\n-\n-    // Save educations\n+    \n+         // Save educations (can be empty)\n     if (!empty($validatedData['education_name'])) {\n         foreach ($validatedData['education_name'] as $index => $educationName) {\n             Education::create([\n                 'personal_info_id' => $personalInfo->id,\n@@ -145,10 +151,10 @@\n                 'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n             ]);\n         }\n     }\n-\n-    // Save certificates\n+   \n+        // Save certificates (can be empty)\n     if (!empty($validatedData['certificate_names'])) {\n         foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n             Certificate::create([\n                 'personal_info_id' => $personalInfo->id,\n@@ -158,16 +164,8 @@\n             ]);\n         }\n     }\n \n-    // Save creator resume\n-    $creatorResume = CreatorResume::create([\n-        'personal_info_id' => $personalInfo->id,\n-        \n-        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n-        'Status' => 'Active', // Default status\n-    ]);\n-\n     return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n }\n     \n \n"
                },
                {
                    "date": 1733165690071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,13 +184,11 @@\n }\n \n public function index()\n {\n-    // Fetch all CVs with related personal info and user details\n-    $cvs = CreatorResume::with(['personalInfo', 'createdBy'])->get();\n+    $cvs = CreatorResume::with('personalInfo', 'creator')->get();\n \n-    // Pass the data to the view\n-    return view('dashboard', compact('cvs'));\n+    return view('user.dashboard', compact('cvs'));\n }\n \n \n }\n"
                },
                {
                    "date": 1733212666117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,32 +28,26 @@\n      * @param  \\Illuminate\\Http\\Request  $request\n      * @return \\Illuminate\\Http\\RedirectResponse\n      */\n     public function store(Request $request)\n-    {\n-       // Validate incoming data\n+{\n+    // Validate incoming data\n     $validatedData = $request->validate([\n-        // Personal Info validation\n+        // Validation rules\n         'first_name' => 'required|string|max:255',\n         'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048', // Image validation\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n         'email' => 'required|email|max:255',\n         'phone' => 'required|string|max:15',\n         'address' => 'required|string|max:500',\n-\n-        // Optional fields\n         'Objective' => 'nullable|string|max:255',\n         'Facebook' => 'nullable|string|url|max:255',\n         'BirthDate' => 'nullable|date',\n         'Height' => 'required|string|max:255',\n         'weight' => 'required|string|max:255',\n         'Marital_Status' => 'required|string|max:255',\n-\n-        // Skills\n         'skills' => 'nullable|array',\n         'skills.*' => 'string|max:255',\n-\n-        // Work Experience\n         'job_title' => 'nullable|array',\n         'job_title.*' => 'string|max:255',\n         'company_name' => 'nullable|array',\n         'company_name.*' => 'string|max:255',\n@@ -64,10 +58,8 @@\n         'end_date' => 'nullable|array',\n         'end_date.*' => 'nullable|date',\n         'responsibilities' => 'nullable|array',\n         'responsibilities.*' => 'string',\n-\n-        // Education validation\n         'education_name' => 'nullable|array',\n         'education_name.*' => 'string|max:255',\n         'education_degree' => 'nullable|array',\n         'education_degree.*' => 'string|max:255',\n@@ -78,26 +70,23 @@\n         'education_start_date' => 'nullable|array',\n         'education_start_date.*' => 'date',\n         'education_graduation_date' => 'nullable|array',\n         'education_graduation_date.*' => 'nullable|date',\n-\n-        // Certificates validation\n         'certificate_names' => 'nullable|array',\n         'certificate_names.*' => 'string|max:255',\n         'issuing_organizations' => 'nullable|array',\n         'issuing_organizations.*' => 'string|max:255',\n         'issue_dates' => 'nullable|array',\n         'issue_dates.*' => 'date',\n     ]);\n \n-    \n-        // Handle the image upload\n+    // Handle the image upload\n     if ($request->hasFile('image')) {\n         $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n         $request->image->move(public_path('uploads/images'), $imageName);\n         $validatedData['image'] = 'uploads/images/' . $imageName;\n     } else {\n-        $validatedData['image'] = null; // Default value if no image is uploaded\n+        $validatedData['image'] = null;\n     }\n \n     // Save personal info\n     $personalInfo = PersonalInfo::create([\n@@ -114,18 +103,19 @@\n         'weight' => $validatedData['weight'] ?? null,\n         'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n     ]);\n \n-     // Save skills (can be empty)\n+    // Save skills\n     if (!empty($validatedData['skills'])) {\n         foreach ($validatedData['skills'] as $skill) {\n             Skill::create([\n                 'personal_info_id' => $personalInfo->id,\n                 'name' => $skill,\n             ]);\n         }\n     }\n-       // Save work experiences (can be empty)\n+\n+    // Save work experiences\n     if (!empty($validatedData['job_title'])) {\n         foreach ($validatedData['job_title'] as $index => $jobTitle) {\n             WorkExperience::create([\n                 'personal_info_id' => $personalInfo->id,\n@@ -137,10 +127,10 @@\n                 'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n             ]);\n         }\n     }\n-    \n-         // Save educations (can be empty)\n+\n+    // Save educations\n     if (!empty($validatedData['education_name'])) {\n         foreach ($validatedData['education_name'] as $index => $educationName) {\n             Education::create([\n                 'personal_info_id' => $personalInfo->id,\n@@ -151,10 +141,10 @@\n                 'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n             ]);\n         }\n     }\n-   \n-        // Save certificates (can be empty)\n+\n+    // Save certificates\n     if (!empty($validatedData['certificate_names'])) {\n         foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n             Certificate::create([\n                 'personal_info_id' => $personalInfo->id,\n@@ -164,10 +154,18 @@\n             ]);\n         }\n     }\n \n+    // Save to CreatorResume\n+    CreatorResume::create([\n+        'personal_info_id' => $personalInfo->id,\n+        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n+        'Status' => 'Created', // Example status\n+    ]);\n+\n     return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n }\n+\n     \n \n /**\n  * Display the created CV.\n@@ -182,14 +180,156 @@\n \n     return view('view_cv_after_creation', compact('personalInfo'));\n }\n \n-public function index()\n+\n+public function dashboard()\n {\n-    $cvs = CreatorResume::with('personalInfo', 'creator')->get();\n+    $cvs = CreatorResume::with('personalInfo')->get();\n+    return view('dashboard', compact('cvs'));\n+}\n \n-    return view('user.dashboard', compact('cvs'));\n+\n+public function updateStatus(Request $request, $id)\n+{\n+    $cv = CreatorResume::findOrFail($id); // Correct model\n+    $cv->Status = $request->input('status'); // Retrieve the selected status\n+    $cv->save();\n+\n+    return redirect()->back()->with('success', 'Status updated successfully.');\n }\n+}\n \n \n+\n+public function edit($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('edit_cv', compact('personalInfo'));\n }\n \n+\n+public function update(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Validate updated data\n+    $validatedData = $request->validate([\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'],\n+        'weight' => $validatedData['weight'],\n+        'Marital_Status' => $validatedData['Marital_Status'],\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Update education\n+    Education::where('personal_info_id', $id)->delete();\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n"
                },
                {
                    "date": 1733212970013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,9 +200,9 @@\n }\n \n \n \n-public function edit($id)\n+public function edits($id)\n {\n     $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n         ->findOrFail($id);\n \n"
                },
                {
                    "date": 1733212992428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,336 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+use App\\Models\\CreatorResume;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+{\n+    // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Validation rules\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n+    // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null;\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+    // Save skills\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+\n+    // Save work experiences\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save educations\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save certificates\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save to CreatorResume\n+    CreatorResume::create([\n+        'personal_info_id' => $personalInfo->id,\n+        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n+        'Status' => 'Created', // Example status\n+    ]);\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+}\n+\n+    \n+\n+/**\n+ * Display the created CV.\n+ *\n+ * @param int $id\n+ * @return \\Illuminate\\View\\View\n+ */\n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_after_creation', compact('personalInfo'));\n+}\n+\n+\n+public function dashboard()\n+{\n+    $cvs = CreatorResume::with('personalInfo')->get();\n+    return view('dashboard', compact('cvs'));\n+}\n+\n+\n+public function updateStatus(Request $request, $id)\n+{\n+    $cv = CreatorResume::findOrFail($id); // Correct model\n+    $cv->Status = $request->input('status'); // Retrieve the selected status\n+    $cv->save();\n+\n+    return redirect()->back()->with('success', 'Status updated successfully.');\n+}\n+\n+\n+\n+\n+public function edits($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('edit_cv', compact('personalInfo'));\n+}\n+\n+\n+public function update(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Validate updated data\n+    $validatedData = $request->validate([\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'],\n+        'weight' => $validatedData['weight'],\n+        'Marital_Status' => $validatedData['Marital_Status'],\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Update education\n+    Education::where('personal_info_id', $id)->delete();\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733213001011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,339 +332,5 @@\n     return redirect()->route('view_cv_after_creation', ['id' => $id])\n         ->with('success', 'CV updated successfully.');\n }\n \n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-use App\\Models\\CreatorResume;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-{\n-    // Validate incoming data\n-    $validatedData = $request->validate([\n-        // Validation rules\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n-    ]);\n-\n-    // Handle the image upload\n-    if ($request->hasFile('image')) {\n-        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        $request->image->move(public_path('uploads/images'), $imageName);\n-        $validatedData['image'] = 'uploads/images/' . $imageName;\n-    } else {\n-        $validatedData['image'] = null;\n-    }\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'image' => $validatedData['image'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'] ?? null,\n-        'weight' => $validatedData['weight'] ?? null,\n-        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-    ]);\n-\n-    // Save skills\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-\n-    // Save work experiences\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save educations\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save certificates\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save to CreatorResume\n-    CreatorResume::create([\n-        'personal_info_id' => $personalInfo->id,\n-        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n-        'Status' => 'Created', // Example status\n-    ]);\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n-}\n-\n-    \n-\n-/**\n- * Display the created CV.\n- *\n- * @param int $id\n- * @return \\Illuminate\\View\\View\n- */\n-public function viewCV($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_after_creation', compact('personalInfo'));\n-}\n-\n-\n-public function dashboard()\n-{\n-    $cvs = CreatorResume::with('personalInfo')->get();\n-    return view('dashboard', compact('cvs'));\n-}\n-\n-\n-public function updateStatus(Request $request, $id)\n-{\n-    $cv = CreatorResume::findOrFail($id); // Correct model\n-    $cv->Status = $request->input('status'); // Retrieve the selected status\n-    $cv->save();\n-\n-    return redirect()->back()->with('success', 'Status updated successfully.');\n-}\n-}\n-\n-\n-\n-public function edits($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('edit_cv', compact('personalInfo'));\n-}\n-\n-\n-public function update(Request $request, $id)\n-{\n-    $personalInfo = PersonalInfo::findOrFail($id);\n-\n-    // Validate updated data\n-    $validatedData = $request->validate([\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n-    ]);\n-\n-    // Update personal info\n-    $personalInfo->update([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'],\n-        'weight' => $validatedData['weight'],\n-        'Marital_Status' => $validatedData['Marital_Status'],\n-    ]);\n-\n-    // Update skills\n-    Skill::where('personal_info_id', $id)->delete();\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n-        }\n-    }\n-\n-    // Update work experiences\n-    WorkExperience::where('personal_info_id', $id)->delete();\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Update education\n-    Education::where('personal_info_id', $id)->delete();\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Update certificates\n-    Certificate::where('personal_info_id', $id)->delete();\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $id])\n-        ->with('success', 'CV updated successfully.');\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733213208031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,9 +200,9 @@\n \n \n \n \n-public function edits($id)\n+public function edit($id)\n {\n     $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n         ->findOrFail($id);\n \n"
                },
                {
                    "date": 1733215346673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,11 +197,8 @@\n \n     return redirect()->back()->with('success', 'Status updated successfully.');\n }\n \n-\n-\n-\n public function edit($id)\n {\n     $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n         ->findOrFail($id);\n@@ -217,9 +214,8 @@\n     // Validate updated data\n     $validatedData = $request->validate([\n         'first_name' => 'required|string|max:255',\n         'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n         'email' => 'required|email|max:255',\n         'phone' => 'required|string|max:15',\n         'address' => 'required|string|max:500',\n         'Objective' => 'nullable|string|max:255',\n@@ -332,5 +328,6 @@\n     return redirect()->route('view_cv_after_creation', ['id' => $id])\n         ->with('success', 'CV updated successfully.');\n }\n \n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733215578217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -205,9 +205,8 @@\n \n     return view('edit_cv', compact('personalInfo'));\n }\n \n-\n public function update(Request $request, $id)\n {\n     $personalInfo = PersonalInfo::findOrFail($id);\n \n@@ -296,9 +295,9 @@\n             ]);\n         }\n     }\n \n-    // Update education\n+    // Update educations\n     Education::where('personal_info_id', $id)->delete();\n     if (!empty($validatedData['education_name'])) {\n         foreach ($validatedData['education_name'] as $index => $educationName) {\n             Education::create([\n"
                },
                {
                    "date": 1733216145211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -222,40 +222,9 @@\n         'BirthDate' => 'nullable|date',\n         'Height' => 'required|string|max:255',\n         'weight' => 'required|string|max:255',\n         'Marital_Status' => 'required|string|max:255',\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n+     \n     ]);\n \n     // Update personal info\n     $personalInfo->update([\n@@ -271,60 +240,10 @@\n         'weight' => $validatedData['weight'],\n         'Marital_Status' => $validatedData['Marital_Status'],\n     ]);\n \n-    // Update skills\n-    Skill::where('personal_info_id', $id)->delete();\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n-        }\n-    }\n+    \n \n-    // Update work experiences\n-    WorkExperience::where('personal_info_id', $id)->delete();\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Update educations\n-    Education::where('personal_info_id', $id)->delete();\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Update certificates\n-    Certificate::where('personal_info_id', $id)->delete();\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n     return redirect()->route('view_cv_after_creation', ['id' => $id])\n         ->with('success', 'CV updated successfully.');\n }\n \n"
                },
                {
                    "date": 1733216191262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -205,8 +205,9 @@\n \n     return view('edit_cv', compact('personalInfo'));\n }\n \n+\n public function update(Request $request, $id)\n {\n     $personalInfo = PersonalInfo::findOrFail($id);\n \n@@ -222,9 +223,40 @@\n         'BirthDate' => 'nullable|date',\n         'Height' => 'required|string|max:255',\n         'weight' => 'required|string|max:255',\n         'Marital_Status' => 'required|string|max:255',\n-     \n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n     ]);\n \n     // Update personal info\n     $personalInfo->update([\n@@ -240,10 +272,60 @@\n         'weight' => $validatedData['weight'],\n         'Marital_Status' => $validatedData['Marital_Status'],\n     ]);\n \n-    \n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n \n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Update education\n+    Education::where('personal_info_id', $id)->delete();\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n     return redirect()->route('view_cv_after_creation', ['id' => $id])\n         ->with('success', 'CV updated successfully.');\n }\n \n"
                },
                {
                    "date": 1733217252204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -205,123 +205,75 @@\n \n     return view('edit_cv', compact('personalInfo'));\n }\n \n-\n public function update(Request $request, $id)\n {\n     $personalInfo = PersonalInfo::findOrFail($id);\n \n-    // Validate updated data\n-    $validatedData = $request->validate([\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n-    ]);\n-\n     // Update personal info\n     $personalInfo->update([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'],\n-        'weight' => $validatedData['weight'],\n-        'Marital_Status' => $validatedData['Marital_Status'],\n+        'first_name' => $request->input('first_name'),\n+        'last_name' => $request->input('last_name'),\n+        'email' => $request->input('email'),\n+        'phone' => $request->input('phone'),\n+        'address' => $request->input('address'),\n+        'Objective' => $request->input('Objective', null),\n+        'Facebook' => $request->input('Facebook', null),\n+        'BirthDate' => $request->input('BirthDate', null),\n+        'Height' => $request->input('Height'),\n+        'weight' => $request->input('weight'),\n+        'Marital_Status' => $request->input('Marital_Status'),\n     ]);\n \n     // Update skills\n     Skill::where('personal_info_id', $id)->delete();\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n+    if ($request->has('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n             Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n         }\n     }\n \n     // Update work experiences\n     WorkExperience::where('personal_info_id', $id)->delete();\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+    if ($request->has('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n             WorkExperience::create([\n                 'personal_info_id' => $id,\n                 'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n             ]);\n         }\n     }\n \n     // Update education\n     Education::where('personal_info_id', $id)->delete();\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n+    if ($request->has('education_name')) {\n+        foreach ($request->input('education_name') as $index => $educationName) {\n             Education::create([\n                 'personal_info_id' => $id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+                'degree' => $request->input(\"education_degree.$index\"),\n+                'school_name' => $request->input(\"education_school_name.$index\"),\n+                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                'start_date' => $request->input(\"education_start_date.$index\"),\n+                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n             ]);\n         }\n     }\n \n     // Update certificates\n     Certificate::where('personal_info_id', $id)->delete();\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+    if ($request->has('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n             Certificate::create([\n                 'personal_info_id' => $id,\n                 'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n             ]);\n         }\n     }\n \n"
                },
                {
                    "date": 1733218593929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,12 +199,13 @@\n }\n \n public function edit($id)\n {\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('edit_cv', compact('personalInfo'));\n+    // Fetch the CV by ID (you can use Eloquent to fetch the model)\n+    $cv = CV::findOrFail($id); // Make sure to fetch the CV by its ID\n+    \n+    // Pass the CV to the edit view\n+    return view('cv.edit', compact('cv'));\n }\n \n public function update(Request $request, $id)\n {\n"
                },
                {
                    "date": 1733218608994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,13 +199,12 @@\n }\n \n public function edit($id)\n {\n-    // Fetch the CV by ID (you can use Eloquent to fetch the model)\n-    $cv = CV::findOrFail($id); // Make sure to fetch the CV by its ID\n-    \n-    // Pass the CV to the edit view\n-    return view('cv.edit', compact('cv'));\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('edit_cv', compact('personalInfo'));\n }\n \n public function update(Request $request, $id)\n {\n"
                },
                {
                    "date": 1733248088689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,9 +184,17 @@\n \n public function dashboard()\n {\n     $cvs = CreatorResume::with('personalInfo')->get();\n-    return view('dashboard', compact('cvs'));\n+\n+    // Calculate the count of different statuses\n+    $totalCvs = $cvs->count();\n+    $completedCvs = $cvs->where('status', 'Completed')->count();\n+    $pendingCvs = $cvs->where('status', 'Pending')->count();\n+    $rejectedCvs = $cvs->where('status', 'Rejected')->count();\n+    $interviewCvs = $cvs->where('status', 'Interview')->count();\n+\n+    return view('dashboard', compact('cvs', 'totalCvs', 'completedCvs', 'pendingCvs', 'rejectedCvs', 'interviewCvs'));\n }\n \n \n public function updateStatus(Request $request, $id)\n"
                },
                {
                    "date": 1733248619272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,293 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+use App\\Models\\CreatorResume;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+{\n+    // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Validation rules\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n+    // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null;\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+    // Save skills\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+\n+    // Save work experiences\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save educations\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save certificates\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save to CreatorResume\n+    CreatorResume::create([\n+        'personal_info_id' => $personalInfo->id,\n+        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n+        'Status' => 'Created', // Example status\n+    ]);\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+}\n+\n+    \n+\n+/**\n+ * Display the created CV.\n+ *\n+ * @param int $id\n+ * @return \\Illuminate\\View\\View\n+ */\n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_after_creation', compact('personalInfo'));\n+}\n+\n+\n+public function dashboard()\n+{\n+    $cvs = CreatorResume::with('personalInfo')->get();\n+\n+    // Calculate the count of different statuses\n+    $totalCvs = $cvs->count();\n+    $completedCvs = $cvs->where('status', 'Completed')->count();\n+    $pendingCvs = $cvs->where('status', 'Pending')->count();\n+    $rejectedCvs = $cvs->where('status', 'Rejected')->count();\n+    $interviewCvs = $cvs->where('status', 'Interview')->count();\n+\n+    return view('dashboard', compact('cvs', 'totalCvs', 'completedCvs', 'pendingCvs', 'rejectedCvs', 'interviewCvs'));\n+}\n+\n+\n+public function updateStatus(Request $request, $id)\n+{\n+    $cv = CreatorResume::findOrFail($id); // Correct model\n+    $cv->Status = $request->input('status'); // Retrieve the selected status\n+    $cv->save();\n+\n+    return redirect()->back()->with('success', 'Status updated successfully.');\n+}\n+\n+public function edit($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('edit_cv', compact('personalInfo'));\n+}\n+\n+public function update(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $request->input('first_name'),\n+        'last_name' => $request->input('last_name'),\n+        'email' => $request->input('email'),\n+        'phone' => $request->input('phone'),\n+        'address' => $request->input('address'),\n+        'Objective' => $request->input('Objective', null),\n+        'Facebook' => $request->input('Facebook', null),\n+        'BirthDate' => $request->input('BirthDate', null),\n+        'Height' => $request->input('Height'),\n+        'weight' => $request->input('weight'),\n+        'Marital_Status' => $request->input('Marital_Status'),\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if ($request->has('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if ($request->has('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update education\n+    Education::where('personal_info_id', $id)->delete();\n+    if ($request->has('education_name')) {\n+        foreach ($request->input('education_name') as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $id,\n+                'degree' => $request->input(\"education_degree.$index\"),\n+                'school_name' => $request->input(\"education_school_name.$index\"),\n+                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                'start_date' => $request->input(\"education_start_date.$index\"),\n+                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if ($request->has('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733248651886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -289,298 +289,5 @@\n         ->with('success', 'CV updated successfully.');\n }\n \n \n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-use App\\Models\\CreatorResume;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-{\n-    // Validate incoming data\n-    $validatedData = $request->validate([\n-        // Validation rules\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n-    ]);\n-\n-    // Handle the image upload\n-    if ($request->hasFile('image')) {\n-        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        $request->image->move(public_path('uploads/images'), $imageName);\n-        $validatedData['image'] = 'uploads/images/' . $imageName;\n-    } else {\n-        $validatedData['image'] = null;\n-    }\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'image' => $validatedData['image'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'] ?? null,\n-        'weight' => $validatedData['weight'] ?? null,\n-        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-    ]);\n-\n-    // Save skills\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-\n-    // Save work experiences\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save educations\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save certificates\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save to CreatorResume\n-    CreatorResume::create([\n-        'personal_info_id' => $personalInfo->id,\n-        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n-        'Status' => 'Created', // Example status\n-    ]);\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n-}\n-\n-    \n-\n-/**\n- * Display the created CV.\n- *\n- * @param int $id\n- * @return \\Illuminate\\View\\View\n- */\n-public function viewCV($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_after_creation', compact('personalInfo'));\n-}\n-\n-\n-public function dashboard()\n-{\n-    $cvs = CreatorResume::with('personalInfo')->get();\n-\n-    // Calculate the count of different statuses\n-    $totalCvs = $cvs->count();\n-    $completedCvs = $cvs->where('status', 'Completed')->count();\n-    $pendingCvs = $cvs->where('status', 'Pending')->count();\n-    $rejectedCvs = $cvs->where('status', 'Rejected')->count();\n-    $interviewCvs = $cvs->where('status', 'Interview')->count();\n-\n-    return view('dashboard', compact('cvs', 'totalCvs', 'completedCvs', 'pendingCvs', 'rejectedCvs', 'interviewCvs'));\n-}\n-\n-\n-public function updateStatus(Request $request, $id)\n-{\n-    $cv = CreatorResume::findOrFail($id); // Correct model\n-    $cv->Status = $request->input('status'); // Retrieve the selected status\n-    $cv->save();\n-\n-    return redirect()->back()->with('success', 'Status updated successfully.');\n-}\n-\n-public function edit($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('edit_cv', compact('personalInfo'));\n-}\n-\n-public function update(Request $request, $id)\n-{\n-    $personalInfo = PersonalInfo::findOrFail($id);\n-\n-    // Update personal info\n-    $personalInfo->update([\n-        'first_name' => $request->input('first_name'),\n-        'last_name' => $request->input('last_name'),\n-        'email' => $request->input('email'),\n-        'phone' => $request->input('phone'),\n-        'address' => $request->input('address'),\n-        'Objective' => $request->input('Objective', null),\n-        'Facebook' => $request->input('Facebook', null),\n-        'BirthDate' => $request->input('BirthDate', null),\n-        'Height' => $request->input('Height'),\n-        'weight' => $request->input('weight'),\n-        'Marital_Status' => $request->input('Marital_Status'),\n-    ]);\n-\n-    // Update skills\n-    Skill::where('personal_info_id', $id)->delete();\n-    if ($request->has('skills')) {\n-        foreach ($request->input('skills') as $skill) {\n-            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n-        }\n-    }\n-\n-    // Update work experiences\n-    WorkExperience::where('personal_info_id', $id)->delete();\n-    if ($request->has('job_title')) {\n-        foreach ($request->input('job_title') as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $request->input(\"company_name.$index\"),\n-                'location' => $request->input(\"location.$index\"),\n-                'start_date' => $request->input(\"start_date.$index\"),\n-                'end_date' => $request->input(\"end_date.$index\"),\n-                'responsibilities' => $request->input(\"responsibilities.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update education\n-    Education::where('personal_info_id', $id)->delete();\n-    if ($request->has('education_name')) {\n-        foreach ($request->input('education_name') as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $id,\n-                'degree' => $request->input(\"education_degree.$index\"),\n-                'school_name' => $request->input(\"education_school_name.$index\"),\n-                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n-                'start_date' => $request->input(\"education_start_date.$index\"),\n-                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update certificates\n-    Certificate::where('personal_info_id', $id)->delete();\n-    if ($request->has('certificate_names')) {\n-        foreach ($request->input('certificate_names') as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n-                'issue_date' => $request->input(\"issue_dates.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $id])\n-        ->with('success', 'CV updated successfully.');\n-}\n-\n-\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733248683632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,293 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+use App\\Models\\CreatorResume;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+{\n+    // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Validation rules\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n+    // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null;\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+    // Save skills\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+\n+    // Save work experiences\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save educations\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save certificates\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save to CreatorResume\n+    CreatorResume::create([\n+        'personal_info_id' => $personalInfo->id,\n+        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n+        'Status' => 'Created', // Example status\n+    ]);\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+}\n+\n+    \n+\n+/**\n+ * Display the created CV.\n+ *\n+ * @param int $id\n+ * @return \\Illuminate\\View\\View\n+ */\n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_after_creation', compact('personalInfo'));\n+}\n+\n+\n+public function dashboard()\n+{\n+    $cvs = CreatorResume::with('personalInfo')->get();\n+\n+    // Calculate the count of different statuses\n+    $totalCvs = $cvs->count();\n+    $completedCvs = $cvs->where('status', 'Completed')->count();\n+    $pendingCvs = $cvs->where('status', 'Pending')->count();\n+    $rejectedCvs = $cvs->where('status', 'Rejected')->count();\n+    $interviewCvs = $cvs->where('status', 'Interview')->count();\n+\n+    return view('dashboard', compact('cvs', 'totalCvs', 'completedCvs', 'pendingCvs', 'rejectedCvs', 'interviewCvs'));\n+}\n+\n+\n+public function updateStatus(Request $request, $id)\n+{\n+    $cv = CreatorResume::findOrFail($id); // Correct model\n+    $cv->Status = $request->input('status'); // Retrieve the selected status\n+    $cv->save();\n+\n+    return redirect()->back()->with('success', 'Status updated successfully.');\n+}\n+\n+public function edit($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('edit_cv', compact('personalInfo'));\n+}\n+\n+public function update(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $request->input('first_name'),\n+        'last_name' => $request->input('last_name'),\n+        'email' => $request->input('email'),\n+        'phone' => $request->input('phone'),\n+        'address' => $request->input('address'),\n+        'Objective' => $request->input('Objective', null),\n+        'Facebook' => $request->input('Facebook', null),\n+        'BirthDate' => $request->input('BirthDate', null),\n+        'Height' => $request->input('Height'),\n+        'weight' => $request->input('weight'),\n+        'Marital_Status' => $request->input('Marital_Status'),\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if ($request->has('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if ($request->has('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update education\n+    Education::where('personal_info_id', $id)->delete();\n+    if ($request->has('education_name')) {\n+        foreach ($request->input('education_name') as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $id,\n+                'degree' => $request->input(\"education_degree.$index\"),\n+                'school_name' => $request->input(\"education_school_name.$index\"),\n+                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                'start_date' => $request->input(\"education_start_date.$index\"),\n+                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if ($request->has('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733249014681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -183,18 +183,18 @@\n \n \n public function dashboard()\n {\n-    $cvs = CreatorResume::with('personalInfo')->get();\n+    $cvs = CreatorResume::all();\n \n     // Calculate the count of different statuses\n     $totalCvs = $cvs->count();\n-    $completedCvs = $cvs->where('status', 'Completed')->count();\n-    $pendingCvs = $cvs->where('status', 'Pending')->count();\n-    $rejectedCvs = $cvs->where('status', 'Rejected')->count();\n-    $interviewCvs = $cvs->where('status', 'Interview')->count();\n+    $completedCvs = $cvs->where('Status', 'Completed')->count();\n+    $pendingCvs = $cvs->where('Status', 'Pending')->count();\n+    $rejectedCvs = $cvs->where('Status', 'Rejected')->count();\n+    $interviewCvs = $cvs->where('Status', 'Interview')->count();\n \n-    return view('dashboard', compact('cvs', 'totalCvs', 'completedCvs', 'pendingCvs', 'rejectedCvs', 'interviewCvs'));\n+    return view('dashboard', compact('totalCvs', 'completedCvs', 'pendingCvs', 'rejectedCvs', 'interviewCvs'));\n }\n \n \n public function updateStatus(Request $request, $id)\n@@ -289,298 +289,5 @@\n         ->with('success', 'CV updated successfully.');\n }\n \n \n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-use App\\Models\\CreatorResume;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-{\n-    // Validate incoming data\n-    $validatedData = $request->validate([\n-        // Validation rules\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n-    ]);\n-\n-    // Handle the image upload\n-    if ($request->hasFile('image')) {\n-        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        $request->image->move(public_path('uploads/images'), $imageName);\n-        $validatedData['image'] = 'uploads/images/' . $imageName;\n-    } else {\n-        $validatedData['image'] = null;\n-    }\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'image' => $validatedData['image'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'] ?? null,\n-        'weight' => $validatedData['weight'] ?? null,\n-        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-    ]);\n-\n-    // Save skills\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-\n-    // Save work experiences\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save educations\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save certificates\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save to CreatorResume\n-    CreatorResume::create([\n-        'personal_info_id' => $personalInfo->id,\n-        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n-        'Status' => 'Created', // Example status\n-    ]);\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n-}\n-\n-    \n-\n-/**\n- * Display the created CV.\n- *\n- * @param int $id\n- * @return \\Illuminate\\View\\View\n- */\n-public function viewCV($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_after_creation', compact('personalInfo'));\n-}\n-\n-\n-public function dashboard()\n-{\n-    $cvs = CreatorResume::with('personalInfo')->get();\n-\n-    // Calculate the count of different statuses\n-    $totalCvs = $cvs->count();\n-    $completedCvs = $cvs->where('status', 'Completed')->count();\n-    $pendingCvs = $cvs->where('status', 'Pending')->count();\n-    $rejectedCvs = $cvs->where('status', 'Rejected')->count();\n-    $interviewCvs = $cvs->where('status', 'Interview')->count();\n-\n-    return view('dashboard', compact('cvs', 'totalCvs', 'completedCvs', 'pendingCvs', 'rejectedCvs', 'interviewCvs'));\n-}\n-\n-\n-public function updateStatus(Request $request, $id)\n-{\n-    $cv = CreatorResume::findOrFail($id); // Correct model\n-    $cv->Status = $request->input('status'); // Retrieve the selected status\n-    $cv->save();\n-\n-    return redirect()->back()->with('success', 'Status updated successfully.');\n-}\n-\n-public function edit($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('edit_cv', compact('personalInfo'));\n-}\n-\n-public function update(Request $request, $id)\n-{\n-    $personalInfo = PersonalInfo::findOrFail($id);\n-\n-    // Update personal info\n-    $personalInfo->update([\n-        'first_name' => $request->input('first_name'),\n-        'last_name' => $request->input('last_name'),\n-        'email' => $request->input('email'),\n-        'phone' => $request->input('phone'),\n-        'address' => $request->input('address'),\n-        'Objective' => $request->input('Objective', null),\n-        'Facebook' => $request->input('Facebook', null),\n-        'BirthDate' => $request->input('BirthDate', null),\n-        'Height' => $request->input('Height'),\n-        'weight' => $request->input('weight'),\n-        'Marital_Status' => $request->input('Marital_Status'),\n-    ]);\n-\n-    // Update skills\n-    Skill::where('personal_info_id', $id)->delete();\n-    if ($request->has('skills')) {\n-        foreach ($request->input('skills') as $skill) {\n-            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n-        }\n-    }\n-\n-    // Update work experiences\n-    WorkExperience::where('personal_info_id', $id)->delete();\n-    if ($request->has('job_title')) {\n-        foreach ($request->input('job_title') as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $request->input(\"company_name.$index\"),\n-                'location' => $request->input(\"location.$index\"),\n-                'start_date' => $request->input(\"start_date.$index\"),\n-                'end_date' => $request->input(\"end_date.$index\"),\n-                'responsibilities' => $request->input(\"responsibilities.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update education\n-    Education::where('personal_info_id', $id)->delete();\n-    if ($request->has('education_name')) {\n-        foreach ($request->input('education_name') as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $id,\n-                'degree' => $request->input(\"education_degree.$index\"),\n-                'school_name' => $request->input(\"education_school_name.$index\"),\n-                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n-                'start_date' => $request->input(\"education_start_date.$index\"),\n-                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update certificates\n-    Certificate::where('personal_info_id', $id)->delete();\n-    if ($request->has('certificate_names')) {\n-        foreach ($request->input('certificate_names') as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n-                'issue_date' => $request->input(\"issue_dates.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $id])\n-        ->with('success', 'CV updated successfully.');\n-}\n-\n-\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733249045096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -183,18 +183,18 @@\n \n \n public function dashboard()\n {\n-    $cvs = CreatorResume::all();\n+    $cvs = CreatorResume::with('personalInfo')->get();\n \n     // Calculate the count of different statuses\n     $totalCvs = $cvs->count();\n-    $completedCvs = $cvs->where('Status', 'Completed')->count();\n-    $pendingCvs = $cvs->where('Status', 'Pending')->count();\n-    $rejectedCvs = $cvs->where('Status', 'Rejected')->count();\n-    $interviewCvs = $cvs->where('Status', 'Interview')->count();\n+    $completedCvs = $cvs->where('status', 'Completed')->count();\n+    $pendingCvs = $cvs->where('status', 'Pending')->count();\n+    $rejectedCvs = $cvs->where('status', 'Rejected')->count();\n+    $interviewCvs = $cvs->where('status', 'Interview')->count();\n \n-    return view('dashboard', compact('totalCvs', 'completedCvs', 'pendingCvs', 'rejectedCvs', 'interviewCvs'));\n+    return view('dashboard', compact('cvs', 'totalCvs', 'completedCvs', 'pendingCvs', 'rejectedCvs', 'interviewCvs'));\n }\n \n \n public function updateStatus(Request $request, $id)\n"
                },
                {
                    "date": 1733249319178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,16 +185,14 @@\n public function dashboard()\n {\n     $cvs = CreatorResume::with('personalInfo')->get();\n \n-    // Calculate the count of different statuses\n-    $totalCvs = $cvs->count();\n-    $completedCvs = $cvs->where('status', 'Completed')->count();\n-    $pendingCvs = $cvs->where('status', 'Pending')->count();\n-    $rejectedCvs = $cvs->where('status', 'Rejected')->count();\n-    $interviewCvs = $cvs->where('status', 'Interview')->count();\n+    // Calculate totals\n+    $totalCVs = $cvs->count();\n+    $completedCVs = $cvs->where('Status', 'Completed')->count();\n+    $pendingCVs = $cvs->where('Status', '!=', 'Completed')->count();\n \n-    return view('dashboard', compact('cvs', 'totalCvs', 'completedCvs', 'pendingCvs', 'rejectedCvs', 'interviewCvs'));\n+    return view('dashboard', compact('cvs', 'totalCVs', 'completedCVs', 'pendingCVs'));\n }\n \n \n public function updateStatus(Request $request, $id)\n"
                },
                {
                    "date": 1733254570857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n      * @return \\Illuminate\\View\\View\n      */\n     public function creates()\n     {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n+        return view('monitor-accounts'); // Ensure this matches your blade file's location\n     }\n \n     /**\n      * Store the CV data submitted from the form.\n"
                },
                {
                    "date": 1733254592310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n      * @return \\Illuminate\\View\\View\n      */\n     public function creates()\n     {\n-        return view('monitor-accounts'); // Ensure this matches your blade file's location\n+        return view('monitor.accounts'); // Ensure this matches your blade file's location\n     }\n \n     /**\n      * Store the CV data submitted from the form.\n"
                },
                {
                    "date": 1733254698302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n      * @return \\Illuminate\\View\\View\n      */\n     public function creates()\n     {\n-        return view('monitor.accounts'); // Ensure this matches your blade file's location\n+        return view('create_cv'); // Ensure this matches your blade file's location\n     }\n \n     /**\n      * Store the CV data submitted from the form.\n@@ -184,15 +184,9 @@\n \n public function dashboard()\n {\n     $cvs = CreatorResume::with('personalInfo')->get();\n-\n-    // Calculate totals\n-    $totalCVs = $cvs->count();\n-    $completedCVs = $cvs->where('Status', 'Completed')->count();\n-    $pendingCVs = $cvs->where('Status', '!=', 'Completed')->count();\n-\n-    return view('dashboard', compact('cvs', 'totalCVs', 'completedCVs', 'pendingCVs'));\n+    return view('dashboard', compact('cvs'));\n }\n \n \n public function updateStatus(Request $request, $id)\n"
                },
                {
                    "date": 1733281914626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -281,5 +281,20 @@\n         ->with('success', 'CV updated successfully.');\n }\n \n \n+public function assignLink(Request $request, $id)\n+{\n+    $cv = CreatorResume::findOrFail($id);\n+\n+    $request->validate([\n+        'Link' => 'nullable|url',\n+    ]);\n+\n+    $cv->application_link = $request->input('Link');\n+    $cv->save();\n+\n+    return redirect()->route('dashboard')->with('success', 'Application link assigned successfully!');\n+}\n+\n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733282538900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -286,12 +286,12 @@\n {\n     $cv = CreatorResume::findOrFail($id);\n \n     $request->validate([\n-        'Link' => 'nullable|url',\n+        'application_link' => 'nullable|url',\n     ]);\n \n-    $cv->application_link = $request->input('Link');\n+    $cv->application_link = $request->input('application_link'); // Correct field\n     $cv->save();\n \n     return redirect()->route('dashboard')->with('success', 'Application link assigned successfully!');\n }\n"
                },
                {
                    "date": 1733283866214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -280,21 +280,21 @@\n     return redirect()->route('view_cv_after_creation', ['id' => $id])\n         ->with('success', 'CV updated successfully.');\n }\n \n-\n public function assignLink(Request $request, $id)\n {\n     $cv = CreatorResume::findOrFail($id);\n \n     $request->validate([\n         'application_link' => 'nullable|url',\n+        'link_type' => 'nullable|in:online_interview,job_application',\n+        'scheduled_date' => 'nullable|date|after_or_equal:today',\n     ]);\n \n-    $cv->application_link = $request->input('application_link'); // Correct field\n+    $cv->application_link = $request->input('application_link');\n+    $cv->link_type = $request->input('link_type');\n+    $cv->scheduled_date = $request->input('scheduled_date');\n     $cv->save();\n \n\\ No newline at end of file\n-    return redirect()->route('dashboard')->with('success', 'Application link assigned successfully!');\n+    return redirect()->route('dashboard')->with('success', 'Application link and details assigned successfully!');\n }\n-\n-\n-}\n"
                },
                {
                    "date": 1733283876657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -280,8 +280,9 @@\n     return redirect()->route('view_cv_after_creation', ['id' => $id])\n         ->with('success', 'CV updated successfully.');\n }\n \n+\n public function assignLink(Request $request, $id)\n {\n     $cv = CreatorResume::findOrFail($id);\n \n@@ -296,5 +297,9 @@\n     $cv->scheduled_date = $request->input('scheduled_date');\n     $cv->save();\n \n     return redirect()->route('dashboard')->with('success', 'Application link and details assigned successfully!');\n+}\n+\n+\n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733285395826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -283,22 +283,22 @@\n \n \n public function assignLink(Request $request, $id)\n {\n-    $cv = CreatorResume::findOrFail($id);\n-\n     $request->validate([\n-        'application_link' => 'nullable|url',\n-        'link_type' => 'nullable|in:online_interview,job_application',\n-        'scheduled_date' => 'nullable|date|after_or_equal:today',\n+        'application_link' => 'required|url',\n+        'link_type' => 'required|string',\n+        'scheduled_date' => 'required|date',\n     ]);\n \n-    $cv->application_link = $request->input('application_link');\n-    $cv->link_type = $request->input('link_type');\n-    $cv->scheduled_date = $request->input('scheduled_date');\n-    $cv->save();\n+    $cv = CV::findOrFail($id);\n+    $cv->update([\n+        'application_link' => $request->application_link,\n+        'link_type' => $request->link_type,\n+        'scheduled_date' => $request->scheduled_date,\n+    ]);\n \n-    return redirect()->route('dashboard')->with('success', 'Application link and details assigned successfully!');\n+    return redirect()->back()->with('success', 'Link assigned successfully.');\n }\n \n \n \n"
                },
                {
                    "date": 1733285497266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -289,9 +289,9 @@\n         'link_type' => 'required|string',\n         'scheduled_date' => 'required|date',\n     ]);\n \n-    $cv = CV::findOrFail($id);\n+    $cv = CreatorResume::findOrFail($id);\n     $cv->update([\n         'application_link' => $request->application_link,\n         'link_type' => $request->link_type,\n         'scheduled_date' => $request->scheduled_date,\n"
                },
                {
                    "date": 1733285945933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -289,17 +289,19 @@\n         'link_type' => 'required|string',\n         'scheduled_date' => 'required|date',\n     ]);\n \n-    $cv = CreatorResume::findOrFail($id);\n+    // Convert scheduled date to 24-hour format if necessary\n+    $cv = CV::findOrFail($id);\n     $cv->update([\n         'application_link' => $request->application_link,\n         'link_type' => $request->link_type,\n-        'scheduled_date' => $request->scheduled_date,\n+        'scheduled_date' => \\Carbon\\Carbon::parse($request->scheduled_date)->format('Y-m-d H:i:s'), // Store in 24-hour format\n     ]);\n \n     return redirect()->back()->with('success', 'Link assigned successfully.');\n }\n \n \n \n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733285980478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -290,9 +290,9 @@\n         'scheduled_date' => 'required|date',\n     ]);\n \n     // Convert scheduled date to 24-hour format if necessary\n-    $cv = CV::findOrFail($id);\n+    $cv = CreatorResume::findOrFail($id);\n     $cv->update([\n         'application_link' => $request->application_link,\n         'link_type' => $request->link_type,\n         'scheduled_date' => \\Carbon\\Carbon::parse($request->scheduled_date)->format('Y-m-d H:i:s'), // Store in 24-hour format\n"
                },
                {
                    "date": 1733286300267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -294,9 +294,9 @@\n     $cv = CreatorResume::findOrFail($id);\n     $cv->update([\n         'application_link' => $request->application_link,\n         'link_type' => $request->link_type,\n-        'scheduled_date' => \\Carbon\\Carbon::parse($request->scheduled_date)->format('Y-m-d H:i:s'), // Store in 24-hour format\n+        'scheduled_date' => \\Carbon\\Carbon::parse($request->scheduled_date)->format('Y-m-d h:i:s A'), // Store in 24-hour format\n     ]);\n \n     return redirect()->back()->with('success', 'Link assigned successfully.');\n }\n"
                },
                {
                    "date": 1733294092738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,8 +188,15 @@\n     return view('dashboard', compact('cvs'));\n }\n \n \n+public function dashboard()\n+{\n+    $cvs = CreatorResume::with('personalInfo')->get();\n+    return view('userdashboard', compact('cvs'));\n+}\n+\n+\n public function updateStatus(Request $request, $id)\n {\n     $cv = CreatorResume::findOrFail($id); // Correct model\n     $cv->Status = $request->input('status'); // Retrieve the selected status\n"
                },
                {
                    "date": 1733294098758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,9 +188,9 @@\n     return view('dashboard', compact('cvs'));\n }\n \n \n-public function dashboard()\n+public function userdashboard()\n {\n     $cvs = CreatorResume::with('personalInfo')->get();\n     return view('userdashboard', compact('cvs'));\n }\n"
                },
                {
                    "date": 1733300544709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,11 +154,12 @@\n             ]);\n         }\n     }\n \n-    // Save to CreatorResume\n+    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n     CreatorResume::create([\n         'personal_info_id' => $personalInfo->id,\n+        'user_id' => $userId, // Ensure `user_id` column exists in CreatorResume table\n         'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n         'Status' => 'Created', // Example status\n     ]);\n \n"
                },
                {
                    "date": 1733300769650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n use App\\Models\\Education;\n use App\\Models\\Certificate;\n use Illuminate\\Http\\Request;\n use App\\Models\\CreatorResume;\n+use Illuminate\\Support\\Facades\\Session;\n \n class CVController extends Controller\n {\n     /**\n"
                },
                {
                    "date": 1733301034406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,9 +158,9 @@\n \n     $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n     CreatorResume::create([\n         'personal_info_id' => $personalInfo->id,\n-        'user_id' => $userId, // Ensure `user_id` column exists in CreatorResume table\n+        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n         'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n         'Status' => 'Created', // Example status\n     ]);\n \n"
                },
                {
                    "date": 1733301619769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,9 +192,13 @@\n \n \n public function userdashboard()\n {\n-    $cvs = CreatorResume::with('personalInfo')->get();\n+    $userId = auth()->id(); // Assuming authentication is used\n+    $cvs = CreatorResume::with('personalInfo')\n+        ->where('CreatorResume', $userId) // Match the logged-in user's ID\n+        ->get();\n+\n     return view('userdashboard', compact('cvs'));\n }\n \n \n"
                },
                {
                    "date": 1733301754066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,14 +192,15 @@\n \n \n public function userdashboard()\n {\n-    $userId = auth()->id(); // Assuming authentication is used\n-    $cvs = CreatorResume::with('personalInfo')\n-        ->where('CreatorResume', $userId) // Match the logged-in user's ID\n-        ->get();\n+    $user = session('user'); // Get user data from session\n \n-    return view('userdashboard', compact('cvs'));\n+    // Example: Fetch user-specific data (adjust as per your application logic)\n+    $cvData = CreatorResume::where('user_id', $user->id)->get();\n+\n+    // Return the user dashboard view with the data\n+    return view('user.dashboard', compact('user', 'cvData'));\n }\n \n \n public function updateStatus(Request $request, $id)\n"
                },
                {
                    "date": 1733301848198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,9 +198,9 @@\n     // Example: Fetch user-specific data (adjust as per your application logic)\n     $cvData = CreatorResume::where('user_id', $user->id)->get();\n \n     // Return the user dashboard view with the data\n-    return view('user.dashboard', compact('user', 'cvData'));\n+    return view('userdashboard', compact('user', 'cvData'));\n }\n \n \n public function updateStatus(Request $request, $id)\n"
                },
                {
                    "date": 1733301966345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -195,9 +195,9 @@\n {\n     $user = session('user'); // Get user data from session\n \n     // Example: Fetch user-specific data (adjust as per your application logic)\n-    $cvData = CreatorResume::where('user_id', $user->id)->get();\n+    $cvData = CreatorResume::where('CreatorResume', $user->id)->get();\n \n     // Return the user dashboard view with the data\n     return view('userdashboard', compact('user', 'cvData'));\n }\n"
                },
                {
                    "date": 1733302081884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,16 +189,21 @@\n     $cvs = CreatorResume::with('personalInfo')->get();\n     return view('dashboard', compact('cvs'));\n }\n \n-\n public function userdashboard()\n {\n     $user = session('user'); // Get user data from session\n \n-    // Example: Fetch user-specific data (adjust as per your application logic)\n-    $cvData = CreatorResume::where('CreatorResume', $user->id)->get();\n+    if (is_array($user)) {\n+        $userId = $user['id']; // Access 'id' as an array key\n+    } else {\n+        $userId = $user->id; // Access 'id' as an object property\n+    }\n \n+    // Fetch user-specific data\n+    $cvData = CreatorResume::where('CreatorResume', $userId)->get();\n+\n     // Return the user dashboard view with the data\n     return view('userdashboard', compact('user', 'cvData'));\n }\n \n"
                },
                {
                    "date": 1733302397946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,26 +189,25 @@\n     $cvs = CreatorResume::with('personalInfo')->get();\n     return view('dashboard', compact('cvs'));\n }\n \n-public function userdashboard()\n+ppublic function userdashboard()\n {\n-    $user = session('user'); // Get user data from session\n+    $user = session('user');\n \n     if (is_array($user)) {\n-        $userId = $user['id']; // Access 'id' as an array key\n-    } else {\n-        $userId = $user->id; // Access 'id' as an object property\n+        $user = (object) $user; // Convert to an object for consistency\n     }\n \n-    // Fetch user-specific data\n+    $userId = $user->id;\n+\n     $cvData = CreatorResume::where('CreatorResume', $userId)->get();\n \n-    // Return the user dashboard view with the data\n     return view('userdashboard', compact('user', 'cvData'));\n }\n \n \n+\n public function updateStatus(Request $request, $id)\n {\n     $cv = CreatorResume::findOrFail($id); // Correct model\n     $cv->Status = $request->input('status'); // Retrieve the selected status\n"
                },
                {
                    "date": 1733302406036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,10 +188,9 @@\n {\n     $cvs = CreatorResume::with('personalInfo')->get();\n     return view('dashboard', compact('cvs'));\n }\n-\n-ppublic function userdashboard()\n+public function userdashboard()\n {\n     $user = session('user');\n \n     if (is_array($user)) {\n"
                },
                {
                    "date": 1733302471459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,11 +193,15 @@\n {\n     $user = session('user');\n \n     if (is_array($user)) {\n-        $user = (object) $user; // Convert to an object for consistency\n+        $user = (object) $user; // Convert to an object\n     }\n \n+    if (!isset($user->name)) {\n+        $user->name = 'Guest'; // Set a default name if missing\n+    }\n+\n     $userId = $user->id;\n \n     $cvData = CreatorResume::where('CreatorResume', $userId)->get();\n \n"
                },
                {
                    "date": 1733302544405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,13 +193,13 @@\n {\n     $user = session('user');\n \n     if (is_array($user)) {\n-        $user = (object) $user; // Convert to an object\n+        $user = (object) $user; // Ensure $user is an object\n     }\n \n     if (!isset($user->name)) {\n-        $user->name = 'Guest'; // Set a default name if missing\n+        $user->name = 'Guest'; // Fallback if name is missing\n     }\n \n     $userId = $user->id;\n \n@@ -208,9 +208,8 @@\n     return view('userdashboard', compact('user', 'cvData'));\n }\n \n \n-\n public function updateStatus(Request $request, $id)\n {\n     $cv = CreatorResume::findOrFail($id); // Correct model\n     $cv->Status = $request->input('status'); // Retrieve the selected status\n"
                },
                {
                    "date": 1733302565173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,9 +197,9 @@\n         $user = (object) $user; // Ensure $user is an object\n     }\n \n     if (!isset($user->name)) {\n-        $user->name = 'Guest'; // Fallback if name is missing\n+        $user->firstname = 'Guest'; // Fallback if name is missing\n     }\n \n     $userId = $user->id;\n \n"
                },
                {
                    "date": 1733305201547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -321,7 +321,90 @@\n     return redirect()->back()->with('success', 'Link assigned successfully.');\n }\n \n \n+//for usersystems\n \n+public function edituser($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n \n+    return view('edit_cv', compact('personalInfo'));\n+}\n+\n+public function updateuser(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $request->input('first_name'),\n+        'last_name' => $request->input('last_name'),\n+        'email' => $request->input('email'),\n+        'phone' => $request->input('phone'),\n+        'address' => $request->input('address'),\n+        'Objective' => $request->input('Objective', null),\n+        'Facebook' => $request->input('Facebook', null),\n+        'BirthDate' => $request->input('BirthDate', null),\n+        'Height' => $request->input('Height'),\n+        'weight' => $request->input('weight'),\n+        'Marital_Status' => $request->input('Marital_Status'),\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if ($request->has('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if ($request->has('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update education\n+    Education::where('personal_info_id', $id)->delete();\n+    if ($request->has('education_name')) {\n+        foreach ($request->input('education_name') as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $id,\n+                'degree' => $request->input(\"education_degree.$index\"),\n+                'school_name' => $request->input(\"education_school_name.$index\"),\n+                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                'start_date' => $request->input(\"education_start_date.$index\"),\n+                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if ($request->has('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733305297467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -328,9 +328,9 @@\n {\n     $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n         ->findOrFail($id);\n \n-    return view('edit_cv', compact('personalInfo'));\n+    return view('user_edit_cv', compact('personalInfo'));\n }\n \n public function updateuser(Request $request, $id)\n {\n"
                },
                {
                    "date": 1733305399686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,410 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+use App\\Models\\CreatorResume;\n+use Illuminate\\Support\\Facades\\Session;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+{\n+    // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Validation rules\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n+    // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null;\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+    // Save skills\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+\n+    // Save work experiences\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save educations\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save certificates\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n+    CreatorResume::create([\n+        'personal_info_id' => $personalInfo->id,\n+        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n+        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n+        'Status' => 'Created', // Example status\n+    ]);\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+}\n+\n+    \n+\n+/**\n+ * Display the created CV.\n+ *\n+ * @param int $id\n+ * @return \\Illuminate\\View\\View\n+ */\n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_after_creation', compact('personalInfo'));\n+}\n+\n+\n+public function dashboard()\n+{\n+    $cvs = CreatorResume::with('personalInfo')->get();\n+    return view('dashboard', compact('cvs'));\n+}\n+public function userdashboard()\n+{\n+    $user = session('user');\n+\n+    if (is_array($user)) {\n+        $user = (object) $user; // Ensure $user is an object\n+    }\n+\n+    if (!isset($user->name)) {\n+        $user->firstname = 'Guest'; // Fallback if name is missing\n+    }\n+\n+    $userId = $user->id;\n+\n+    $cvData = CreatorResume::where('CreatorResume', $userId)->get();\n+\n+    return view('userdashboard', compact('user', 'cvData'));\n+}\n+\n+\n+public function updateStatus(Request $request, $id)\n+{\n+    $cv = CreatorResume::findOrFail($id); // Correct model\n+    $cv->Status = $request->input('status'); // Retrieve the selected status\n+    $cv->save();\n+\n+    return redirect()->back()->with('success', 'Status updated successfully.');\n+}\n+\n+public function edit($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('edit_cv', compact('personalInfo'));\n+}\n+\n+public function update(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $request->input('first_name'),\n+        'last_name' => $request->input('last_name'),\n+        'email' => $request->input('email'),\n+        'phone' => $request->input('phone'),\n+        'address' => $request->input('address'),\n+        'Objective' => $request->input('Objective', null),\n+        'Facebook' => $request->input('Facebook', null),\n+        'BirthDate' => $request->input('BirthDate', null),\n+        'Height' => $request->input('Height'),\n+        'weight' => $request->input('weight'),\n+        'Marital_Status' => $request->input('Marital_Status'),\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if ($request->has('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if ($request->has('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update education\n+    Education::where('personal_info_id', $id)->delete();\n+    if ($request->has('education_name')) {\n+        foreach ($request->input('education_name') as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $id,\n+                'degree' => $request->input(\"education_degree.$index\"),\n+                'school_name' => $request->input(\"education_school_name.$index\"),\n+                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                'start_date' => $request->input(\"education_start_date.$index\"),\n+                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if ($request->has('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n+\n+public function assignLink(Request $request, $id)\n+{\n+    $request->validate([\n+        'application_link' => 'required|url',\n+        'link_type' => 'required|string',\n+        'scheduled_date' => 'required|date',\n+    ]);\n+\n+    // Convert scheduled date to 24-hour format if necessary\n+    $cv = CreatorResume::findOrFail($id);\n+    $cv->update([\n+        'application_link' => $request->application_link,\n+        'link_type' => $request->link_type,\n+        'scheduled_date' => \\Carbon\\Carbon::parse($request->scheduled_date)->format('Y-m-d h:i:s A'), // Store in 24-hour format\n+    ]);\n+\n+    return redirect()->back()->with('success', 'Link assigned successfully.');\n+}\n+\n+\n+//for usersystems\n+\n+public function edituser($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('user_edit_cv', compact('personalInfo'));\n+}\n+\n+public function updateuser(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $request->input('first_name'),\n+        'last_name' => $request->input('last_name'),\n+        'email' => $request->input('email'),\n+        'phone' => $request->input('phone'),\n+        'address' => $request->input('address'),\n+        'Objective' => $request->input('Objective', null),\n+        'Facebook' => $request->input('Facebook', null),\n+        'BirthDate' => $request->input('BirthDate', null),\n+        'Height' => $request->input('Height'),\n+        'weight' => $request->input('weight'),\n+        'Marital_Status' => $request->input('Marital_Status'),\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if ($request->has('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if ($request->has('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update education\n+    Education::where('personal_info_id', $id)->delete();\n+    if ($request->has('education_name')) {\n+        foreach ($request->input('education_name') as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $id,\n+                'degree' => $request->input(\"education_degree.$index\"),\n+                'school_name' => $request->input(\"education_school_name.$index\"),\n+                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                'start_date' => $request->input(\"education_start_date.$index\"),\n+                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if ($request->has('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733305545166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,410 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+use App\\Models\\CreatorResume;\n+use Illuminate\\Support\\Facades\\Session;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+{\n+    // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Validation rules\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n+    // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null;\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+    // Save skills\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+\n+    // Save work experiences\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save educations\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save certificates\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n+    CreatorResume::create([\n+        'personal_info_id' => $personalInfo->id,\n+        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n+        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n+        'Status' => 'Created', // Example status\n+    ]);\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+}\n+\n+    \n+\n+/**\n+ * Display the created CV.\n+ *\n+ * @param int $id\n+ * @return \\Illuminate\\View\\View\n+ */\n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_after_creation', compact('personalInfo'));\n+}\n+\n+\n+public function dashboard()\n+{\n+    $cvs = CreatorResume::with('personalInfo')->get();\n+    return view('dashboard', compact('cvs'));\n+}\n+public function userdashboard()\n+{\n+    $user = session('user');\n+\n+    if (is_array($user)) {\n+        $user = (object) $user; // Ensure $user is an object\n+    }\n+\n+    if (!isset($user->name)) {\n+        $user->firstname = 'Guest'; // Fallback if name is missing\n+    }\n+\n+    $userId = $user->id;\n+\n+    $cvData = CreatorResume::where('CreatorResume', $userId)->get();\n+\n+    return view('userdashboard', compact('user', 'cvData'));\n+}\n+\n+\n+public function updateStatus(Request $request, $id)\n+{\n+    $cv = CreatorResume::findOrFail($id); // Correct model\n+    $cv->Status = $request->input('status'); // Retrieve the selected status\n+    $cv->save();\n+\n+    return redirect()->back()->with('success', 'Status updated successfully.');\n+}\n+\n+public function edit($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('edit_cv', compact('personalInfo'));\n+}\n+\n+public function update(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $request->input('first_name'),\n+        'last_name' => $request->input('last_name'),\n+        'email' => $request->input('email'),\n+        'phone' => $request->input('phone'),\n+        'address' => $request->input('address'),\n+        'Objective' => $request->input('Objective', null),\n+        'Facebook' => $request->input('Facebook', null),\n+        'BirthDate' => $request->input('BirthDate', null),\n+        'Height' => $request->input('Height'),\n+        'weight' => $request->input('weight'),\n+        'Marital_Status' => $request->input('Marital_Status'),\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if ($request->has('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if ($request->has('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update education\n+    Education::where('personal_info_id', $id)->delete();\n+    if ($request->has('education_name')) {\n+        foreach ($request->input('education_name') as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $id,\n+                'degree' => $request->input(\"education_degree.$index\"),\n+                'school_name' => $request->input(\"education_school_name.$index\"),\n+                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                'start_date' => $request->input(\"education_start_date.$index\"),\n+                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if ($request->has('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n+\n+public function assignLink(Request $request, $id)\n+{\n+    $request->validate([\n+        'application_link' => 'required|url',\n+        'link_type' => 'required|string',\n+        'scheduled_date' => 'required|date',\n+    ]);\n+\n+    // Convert scheduled date to 24-hour format if necessary\n+    $cv = CreatorResume::findOrFail($id);\n+    $cv->update([\n+        'application_link' => $request->application_link,\n+        'link_type' => $request->link_type,\n+        'scheduled_date' => \\Carbon\\Carbon::parse($request->scheduled_date)->format('Y-m-d h:i:s A'), // Store in 24-hour format\n+    ]);\n+\n+    return redirect()->back()->with('success', 'Link assigned successfully.');\n+}\n+\n+\n+//for usersystems\n+\n+public function edituser($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('user_edit_cv', compact('personalInfo'));\n+}\n+\n+public function updateuser(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $request->input('first_name'),\n+        'last_name' => $request->input('last_name'),\n+        'email' => $request->input('email'),\n+        'phone' => $request->input('phone'),\n+        'address' => $request->input('address'),\n+        'Objective' => $request->input('Objective', null),\n+        'Facebook' => $request->input('Facebook', null),\n+        'BirthDate' => $request->input('BirthDate', null),\n+        'Height' => $request->input('Height'),\n+        'weight' => $request->input('weight'),\n+        'Marital_Status' => $request->input('Marital_Status'),\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if ($request->has('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if ($request->has('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update education\n+    Education::where('personal_info_id', $id)->delete();\n+    if ($request->has('education_name')) {\n+        foreach ($request->input('education_name') as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $id,\n+                'degree' => $request->input(\"education_degree.$index\"),\n+                'school_name' => $request->input(\"education_school_name.$index\"),\n+                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                'start_date' => $request->input(\"education_start_date.$index\"),\n+                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if ($request->has('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733314560205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -271,19 +271,21 @@\n \n     // Update education\n     Education::where('personal_info_id', $id)->delete();\n     if ($request->has('education_name')) {\n+        Education::where('personal_info_id', $id)->delete(); // Clear existing records\n         foreach ($request->input('education_name') as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $id,\n-                'degree' => $request->input(\"education_degree.$index\"),\n-                'school_name' => $request->input(\"education_school_name.$index\"),\n-                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n-                'start_date' => $request->input(\"education_start_date.$index\"),\n-                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-            ]);\n+            if (!empty($educationName)) {\n+                Education::create([\n+                    'personal_info_id' => $id,\n+                    'degree' => $request->input(\"education_degree.$index\"),\n+                    'school_name' => $educationName,\n+                    'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                    'start_date' => $request->input(\"education_start_date.$index\"),\n+                    'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+                ]);\n+            }\n         }\n-    }\n \n     // Update certificates\n     Certificate::where('personal_info_id', $id)->delete();\n     if ($request->has('certificate_names')) {\n@@ -406,825 +408,5 @@\n     return redirect()->route('view_cv_after_creation', ['id' => $id])\n         ->with('success', 'CV updated successfully.');\n }\n \n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-use App\\Models\\CreatorResume;\n-use Illuminate\\Support\\Facades\\Session;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-{\n-    // Validate incoming data\n-    $validatedData = $request->validate([\n-        // Validation rules\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n-    ]);\n-\n-    // Handle the image upload\n-    if ($request->hasFile('image')) {\n-        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        $request->image->move(public_path('uploads/images'), $imageName);\n-        $validatedData['image'] = 'uploads/images/' . $imageName;\n-    } else {\n-        $validatedData['image'] = null;\n-    }\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'image' => $validatedData['image'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'] ?? null,\n-        'weight' => $validatedData['weight'] ?? null,\n-        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-    ]);\n-\n-    // Save skills\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-\n-    // Save work experiences\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save educations\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save certificates\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n-    CreatorResume::create([\n-        'personal_info_id' => $personalInfo->id,\n-        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n-        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n-        'Status' => 'Created', // Example status\n-    ]);\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n-}\n-\n-    \n-\n-/**\n- * Display the created CV.\n- *\n- * @param int $id\n- * @return \\Illuminate\\View\\View\n- */\n-public function viewCV($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_after_creation', compact('personalInfo'));\n-}\n-\n-\n-public function dashboard()\n-{\n-    $cvs = CreatorResume::with('personalInfo')->get();\n-    return view('dashboard', compact('cvs'));\n-}\n-public function userdashboard()\n-{\n-    $user = session('user');\n-\n-    if (is_array($user)) {\n-        $user = (object) $user; // Ensure $user is an object\n-    }\n-\n-    if (!isset($user->name)) {\n-        $user->firstname = 'Guest'; // Fallback if name is missing\n-    }\n-\n-    $userId = $user->id;\n-\n-    $cvData = CreatorResume::where('CreatorResume', $userId)->get();\n-\n-    return view('userdashboard', compact('user', 'cvData'));\n-}\n-\n-\n-public function updateStatus(Request $request, $id)\n-{\n-    $cv = CreatorResume::findOrFail($id); // Correct model\n-    $cv->Status = $request->input('status'); // Retrieve the selected status\n-    $cv->save();\n-\n-    return redirect()->back()->with('success', 'Status updated successfully.');\n-}\n-\n-public function edit($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('edit_cv', compact('personalInfo'));\n-}\n-\n-public function update(Request $request, $id)\n-{\n-    $personalInfo = PersonalInfo::findOrFail($id);\n-\n-    // Update personal info\n-    $personalInfo->update([\n-        'first_name' => $request->input('first_name'),\n-        'last_name' => $request->input('last_name'),\n-        'email' => $request->input('email'),\n-        'phone' => $request->input('phone'),\n-        'address' => $request->input('address'),\n-        'Objective' => $request->input('Objective', null),\n-        'Facebook' => $request->input('Facebook', null),\n-        'BirthDate' => $request->input('BirthDate', null),\n-        'Height' => $request->input('Height'),\n-        'weight' => $request->input('weight'),\n-        'Marital_Status' => $request->input('Marital_Status'),\n-    ]);\n-\n-    // Update skills\n-    Skill::where('personal_info_id', $id)->delete();\n-    if ($request->has('skills')) {\n-        foreach ($request->input('skills') as $skill) {\n-            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n-        }\n-    }\n-\n-    // Update work experiences\n-    WorkExperience::where('personal_info_id', $id)->delete();\n-    if ($request->has('job_title')) {\n-        foreach ($request->input('job_title') as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $request->input(\"company_name.$index\"),\n-                'location' => $request->input(\"location.$index\"),\n-                'start_date' => $request->input(\"start_date.$index\"),\n-                'end_date' => $request->input(\"end_date.$index\"),\n-                'responsibilities' => $request->input(\"responsibilities.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update education\n-    Education::where('personal_info_id', $id)->delete();\n-    if ($request->has('education_name')) {\n-        foreach ($request->input('education_name') as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $id,\n-                'degree' => $request->input(\"education_degree.$index\"),\n-                'school_name' => $request->input(\"education_school_name.$index\"),\n-                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n-                'start_date' => $request->input(\"education_start_date.$index\"),\n-                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update certificates\n-    Certificate::where('personal_info_id', $id)->delete();\n-    if ($request->has('certificate_names')) {\n-        foreach ($request->input('certificate_names') as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n-                'issue_date' => $request->input(\"issue_dates.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $id])\n-        ->with('success', 'CV updated successfully.');\n-}\n-\n-\n-public function assignLink(Request $request, $id)\n-{\n-    $request->validate([\n-        'application_link' => 'required|url',\n-        'link_type' => 'required|string',\n-        'scheduled_date' => 'required|date',\n-    ]);\n-\n-    // Convert scheduled date to 24-hour format if necessary\n-    $cv = CreatorResume::findOrFail($id);\n-    $cv->update([\n-        'application_link' => $request->application_link,\n-        'link_type' => $request->link_type,\n-        'scheduled_date' => \\Carbon\\Carbon::parse($request->scheduled_date)->format('Y-m-d h:i:s A'), // Store in 24-hour format\n-    ]);\n-\n-    return redirect()->back()->with('success', 'Link assigned successfully.');\n-}\n-\n-\n-//for usersystems\n-\n-public function edituser($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('user_edit_cv', compact('personalInfo'));\n-}\n-\n-public function updateuser(Request $request, $id)\n-{\n-    $personalInfo = PersonalInfo::findOrFail($id);\n-\n-    // Update personal info\n-    $personalInfo->update([\n-        'first_name' => $request->input('first_name'),\n-        'last_name' => $request->input('last_name'),\n-        'email' => $request->input('email'),\n-        'phone' => $request->input('phone'),\n-        'address' => $request->input('address'),\n-        'Objective' => $request->input('Objective', null),\n-        'Facebook' => $request->input('Facebook', null),\n-        'BirthDate' => $request->input('BirthDate', null),\n-        'Height' => $request->input('Height'),\n-        'weight' => $request->input('weight'),\n-        'Marital_Status' => $request->input('Marital_Status'),\n-    ]);\n-\n-    // Update skills\n-    Skill::where('personal_info_id', $id)->delete();\n-    if ($request->has('skills')) {\n-        foreach ($request->input('skills') as $skill) {\n-            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n-        }\n-    }\n-\n-    // Update work experiences\n-    WorkExperience::where('personal_info_id', $id)->delete();\n-    if ($request->has('job_title')) {\n-        foreach ($request->input('job_title') as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $request->input(\"company_name.$index\"),\n-                'location' => $request->input(\"location.$index\"),\n-                'start_date' => $request->input(\"start_date.$index\"),\n-                'end_date' => $request->input(\"end_date.$index\"),\n-                'responsibilities' => $request->input(\"responsibilities.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update education\n-    Education::where('personal_info_id', $id)->delete();\n-    if ($request->has('education_name')) {\n-        foreach ($request->input('education_name') as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $id,\n-                'degree' => $request->input(\"education_degree.$index\"),\n-                'school_name' => $request->input(\"education_school_name.$index\"),\n-                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n-                'start_date' => $request->input(\"education_start_date.$index\"),\n-                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update certificates\n-    Certificate::where('personal_info_id', $id)->delete();\n-    if ($request->has('certificate_names')) {\n-        foreach ($request->input('certificate_names') as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n-                'issue_date' => $request->input(\"issue_dates.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $id])\n-        ->with('success', 'CV updated successfully.');\n-}\n-\n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-use App\\Models\\CreatorResume;\n-use Illuminate\\Support\\Facades\\Session;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-{\n-    // Validate incoming data\n-    $validatedData = $request->validate([\n-        // Validation rules\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n-    ]);\n-\n-    // Handle the image upload\n-    if ($request->hasFile('image')) {\n-        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        $request->image->move(public_path('uploads/images'), $imageName);\n-        $validatedData['image'] = 'uploads/images/' . $imageName;\n-    } else {\n-        $validatedData['image'] = null;\n-    }\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'image' => $validatedData['image'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'] ?? null,\n-        'weight' => $validatedData['weight'] ?? null,\n-        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-    ]);\n-\n-    // Save skills\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-\n-    // Save work experiences\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save educations\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save certificates\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n-    CreatorResume::create([\n-        'personal_info_id' => $personalInfo->id,\n-        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n-        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n-        'Status' => 'Created', // Example status\n-    ]);\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n-}\n-\n-    \n-\n-/**\n- * Display the created CV.\n- *\n- * @param int $id\n- * @return \\Illuminate\\View\\View\n- */\n-public function viewCV($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_after_creation', compact('personalInfo'));\n-}\n-\n-\n-public function dashboard()\n-{\n-    $cvs = CreatorResume::with('personalInfo')->get();\n-    return view('dashboard', compact('cvs'));\n-}\n-public function userdashboard()\n-{\n-    $user = session('user');\n-\n-    if (is_array($user)) {\n-        $user = (object) $user; // Ensure $user is an object\n-    }\n-\n-    if (!isset($user->name)) {\n-        $user->firstname = 'Guest'; // Fallback if name is missing\n-    }\n-\n-    $userId = $user->id;\n-\n-    $cvData = CreatorResume::where('CreatorResume', $userId)->get();\n-\n-    return view('userdashboard', compact('user', 'cvData'));\n-}\n-\n-\n-public function updateStatus(Request $request, $id)\n-{\n-    $cv = CreatorResume::findOrFail($id); // Correct model\n-    $cv->Status = $request->input('status'); // Retrieve the selected status\n-    $cv->save();\n-\n-    return redirect()->back()->with('success', 'Status updated successfully.');\n-}\n-\n-public function edit($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('edit_cv', compact('personalInfo'));\n-}\n-\n-public function update(Request $request, $id)\n-{\n-    $personalInfo = PersonalInfo::findOrFail($id);\n-\n-    // Update personal info\n-    $personalInfo->update([\n-        'first_name' => $request->input('first_name'),\n-        'last_name' => $request->input('last_name'),\n-        'email' => $request->input('email'),\n-        'phone' => $request->input('phone'),\n-        'address' => $request->input('address'),\n-        'Objective' => $request->input('Objective', null),\n-        'Facebook' => $request->input('Facebook', null),\n-        'BirthDate' => $request->input('BirthDate', null),\n-        'Height' => $request->input('Height'),\n-        'weight' => $request->input('weight'),\n-        'Marital_Status' => $request->input('Marital_Status'),\n-    ]);\n-\n-    // Update skills\n-    Skill::where('personal_info_id', $id)->delete();\n-    if ($request->has('skills')) {\n-        foreach ($request->input('skills') as $skill) {\n-            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n-        }\n-    }\n-\n-    // Update work experiences\n-    WorkExperience::where('personal_info_id', $id)->delete();\n-    if ($request->has('job_title')) {\n-        foreach ($request->input('job_title') as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $request->input(\"company_name.$index\"),\n-                'location' => $request->input(\"location.$index\"),\n-                'start_date' => $request->input(\"start_date.$index\"),\n-                'end_date' => $request->input(\"end_date.$index\"),\n-                'responsibilities' => $request->input(\"responsibilities.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update education\n-    Education::where('personal_info_id', $id)->delete();\n-    if ($request->has('education_name')) {\n-        foreach ($request->input('education_name') as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $id,\n-                'degree' => $request->input(\"education_degree.$index\"),\n-                'school_name' => $request->input(\"education_school_name.$index\"),\n-                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n-                'start_date' => $request->input(\"education_start_date.$index\"),\n-                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update certificates\n-    Certificate::where('personal_info_id', $id)->delete();\n-    if ($request->has('certificate_names')) {\n-        foreach ($request->input('certificate_names') as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n-                'issue_date' => $request->input(\"issue_dates.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $id])\n-        ->with('success', 'CV updated successfully.');\n-}\n-\n-\n-public function assignLink(Request $request, $id)\n-{\n-    $request->validate([\n-        'application_link' => 'required|url',\n-        'link_type' => 'required|string',\n-        'scheduled_date' => 'required|date',\n-    ]);\n-\n-    // Convert scheduled date to 24-hour format if necessary\n-    $cv = CreatorResume::findOrFail($id);\n-    $cv->update([\n-        'application_link' => $request->application_link,\n-        'link_type' => $request->link_type,\n-        'scheduled_date' => \\Carbon\\Carbon::parse($request->scheduled_date)->format('Y-m-d h:i:s A'), // Store in 24-hour format\n-    ]);\n-\n-    return redirect()->back()->with('success', 'Link assigned successfully.');\n-}\n-\n-\n-//for usersystems\n-\n-public function edituser($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('user_edit_cv', compact('personalInfo'));\n-}\n-\n-public function updateuser(Request $request, $id)\n-{\n-    $personalInfo = PersonalInfo::findOrFail($id);\n-\n-    // Update personal info\n-    $personalInfo->update([\n-        'first_name' => $request->input('first_name'),\n-        'last_name' => $request->input('last_name'),\n-        'email' => $request->input('email'),\n-        'phone' => $request->input('phone'),\n-        'address' => $request->input('address'),\n-        'Objective' => $request->input('Objective', null),\n-        'Facebook' => $request->input('Facebook', null),\n-        'BirthDate' => $request->input('BirthDate', null),\n-        'Height' => $request->input('Height'),\n-        'weight' => $request->input('weight'),\n-        'Marital_Status' => $request->input('Marital_Status'),\n-    ]);\n-\n-    // Update skills\n-    Skill::where('personal_info_id', $id)->delete();\n-    if ($request->has('skills')) {\n-        foreach ($request->input('skills') as $skill) {\n-            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n-        }\n-    }\n-\n-    // Update work experiences\n-    WorkExperience::where('personal_info_id', $id)->delete();\n-    if ($request->has('job_title')) {\n-        foreach ($request->input('job_title') as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $request->input(\"company_name.$index\"),\n-                'location' => $request->input(\"location.$index\"),\n-                'start_date' => $request->input(\"start_date.$index\"),\n-                'end_date' => $request->input(\"end_date.$index\"),\n-                'responsibilities' => $request->input(\"responsibilities.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update education\n-    Education::where('personal_info_id', $id)->delete();\n-    if ($request->has('education_name')) {\n-        foreach ($request->input('education_name') as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $id,\n-                'degree' => $request->input(\"education_degree.$index\"),\n-                'school_name' => $request->input(\"education_school_name.$index\"),\n-                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n-                'start_date' => $request->input(\"education_start_date.$index\"),\n-                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update certificates\n-    Certificate::where('personal_info_id', $id)->delete();\n-    if ($request->has('certificate_names')) {\n-        foreach ($request->input('certificate_names') as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n-                'issue_date' => $request->input(\"issue_dates.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $id])\n-        ->with('success', 'CV updated successfully.');\n-}\n-\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733314585921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -271,21 +271,21 @@\n \n     // Update education\n     Education::where('personal_info_id', $id)->delete();\n     if ($request->has('education_name')) {\n-        Education::where('personal_info_id', $id)->delete(); // Clear existing records\n-        foreach ($request->input('education_name') as $index => $educationName) {\n-            if (!empty($educationName)) {\n-                Education::create([\n-                    'personal_info_id' => $id,\n-                    'degree' => $request->input(\"education_degree.$index\"),\n-                    'school_name' => $educationName,\n-                    'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n-                    'start_date' => $request->input(\"education_start_date.$index\"),\n-                    'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-                ]);\n-            }\n+    Education::where('personal_info_id', $id)->delete(); // Clear existing records\n+    foreach ($request->input('education_name') as $index => $educationName) {\n+        if (!empty($educationName)) {\n+            Education::create([\n+                'personal_info_id' => $id,\n+                'degree' => $request->input(\"education_degree.$index\"),\n+                'school_name' => $educationName,\n+                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                'start_date' => $request->input(\"education_start_date.$index\"),\n+                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+            ]);\n         }\n+    }\n \n     // Update certificates\n     Certificate::where('personal_info_id', $id)->delete();\n     if ($request->has('certificate_names')) {\n"
                },
                {
                    "date": 1733314593443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -271,15 +271,13 @@\n \n     // Update education\n     Education::where('personal_info_id', $id)->delete();\n     if ($request->has('education_name')) {\n-    Education::where('personal_info_id', $id)->delete(); // Clear existing records\n-    foreach ($request->input('education_name') as $index => $educationName) {\n-        if (!empty($educationName)) {\n+        foreach ($request->input('education_name') as $index => $educationName) {\n             Education::create([\n                 'personal_info_id' => $id,\n                 'degree' => $request->input(\"education_degree.$index\"),\n-                'school_name' => $educationName,\n+                'school_name' => $request->input(\"education_school_name.$index\"),\n                 'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n                 'start_date' => $request->input(\"education_start_date.$index\"),\n                 'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n             ]);\n"
                },
                {
                    "date": 1733314647838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,412 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+use App\\Models\\CreatorResume;\n+use Illuminate\\Support\\Facades\\Session;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+{\n+    // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Validation rules\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n+    // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null;\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+    // Save skills\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+\n+    // Save work experiences\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save educations\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save certificates\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n+    CreatorResume::create([\n+        'personal_info_id' => $personalInfo->id,\n+        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n+        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n+        'Status' => 'Created', // Example status\n+    ]);\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+}\n+\n+    \n+\n+/**\n+ * Display the created CV.\n+ *\n+ * @param int $id\n+ * @return \\Illuminate\\View\\View\n+ */\n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_after_creation', compact('personalInfo'));\n+}\n+\n+\n+public function dashboard()\n+{\n+    $cvs = CreatorResume::with('personalInfo')->get();\n+    return view('dashboard', compact('cvs'));\n+}\n+public function userdashboard()\n+{\n+    $user = session('user');\n+\n+    if (is_array($user)) {\n+        $user = (object) $user; // Ensure $user is an object\n+    }\n+\n+    if (!isset($user->name)) {\n+        $user->firstname = 'Guest'; // Fallback if name is missing\n+    }\n+\n+    $userId = $user->id;\n+\n+    $cvData = CreatorResume::where('CreatorResume', $userId)->get();\n+\n+    return view('userdashboard', compact('user', 'cvData'));\n+}\n+\n+\n+public function updateStatus(Request $request, $id)\n+{\n+    $cv = CreatorResume::findOrFail($id); // Correct model\n+    $cv->Status = $request->input('status'); // Retrieve the selected status\n+    $cv->save();\n+\n+    return redirect()->back()->with('success', 'Status updated successfully.');\n+}\n+\n+public function edit($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('edit_cv', compact('personalInfo'));\n+}\n+\n+public function update(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $request->input('first_name'),\n+        'last_name' => $request->input('last_name'),\n+        'email' => $request->input('email'),\n+        'phone' => $request->input('phone'),\n+        'address' => $request->input('address'),\n+        'Objective' => $request->input('Objective', null),\n+        'Facebook' => $request->input('Facebook', null),\n+        'BirthDate' => $request->input('BirthDate', null),\n+        'Height' => $request->input('Height'),\n+        'weight' => $request->input('weight'),\n+        'Marital_Status' => $request->input('Marital_Status'),\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if ($request->has('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if ($request->has('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update education\n+    Education::where('personal_info_id', $id)->delete();\n+   if ($request->has('education_name')) {\n+    Education::where('personal_info_id', $id)->delete(); // Clear existing records\n+    foreach ($request->input('education_name') as $index => $educationName) {\n+        if (!empty($educationName)) {\n+            Education::create([\n+                'personal_info_id' => $id,\n+                'degree' => $request->input(\"education_degree.$index\"),\n+                'school_name' => $educationName,\n+                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                'start_date' => $request->input(\"education_start_date.$index\"),\n+                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if ($request->has('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n+\n+public function assignLink(Request $request, $id)\n+{\n+    $request->validate([\n+        'application_link' => 'required|url',\n+        'link_type' => 'required|string',\n+        'scheduled_date' => 'required|date',\n+    ]);\n+\n+    // Convert scheduled date to 24-hour format if necessary\n+    $cv = CreatorResume::findOrFail($id);\n+    $cv->update([\n+        'application_link' => $request->application_link,\n+        'link_type' => $request->link_type,\n+        'scheduled_date' => \\Carbon\\Carbon::parse($request->scheduled_date)->format('Y-m-d h:i:s A'), // Store in 24-hour format\n+    ]);\n+\n+    return redirect()->back()->with('success', 'Link assigned successfully.');\n+}\n+\n+\n+//for usersystems\n+\n+public function edituser($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('user_edit_cv', compact('personalInfo'));\n+}\n+\n+public function updateuser(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $request->input('first_name'),\n+        'last_name' => $request->input('last_name'),\n+        'email' => $request->input('email'),\n+        'phone' => $request->input('phone'),\n+        'address' => $request->input('address'),\n+        'Objective' => $request->input('Objective', null),\n+        'Facebook' => $request->input('Facebook', null),\n+        'BirthDate' => $request->input('BirthDate', null),\n+        'Height' => $request->input('Height'),\n+        'weight' => $request->input('weight'),\n+        'Marital_Status' => $request->input('Marital_Status'),\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if ($request->has('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if ($request->has('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update education\n+    Education::where('personal_info_id', $id)->delete();\n+    if ($request->has('education_name')) {\n+        foreach ($request->input('education_name') as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $id,\n+                'degree' => $request->input(\"education_degree.$index\"),\n+                'school_name' => $request->input(\"education_school_name.$index\"),\n+                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                'start_date' => $request->input(\"education_start_date.$index\"),\n+                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if ($request->has('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733314658260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -269,129 +269,22 @@\n         }\n     }\n \n     // Update education\n-    Education::where('personal_info_id', $id)->delete();\n-   if ($request->has('education_name')) {\n-    Education::where('personal_info_id', $id)->delete(); // Clear existing records\n-    foreach ($request->input('education_name') as $index => $educationName) {\n-        if (!empty($educationName)) {\n-            Education::create([\n-                'personal_info_id' => $id,\n-                'degree' => $request->input(\"education_degree.$index\"),\n-                'school_name' => $educationName,\n-                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n-                'start_date' => $request->input(\"education_start_date.$index\"),\n-                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update certificates\n-    Certificate::where('personal_info_id', $id)->delete();\n-    if ($request->has('certificate_names')) {\n-        foreach ($request->input('certificate_names') as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n-                'issue_date' => $request->input(\"issue_dates.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $id])\n-        ->with('success', 'CV updated successfully.');\n-}\n-\n-\n-public function assignLink(Request $request, $id)\n-{\n-    $request->validate([\n-        'application_link' => 'required|url',\n-        'link_type' => 'required|string',\n-        'scheduled_date' => 'required|date',\n-    ]);\n-\n-    // Convert scheduled date to 24-hour format if necessary\n-    $cv = CreatorResume::findOrFail($id);\n-    $cv->update([\n-        'application_link' => $request->application_link,\n-        'link_type' => $request->link_type,\n-        'scheduled_date' => \\Carbon\\Carbon::parse($request->scheduled_date)->format('Y-m-d h:i:s A'), // Store in 24-hour format\n-    ]);\n-\n-    return redirect()->back()->with('success', 'Link assigned successfully.');\n-}\n-\n-\n-//for usersystems\n-\n-public function edituser($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('user_edit_cv', compact('personalInfo'));\n-}\n-\n-public function updateuser(Request $request, $id)\n-{\n-    $personalInfo = PersonalInfo::findOrFail($id);\n-\n-    // Update personal info\n-    $personalInfo->update([\n-        'first_name' => $request->input('first_name'),\n-        'last_name' => $request->input('last_name'),\n-        'email' => $request->input('email'),\n-        'phone' => $request->input('phone'),\n-        'address' => $request->input('address'),\n-        'Objective' => $request->input('Objective', null),\n-        'Facebook' => $request->input('Facebook', null),\n-        'BirthDate' => $request->input('BirthDate', null),\n-        'Height' => $request->input('Height'),\n-        'weight' => $request->input('weight'),\n-        'Marital_Status' => $request->input('Marital_Status'),\n-    ]);\n-\n-    // Update skills\n-    Skill::where('personal_info_id', $id)->delete();\n-    if ($request->has('skills')) {\n-        foreach ($request->input('skills') as $skill) {\n-            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n-        }\n-    }\n-\n-    // Update work experiences\n-    WorkExperience::where('personal_info_id', $id)->delete();\n-    if ($request->has('job_title')) {\n-        foreach ($request->input('job_title') as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $request->input(\"company_name.$index\"),\n-                'location' => $request->input(\"location.$index\"),\n-                'start_date' => $request->input(\"start_date.$index\"),\n-                'end_date' => $request->input(\"end_date.$index\"),\n-                'responsibilities' => $request->input(\"responsibilities.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update education\n-    Education::where('personal_info_id', $id)->delete();\n     if ($request->has('education_name')) {\n+        Education::where('personal_info_id', $id)->delete(); // Clear existing records\n         foreach ($request->input('education_name') as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $id,\n-                'degree' => $request->input(\"education_degree.$index\"),\n-                'school_name' => $request->input(\"education_school_name.$index\"),\n-                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n-                'start_date' => $request->input(\"education_start_date.$index\"),\n-                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-            ]);\n+            if (!empty($educationName)) {\n+                Education::create([\n+                    'personal_info_id' => $id,\n+                    'degree' => $request->input(\"education_degree.$index\"),\n+                    'school_name' => $educationName,\n+                    'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                    'start_date' => $request->input(\"education_start_date.$index\"),\n+                    'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+                ]);\n+            }\n         }\n-    }\n \n     // Update certificates\n     Certificate::where('personal_info_id', $id)->delete();\n     if ($request->has('certificate_names')) {\n@@ -408,313 +301,9 @@\n     return redirect()->route('view_cv_after_creation', ['id' => $id])\n         ->with('success', 'CV updated successfully.');\n }\n \n-}\n-<?php\n \n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-use App\\Models\\CreatorResume;\n-use Illuminate\\Support\\Facades\\Session;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-{\n-    // Validate incoming data\n-    $validatedData = $request->validate([\n-        // Validation rules\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n-    ]);\n-\n-    // Handle the image upload\n-    if ($request->hasFile('image')) {\n-        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        $request->image->move(public_path('uploads/images'), $imageName);\n-        $validatedData['image'] = 'uploads/images/' . $imageName;\n-    } else {\n-        $validatedData['image'] = null;\n-    }\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'image' => $validatedData['image'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'] ?? null,\n-        'weight' => $validatedData['weight'] ?? null,\n-        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-    ]);\n-\n-    // Save skills\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-\n-    // Save work experiences\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save educations\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save certificates\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n-    CreatorResume::create([\n-        'personal_info_id' => $personalInfo->id,\n-        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n-        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n-        'Status' => 'Created', // Example status\n-    ]);\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n-}\n-\n-    \n-\n-/**\n- * Display the created CV.\n- *\n- * @param int $id\n- * @return \\Illuminate\\View\\View\n- */\n-public function viewCV($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_after_creation', compact('personalInfo'));\n-}\n-\n-\n-public function dashboard()\n-{\n-    $cvs = CreatorResume::with('personalInfo')->get();\n-    return view('dashboard', compact('cvs'));\n-}\n-public function userdashboard()\n-{\n-    $user = session('user');\n-\n-    if (is_array($user)) {\n-        $user = (object) $user; // Ensure $user is an object\n-    }\n-\n-    if (!isset($user->name)) {\n-        $user->firstname = 'Guest'; // Fallback if name is missing\n-    }\n-\n-    $userId = $user->id;\n-\n-    $cvData = CreatorResume::where('CreatorResume', $userId)->get();\n-\n-    return view('userdashboard', compact('user', 'cvData'));\n-}\n-\n-\n-public function updateStatus(Request $request, $id)\n-{\n-    $cv = CreatorResume::findOrFail($id); // Correct model\n-    $cv->Status = $request->input('status'); // Retrieve the selected status\n-    $cv->save();\n-\n-    return redirect()->back()->with('success', 'Status updated successfully.');\n-}\n-\n-public function edit($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('edit_cv', compact('personalInfo'));\n-}\n-\n-public function update(Request $request, $id)\n-{\n-    $personalInfo = PersonalInfo::findOrFail($id);\n-\n-    // Update personal info\n-    $personalInfo->update([\n-        'first_name' => $request->input('first_name'),\n-        'last_name' => $request->input('last_name'),\n-        'email' => $request->input('email'),\n-        'phone' => $request->input('phone'),\n-        'address' => $request->input('address'),\n-        'Objective' => $request->input('Objective', null),\n-        'Facebook' => $request->input('Facebook', null),\n-        'BirthDate' => $request->input('BirthDate', null),\n-        'Height' => $request->input('Height'),\n-        'weight' => $request->input('weight'),\n-        'Marital_Status' => $request->input('Marital_Status'),\n-    ]);\n-\n-    // Update skills\n-    Skill::where('personal_info_id', $id)->delete();\n-    if ($request->has('skills')) {\n-        foreach ($request->input('skills') as $skill) {\n-            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n-        }\n-    }\n-\n-    // Update work experiences\n-    WorkExperience::where('personal_info_id', $id)->delete();\n-    if ($request->has('job_title')) {\n-        foreach ($request->input('job_title') as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $request->input(\"company_name.$index\"),\n-                'location' => $request->input(\"location.$index\"),\n-                'start_date' => $request->input(\"start_date.$index\"),\n-                'end_date' => $request->input(\"end_date.$index\"),\n-                'responsibilities' => $request->input(\"responsibilities.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update education\n-    Education::where('personal_info_id', $id)->delete();\n-    if ($request->has('education_name')) {\n-        foreach ($request->input('education_name') as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $id,\n-                'degree' => $request->input(\"education_degree.$index\"),\n-                'school_name' => $request->input(\"education_school_name.$index\"),\n-                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n-                'start_date' => $request->input(\"education_start_date.$index\"),\n-                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update certificates\n-    Certificate::where('personal_info_id', $id)->delete();\n-    if ($request->has('certificate_names')) {\n-        foreach ($request->input('certificate_names') as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n-                'issue_date' => $request->input(\"issue_dates.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $id])\n-        ->with('success', 'CV updated successfully.');\n-}\n-\n-\n public function assignLink(Request $request, $id)\n {\n     $request->validate([\n         'application_link' => 'required|url',\n"
                },
                {
                    "date": 1733314670936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -269,22 +269,22 @@\n         }\n     }\n \n     // Update education\n-    if ($request->has('education_name')) {\n-        Education::where('personal_info_id', $id)->delete(); // Clear existing records\n-        foreach ($request->input('education_name') as $index => $educationName) {\n-            if (!empty($educationName)) {\n-                Education::create([\n-                    'personal_info_id' => $id,\n-                    'degree' => $request->input(\"education_degree.$index\"),\n-                    'school_name' => $educationName,\n-                    'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n-                    'start_date' => $request->input(\"education_start_date.$index\"),\n-                    'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-                ]);\n-            }\n+  if ($request->has('education_name')) {\n+    Education::where('personal_info_id', $id)->delete(); // Clear existing records\n+    foreach ($request->input('education_name') as $index => $educationName) {\n+        if (!empty($educationName)) {\n+            Education::create([\n+                'personal_info_id' => $id,\n+                'degree' => $request->input(\"education_degree.$index\"),\n+                'school_name' => $educationName,\n+                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                'start_date' => $request->input(\"education_start_date.$index\"),\n+                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+            ]);\n         }\n+    }\n \n     // Update certificates\n     Certificate::where('personal_info_id', $id)->delete();\n     if ($request->has('certificate_names')) {\n"
                },
                {
                    "date": 1733314886960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -269,16 +269,15 @@\n         }\n     }\n \n     // Update education\n-  if ($request->has('education_name')) {\n-    Education::where('personal_info_id', $id)->delete(); // Clear existing records\n-    foreach ($request->input('education_name') as $index => $educationName) {\n-        if (!empty($educationName)) {\n+    Education::where('personal_info_id', $id)->delete();\n+    if ($request->has('education_name')) {\n+        foreach ($request->input('education_name') as $index => $educationName) {\n             Education::create([\n                 'personal_info_id' => $id,\n                 'degree' => $request->input(\"education_degree.$index\"),\n-                'school_name' => $educationName,\n+                'school_name' => $request->input(\"education_school_name.$index\"),\n                 'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n                 'start_date' => $request->input(\"education_start_date.$index\"),\n                 'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n             ]);\n@@ -329,9 +328,9 @@\n {\n     $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n         ->findOrFail($id);\n \n-    return view('user_edit_cv', compact('personalInfo'));\n+    return view('edit_cv', compact('personalInfo'));\n }\n \n public function updateuser(Request $request, $id)\n {\n"
                },
                {
                    "date": 1733315184914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -268,20 +268,26 @@\n             ]);\n         }\n     }\n \n-    // Update education\n-    Education::where('personal_info_id', $id)->delete();\n-    if ($request->has('education_name')) {\n+     // Update education\n+     if ($request->has('education_name') && is_array($request->input('education_name'))) {\n+        // Remove old education records\n+        Education::where('personal_info_id', $id)->delete();\n+\n+        // Insert new education records\n         foreach ($request->input('education_name') as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $id,\n-                'degree' => $request->input(\"education_degree.$index\"),\n-                'school_name' => $request->input(\"education_school_name.$index\"),\n-                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n-                'start_date' => $request->input(\"education_start_date.$index\"),\n-                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-            ]);\n+            if (!empty($educationName)) { // Skip empty entries\n+                Education::create([\n+                    'personal_info_id' => $id,\n+                    'name' => $educationName,\n+                    'degree' => $request->input(\"education_degree.$index\"),\n+                    'school_name' => $request->input(\"education_school_name.$index\"),\n+                    'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                    'start_date' => $request->input(\"education_start_date.$index\"),\n+                    'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+                ]);\n+            }\n         }\n     }\n \n     // Update certificates\n"
                },
                {
                    "date": 1733315288698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,416 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+use App\\Models\\CreatorResume;\n+use Illuminate\\Support\\Facades\\Session;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+{\n+    // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Validation rules\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n+    // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null;\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+    // Save skills\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+\n+    // Save work experiences\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save educations\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save certificates\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n+    CreatorResume::create([\n+        'personal_info_id' => $personalInfo->id,\n+        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n+        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n+        'Status' => 'Created', // Example status\n+    ]);\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+}\n+\n+    \n+\n+/**\n+ * Display the created CV.\n+ *\n+ * @param int $id\n+ * @return \\Illuminate\\View\\View\n+ */\n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_after_creation', compact('personalInfo'));\n+}\n+\n+\n+public function dashboard()\n+{\n+    $cvs = CreatorResume::with('personalInfo')->get();\n+    return view('dashboard', compact('cvs'));\n+}\n+public function userdashboard()\n+{\n+    $user = session('user');\n+\n+    if (is_array($user)) {\n+        $user = (object) $user; // Ensure $user is an object\n+    }\n+\n+    if (!isset($user->name)) {\n+        $user->firstname = 'Guest'; // Fallback if name is missing\n+    }\n+\n+    $userId = $user->id;\n+\n+    $cvData = CreatorResume::where('CreatorResume', $userId)->get();\n+\n+    return view('userdashboard', compact('user', 'cvData'));\n+}\n+\n+\n+public function updateStatus(Request $request, $id)\n+{\n+    $cv = CreatorResume::findOrFail($id); // Correct model\n+    $cv->Status = $request->input('status'); // Retrieve the selected status\n+    $cv->save();\n+\n+    return redirect()->back()->with('success', 'Status updated successfully.');\n+}\n+\n+public function edit($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('edit_cv', compact('personalInfo'));\n+}\n+\n+public function update(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $request->input('first_name'),\n+        'last_name' => $request->input('last_name'),\n+        'email' => $request->input('email'),\n+        'phone' => $request->input('phone'),\n+        'address' => $request->input('address'),\n+        'Objective' => $request->input('Objective', null),\n+        'Facebook' => $request->input('Facebook', null),\n+        'BirthDate' => $request->input('BirthDate', null),\n+        'Height' => $request->input('Height'),\n+        'weight' => $request->input('weight'),\n+        'Marital_Status' => $request->input('Marital_Status'),\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if ($request->has('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if ($request->has('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n+            ]);\n+        }\n+    }\n+\n+     // Update education\n+     if ($request->has('education_name') && is_array($request->input('education_name'))) {\n+        // Remove old education records\n+        Education::where('personal_info_id', $id)->delete();\n+\n+        // Insert new education records\n+        foreach ($request->input('education_name') as $index => $educationName) {\n+            if (!empty($educationName)) { // Skip empty entries\n+                Education::create([\n+                    'personal_info_id' => $id,\n+                    'name' => $educationName,\n+                    'degree' => $request->input(\"education_degree.$index\"),\n+                    'school_name' => $request->input(\"education_school_name.$index\"),\n+                    'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                    'start_date' => $request->input(\"education_start_date.$index\"),\n+                    'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+                ]);\n+            }\n+        }\n+    }\n+\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if ($request->has('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n+\n+public function assignLink(Request $request, $id)\n+{\n+    $request->validate([\n+        'application_link' => 'required|url',\n+        'link_type' => 'required|string',\n+        'scheduled_date' => 'required|date',\n+    ]);\n+\n+    // Convert scheduled date to 24-hour format if necessary\n+    $cv = CreatorResume::findOrFail($id);\n+    $cv->update([\n+        'application_link' => $request->application_link,\n+        'link_type' => $request->link_type,\n+        'scheduled_date' => \\Carbon\\Carbon::parse($request->scheduled_date)->format('Y-m-d h:i:s A'), // Store in 24-hour format\n+    ]);\n+\n+    return redirect()->back()->with('success', 'Link assigned successfully.');\n+}\n+\n+\n+//for usersystems\n+\n+public function edituser($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('edit_cv', compact('personalInfo'));\n+}\n+\n+public function updateuser(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $request->input('first_name'),\n+        'last_name' => $request->input('last_name'),\n+        'email' => $request->input('email'),\n+        'phone' => $request->input('phone'),\n+        'address' => $request->input('address'),\n+        'Objective' => $request->input('Objective', null),\n+        'Facebook' => $request->input('Facebook', null),\n+        'BirthDate' => $request->input('BirthDate', null),\n+        'Height' => $request->input('Height'),\n+        'weight' => $request->input('weight'),\n+        'Marital_Status' => $request->input('Marital_Status'),\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if ($request->has('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if ($request->has('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update education\n+    Education::where('personal_info_id', $id)->delete();\n+    if ($request->has('education_name')) {\n+        foreach ($request->input('education_name') as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $id,\n+                'degree' => $request->input(\"education_degree.$index\"),\n+                'school_name' => $request->input(\"education_school_name.$index\"),\n+                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                'start_date' => $request->input(\"education_start_date.$index\"),\n+                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if ($request->has('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733315345688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -268,135 +268,21 @@\n             ]);\n         }\n     }\n \n-     // Update education\n-     if ($request->has('education_name') && is_array($request->input('education_name'))) {\n-        // Remove old education records\n-        Education::where('personal_info_id', $id)->delete();\n-\n-        // Insert new education records\n-        foreach ($request->input('education_name') as $index => $educationName) {\n-            if (!empty($educationName)) { // Skip empty entries\n-                Education::create([\n-                    'personal_info_id' => $id,\n-                    'name' => $educationName,\n-                    'degree' => $request->input(\"education_degree.$index\"),\n-                    'school_name' => $request->input(\"education_school_name.$index\"),\n-                    'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n-                    'start_date' => $request->input(\"education_start_date.$index\"),\n-                    'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-                ]);\n-            }\n-        }\n-    }\n-\n-    // Update certificates\n-    Certificate::where('personal_info_id', $id)->delete();\n-    if ($request->has('certificate_names')) {\n-        foreach ($request->input('certificate_names') as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n-                'issue_date' => $request->input(\"issue_dates.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $id])\n-        ->with('success', 'CV updated successfully.');\n-}\n-\n-\n-public function assignLink(Request $request, $id)\n-{\n-    $request->validate([\n-        'application_link' => 'required|url',\n-        'link_type' => 'required|string',\n-        'scheduled_date' => 'required|date',\n-    ]);\n-\n-    // Convert scheduled date to 24-hour format if necessary\n-    $cv = CreatorResume::findOrFail($id);\n-    $cv->update([\n-        'application_link' => $request->application_link,\n-        'link_type' => $request->link_type,\n-        'scheduled_date' => \\Carbon\\Carbon::parse($request->scheduled_date)->format('Y-m-d h:i:s A'), // Store in 24-hour format\n-    ]);\n-\n-    return redirect()->back()->with('success', 'Link assigned successfully.');\n-}\n-\n-\n-//for usersystems\n-\n-public function edituser($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('edit_cv', compact('personalInfo'));\n-}\n-\n-public function updateuser(Request $request, $id)\n-{\n-    $personalInfo = PersonalInfo::findOrFail($id);\n-\n-    // Update personal info\n-    $personalInfo->update([\n-        'first_name' => $request->input('first_name'),\n-        'last_name' => $request->input('last_name'),\n-        'email' => $request->input('email'),\n-        'phone' => $request->input('phone'),\n-        'address' => $request->input('address'),\n-        'Objective' => $request->input('Objective', null),\n-        'Facebook' => $request->input('Facebook', null),\n-        'BirthDate' => $request->input('BirthDate', null),\n-        'Height' => $request->input('Height'),\n-        'weight' => $request->input('weight'),\n-        'Marital_Status' => $request->input('Marital_Status'),\n-    ]);\n-\n-    // Update skills\n-    Skill::where('personal_info_id', $id)->delete();\n-    if ($request->has('skills')) {\n-        foreach ($request->input('skills') as $skill) {\n-            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n-        }\n-    }\n-\n-    // Update work experiences\n-    WorkExperience::where('personal_info_id', $id)->delete();\n-    if ($request->has('job_title')) {\n-        foreach ($request->input('job_title') as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $request->input(\"company_name.$index\"),\n-                'location' => $request->input(\"location.$index\"),\n-                'start_date' => $request->input(\"start_date.$index\"),\n-                'end_date' => $request->input(\"end_date.$index\"),\n-                'responsibilities' => $request->input(\"responsibilities.$index\"),\n-            ]);\n-        }\n-    }\n-\n     // Update education\n     Education::where('personal_info_id', $id)->delete();\n-    if ($request->has('education_name')) {\n-        foreach ($request->input('education_name') as $index => $educationName) {\n+    if ($request->has('education_school_name')) {\n+        foreach ($request->input('education_school_name') as $index => $schoolName) {\n             Education::create([\n                 'personal_info_id' => $id,\n+                'school_name' => $schoolName,\n                 'degree' => $request->input(\"education_degree.$index\"),\n-                'school_name' => $request->input(\"education_school_name.$index\"),\n-                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n                 'start_date' => $request->input(\"education_start_date.$index\"),\n                 'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n             ]);\n         }\n     }\n-\n     // Update certificates\n     Certificate::where('personal_info_id', $id)->delete();\n     if ($request->has('certificate_names')) {\n         foreach ($request->input('certificate_names') as $index => $certificateName) {\n@@ -412,319 +298,9 @@\n     return redirect()->route('view_cv_after_creation', ['id' => $id])\n         ->with('success', 'CV updated successfully.');\n }\n \n-}\n-<?php\n \n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-use App\\Models\\CreatorResume;\n-use Illuminate\\Support\\Facades\\Session;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-{\n-    // Validate incoming data\n-    $validatedData = $request->validate([\n-        // Validation rules\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n-    ]);\n-\n-    // Handle the image upload\n-    if ($request->hasFile('image')) {\n-        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        $request->image->move(public_path('uploads/images'), $imageName);\n-        $validatedData['image'] = 'uploads/images/' . $imageName;\n-    } else {\n-        $validatedData['image'] = null;\n-    }\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'image' => $validatedData['image'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'] ?? null,\n-        'weight' => $validatedData['weight'] ?? null,\n-        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-    ]);\n-\n-    // Save skills\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-\n-    // Save work experiences\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save educations\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save certificates\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n-    CreatorResume::create([\n-        'personal_info_id' => $personalInfo->id,\n-        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n-        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n-        'Status' => 'Created', // Example status\n-    ]);\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n-}\n-\n-    \n-\n-/**\n- * Display the created CV.\n- *\n- * @param int $id\n- * @return \\Illuminate\\View\\View\n- */\n-public function viewCV($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_after_creation', compact('personalInfo'));\n-}\n-\n-\n-public function dashboard()\n-{\n-    $cvs = CreatorResume::with('personalInfo')->get();\n-    return view('dashboard', compact('cvs'));\n-}\n-public function userdashboard()\n-{\n-    $user = session('user');\n-\n-    if (is_array($user)) {\n-        $user = (object) $user; // Ensure $user is an object\n-    }\n-\n-    if (!isset($user->name)) {\n-        $user->firstname = 'Guest'; // Fallback if name is missing\n-    }\n-\n-    $userId = $user->id;\n-\n-    $cvData = CreatorResume::where('CreatorResume', $userId)->get();\n-\n-    return view('userdashboard', compact('user', 'cvData'));\n-}\n-\n-\n-public function updateStatus(Request $request, $id)\n-{\n-    $cv = CreatorResume::findOrFail($id); // Correct model\n-    $cv->Status = $request->input('status'); // Retrieve the selected status\n-    $cv->save();\n-\n-    return redirect()->back()->with('success', 'Status updated successfully.');\n-}\n-\n-public function edit($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('edit_cv', compact('personalInfo'));\n-}\n-\n-public function update(Request $request, $id)\n-{\n-    $personalInfo = PersonalInfo::findOrFail($id);\n-\n-    // Update personal info\n-    $personalInfo->update([\n-        'first_name' => $request->input('first_name'),\n-        'last_name' => $request->input('last_name'),\n-        'email' => $request->input('email'),\n-        'phone' => $request->input('phone'),\n-        'address' => $request->input('address'),\n-        'Objective' => $request->input('Objective', null),\n-        'Facebook' => $request->input('Facebook', null),\n-        'BirthDate' => $request->input('BirthDate', null),\n-        'Height' => $request->input('Height'),\n-        'weight' => $request->input('weight'),\n-        'Marital_Status' => $request->input('Marital_Status'),\n-    ]);\n-\n-    // Update skills\n-    Skill::where('personal_info_id', $id)->delete();\n-    if ($request->has('skills')) {\n-        foreach ($request->input('skills') as $skill) {\n-            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n-        }\n-    }\n-\n-    // Update work experiences\n-    WorkExperience::where('personal_info_id', $id)->delete();\n-    if ($request->has('job_title')) {\n-        foreach ($request->input('job_title') as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $request->input(\"company_name.$index\"),\n-                'location' => $request->input(\"location.$index\"),\n-                'start_date' => $request->input(\"start_date.$index\"),\n-                'end_date' => $request->input(\"end_date.$index\"),\n-                'responsibilities' => $request->input(\"responsibilities.$index\"),\n-            ]);\n-        }\n-    }\n-\n-     // Update education\n-     if ($request->has('education_name') && is_array($request->input('education_name'))) {\n-        // Remove old education records\n-        Education::where('personal_info_id', $id)->delete();\n-\n-        // Insert new education records\n-        foreach ($request->input('education_name') as $index => $educationName) {\n-            if (!empty($educationName)) { // Skip empty entries\n-                Education::create([\n-                    'personal_info_id' => $id,\n-                    'name' => $educationName,\n-                    'degree' => $request->input(\"education_degree.$index\"),\n-                    'school_name' => $request->input(\"education_school_name.$index\"),\n-                    'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n-                    'start_date' => $request->input(\"education_start_date.$index\"),\n-                    'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-                ]);\n-            }\n-        }\n-    }\n-\n-    // Update certificates\n-    Certificate::where('personal_info_id', $id)->delete();\n-    if ($request->has('certificate_names')) {\n-        foreach ($request->input('certificate_names') as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n-                'issue_date' => $request->input(\"issue_dates.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $id])\n-        ->with('success', 'CV updated successfully.');\n-}\n-\n-\n public function assignLink(Request $request, $id)\n {\n     $request->validate([\n         'application_link' => 'required|url',\n"
                },
                {
                    "date": 1733316820228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -326,9 +326,9 @@\n {\n     $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n         ->findOrFail($id);\n \n-    return view('edit_cv', compact('personalInfo'));\n+    return view('user_edit_cv', compact('personalInfo'));\n }\n \n public function updateuser(Request $request, $id)\n {\n"
                },
                {
                    "date": 1733316884979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -372,22 +372,21 @@\n             ]);\n         }\n     }\n \n-    // Update education\n-    Education::where('personal_info_id', $id)->delete();\n-    if ($request->has('education_name')) {\n-        foreach ($request->input('education_name') as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $id,\n-                'degree' => $request->input(\"education_degree.$index\"),\n-                'school_name' => $request->input(\"education_school_name.$index\"),\n-                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n-                'start_date' => $request->input(\"education_start_date.$index\"),\n-                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-            ]);\n-        }\n-    }\n+ // Update education\n+ Education::where('personal_info_id', $id)->delete();\n+ if ($request->has('education_school_name')) {\n+     foreach ($request->input('education_school_name') as $index => $schoolName) {\n+         Education::create([\n+             'personal_info_id' => $id,\n+             'school_name' => $schoolName,\n+             'degree' => $request->input(\"education_degree.$index\"),\n+             'start_date' => $request->input(\"education_start_date.$index\"),\n+             'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+         ]);\n+     }\n+ }\n \n     // Update certificates\n     Certificate::where('personal_info_id', $id)->delete();\n     if ($request->has('certificate_names')) {\n"
                },
                {
                    "date": 1733317107606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,13 @@\n     {\n         return view('create_cv'); // Ensure this matches your blade file's location\n     }\n \n+\n+    public function usercreates()\n+    {\n+        return view('create_cv_user'); // Ensure this matches your blade file's location\n+    }\n     /**\n      * Store the CV data submitted from the form.\n      *\n      * @param  \\Illuminate\\Http\\Request  $request\n"
                },
                {
                    "date": 1733318921163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,9 +172,152 @@\n     return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n }\n \n     \n+//for users create cv\n+public function store_cv_user(Request $request)\n+{\n+    // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Validation rules\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n \n+    // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null;\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+    // Save skills\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+\n+    // Save work experiences\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save educations\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save certificates\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n+    CreatorResume::create([\n+        'personal_info_id' => $personalInfo->id,\n+        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n+        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n+        'Status' => 'Created', // Example status\n+    ]);\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+}\n+\n+\n+\n+\n+//other-----------------------------------------------------\n+\n /**\n  * Display the created CV.\n  *\n  * @param int $id\n"
                },
                {
                    "date": 1733319007508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -308,9 +308,9 @@\n         'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n         'Status' => 'Created', // Example status\n     ]);\n \n-    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+    return redirect()->route('view_cv_user', ['id' => $personalInfo->id]);\n }\n \n \n \n"
                },
                {
                    "date": 1733319081909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -304,9 +304,9 @@\n     $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n     CreatorResume::create([\n         'personal_info_id' => $personalInfo->id,\n         'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n-        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n+        'Link' => route('view_cv_user', ['id' => $personalInfo->id]),\n         'Status' => 'Created', // Example status\n     ]);\n \n     return redirect()->route('view_cv_user', ['id' => $personalInfo->id]);\n"
                },
                {
                    "date": 1733319522082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -331,8 +331,17 @@\n     return view('view_cv_after_creation', compact('personalInfo'));\n }\n \n \n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_user', compact('personalInfo'));\n+}\n+\n+\n public function dashboard()\n {\n     $cvs = CreatorResume::with('personalInfo')->get();\n     return view('dashboard', compact('cvs'));\n"
                },
                {
                    "date": 1733319531498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -331,9 +331,9 @@\n     return view('view_cv_after_creation', compact('personalInfo'));\n }\n \n \n-public function viewCV($id)\n+public function viewCVUser($id)\n {\n     $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n         ->findOrFail($id);\n \n"
                },
                {
                    "date": 1733320940235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -556,9 +556,9 @@\n             ]);\n         }\n     }\n \n-    return redirect()->route('view_cv_after_creation', ['id' => $id])\n+    return redirect()->route('viewCVUser', ['id' => $id])\n         ->with('success', 'CV updated successfully.');\n }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733321190557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -308,9 +308,9 @@\n         'Link' => route('view_cv_user', ['id' => $personalInfo->id]),\n         'Status' => 'Created', // Example status\n     ]);\n \n-    return redirect()->route('view_cv_user', ['id' => $personalInfo->id]);\n+    return redirect()->route('viewCVUser', ['id' => $personalInfo->id]);\n }\n \n \n \n"
                },
                {
                    "date": 1733321778368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -304,9 +304,9 @@\n     $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n     CreatorResume::create([\n         'personal_info_id' => $personalInfo->id,\n         'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n-        'Link' => route('view_cv_user', ['id' => $personalInfo->id]),\n+        'Link' => route('viewCVUser', ['id' => $personalInfo->id]),\n         'Status' => 'Created', // Example status\n     ]);\n \n     return redirect()->route('viewCVUser', ['id' => $personalInfo->id]);\n"
                },
                {
                    "date": 1733321784263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,564 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+use App\\Models\\CreatorResume;\n+use Illuminate\\Support\\Facades\\Session;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+\n+    public function usercreates()\n+    {\n+        return view('create_cv_user'); // Ensure this matches your blade file's location\n+    }\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+{\n+    // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Validation rules\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n+    // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null;\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+    // Save skills\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+\n+    // Save work experiences\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save educations\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save certificates\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n+    CreatorResume::create([\n+        'personal_info_id' => $personalInfo->id,\n+        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n+        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n+        'Status' => 'Created', // Example status\n+    ]);\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+}\n+\n+    \n+//for users create cv\n+public function store_cv_user(Request $request)\n+{\n+    // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Validation rules\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n+    // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null;\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+    // Save skills\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+\n+    // Save work experiences\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save educations\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save certificates\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n+    CreatorResume::create([\n+        'personal_info_id' => $personalInfo->id,\n+        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n+       \n+        'Status' => 'Created', // Example status\n+    ]);\n+\n+    return redirect()->route('viewCVUser', ['id' => $personalInfo->id]);\n+}\n+\n+\n+\n+\n+//other-----------------------------------------------------\n+\n+/**\n+ * Display the created CV.\n+ *\n+ * @param int $id\n+ * @return \\Illuminate\\View\\View\n+ */\n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_after_creation', compact('personalInfo'));\n+}\n+\n+\n+public function viewCVUser($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_user', compact('personalInfo'));\n+}\n+\n+\n+public function dashboard()\n+{\n+    $cvs = CreatorResume::with('personalInfo')->get();\n+    return view('dashboard', compact('cvs'));\n+}\n+public function userdashboard()\n+{\n+    $user = session('user');\n+\n+    if (is_array($user)) {\n+        $user = (object) $user; // Ensure $user is an object\n+    }\n+\n+    if (!isset($user->name)) {\n+        $user->firstname = 'Guest'; // Fallback if name is missing\n+    }\n+\n+    $userId = $user->id;\n+\n+    $cvData = CreatorResume::where('CreatorResume', $userId)->get();\n+\n+    return view('userdashboard', compact('user', 'cvData'));\n+}\n+\n+\n+public function updateStatus(Request $request, $id)\n+{\n+    $cv = CreatorResume::findOrFail($id); // Correct model\n+    $cv->Status = $request->input('status'); // Retrieve the selected status\n+    $cv->save();\n+\n+    return redirect()->back()->with('success', 'Status updated successfully.');\n+}\n+\n+public function edit($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('edit_cv', compact('personalInfo'));\n+}\n+\n+public function update(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $request->input('first_name'),\n+        'last_name' => $request->input('last_name'),\n+        'email' => $request->input('email'),\n+        'phone' => $request->input('phone'),\n+        'address' => $request->input('address'),\n+        'Objective' => $request->input('Objective', null),\n+        'Facebook' => $request->input('Facebook', null),\n+        'BirthDate' => $request->input('BirthDate', null),\n+        'Height' => $request->input('Height'),\n+        'weight' => $request->input('weight'),\n+        'Marital_Status' => $request->input('Marital_Status'),\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if ($request->has('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if ($request->has('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update education\n+    Education::where('personal_info_id', $id)->delete();\n+    if ($request->has('education_school_name')) {\n+        foreach ($request->input('education_school_name') as $index => $schoolName) {\n+            Education::create([\n+                'personal_info_id' => $id,\n+                'school_name' => $schoolName,\n+                'degree' => $request->input(\"education_degree.$index\"),\n+                'start_date' => $request->input(\"education_start_date.$index\"),\n+                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+            ]);\n+        }\n+    }\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if ($request->has('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n+\n+public function assignLink(Request $request, $id)\n+{\n+    $request->validate([\n+        'application_link' => 'required|url',\n+        'link_type' => 'required|string',\n+        'scheduled_date' => 'required|date',\n+    ]);\n+\n+    // Convert scheduled date to 24-hour format if necessary\n+    $cv = CreatorResume::findOrFail($id);\n+    $cv->update([\n+        'application_link' => $request->application_link,\n+        'link_type' => $request->link_type,\n+        'scheduled_date' => \\Carbon\\Carbon::parse($request->scheduled_date)->format('Y-m-d h:i:s A'), // Store in 24-hour format\n+    ]);\n+\n+    return redirect()->back()->with('success', 'Link assigned successfully.');\n+}\n+\n+\n+//for usersystems\n+\n+public function edituser($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('user_edit_cv', compact('personalInfo'));\n+}\n+\n+public function updateuser(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $request->input('first_name'),\n+        'last_name' => $request->input('last_name'),\n+        'email' => $request->input('email'),\n+        'phone' => $request->input('phone'),\n+        'address' => $request->input('address'),\n+        'Objective' => $request->input('Objective', null),\n+        'Facebook' => $request->input('Facebook', null),\n+        'BirthDate' => $request->input('BirthDate', null),\n+        'Height' => $request->input('Height'),\n+        'weight' => $request->input('weight'),\n+        'Marital_Status' => $request->input('Marital_Status'),\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if ($request->has('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if ($request->has('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n+            ]);\n+        }\n+    }\n+\n+ // Update education\n+ Education::where('personal_info_id', $id)->delete();\n+ if ($request->has('education_school_name')) {\n+     foreach ($request->input('education_school_name') as $index => $schoolName) {\n+         Education::create([\n+             'personal_info_id' => $id,\n+             'school_name' => $schoolName,\n+             'degree' => $request->input(\"education_degree.$index\"),\n+             'start_date' => $request->input(\"education_start_date.$index\"),\n+             'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+         ]);\n+     }\n+ }\n+\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if ($request->has('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('viewCVUser', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733321800057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -560,569 +560,5 @@\n     return redirect()->route('viewCVUser', ['id' => $id])\n         ->with('success', 'CV updated successfully.');\n }\n \n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-use App\\Models\\CreatorResume;\n-use Illuminate\\Support\\Facades\\Session;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-\n-    public function usercreates()\n-    {\n-        return view('create_cv_user'); // Ensure this matches your blade file's location\n-    }\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-{\n-    // Validate incoming data\n-    $validatedData = $request->validate([\n-        // Validation rules\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n-    ]);\n-\n-    // Handle the image upload\n-    if ($request->hasFile('image')) {\n-        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        $request->image->move(public_path('uploads/images'), $imageName);\n-        $validatedData['image'] = 'uploads/images/' . $imageName;\n-    } else {\n-        $validatedData['image'] = null;\n-    }\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'image' => $validatedData['image'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'] ?? null,\n-        'weight' => $validatedData['weight'] ?? null,\n-        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-    ]);\n-\n-    // Save skills\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-\n-    // Save work experiences\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save educations\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save certificates\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n-    CreatorResume::create([\n-        'personal_info_id' => $personalInfo->id,\n-        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n-        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n-        'Status' => 'Created', // Example status\n-    ]);\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n-}\n-\n-    \n-//for users create cv\n-public function store_cv_user(Request $request)\n-{\n-    // Validate incoming data\n-    $validatedData = $request->validate([\n-        // Validation rules\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n-    ]);\n-\n-    // Handle the image upload\n-    if ($request->hasFile('image')) {\n-        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        $request->image->move(public_path('uploads/images'), $imageName);\n-        $validatedData['image'] = 'uploads/images/' . $imageName;\n-    } else {\n-        $validatedData['image'] = null;\n-    }\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'image' => $validatedData['image'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'] ?? null,\n-        'weight' => $validatedData['weight'] ?? null,\n-        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-    ]);\n-\n-    // Save skills\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-\n-    // Save work experiences\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save educations\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save certificates\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n-    CreatorResume::create([\n-        'personal_info_id' => $personalInfo->id,\n-        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n-        'Link' => route('viewCVUser', ['id' => $personalInfo->id]),\n-        'Status' => 'Created', // Example status\n-    ]);\n-\n-    return redirect()->route('viewCVUser', ['id' => $personalInfo->id]);\n-}\n-\n-\n-\n-\n-//other-----------------------------------------------------\n-\n-/**\n- * Display the created CV.\n- *\n- * @param int $id\n- * @return \\Illuminate\\View\\View\n- */\n-public function viewCV($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_after_creation', compact('personalInfo'));\n-}\n-\n-\n-public function viewCVUser($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_user', compact('personalInfo'));\n-}\n-\n-\n-public function dashboard()\n-{\n-    $cvs = CreatorResume::with('personalInfo')->get();\n-    return view('dashboard', compact('cvs'));\n-}\n-public function userdashboard()\n-{\n-    $user = session('user');\n-\n-    if (is_array($user)) {\n-        $user = (object) $user; // Ensure $user is an object\n-    }\n-\n-    if (!isset($user->name)) {\n-        $user->firstname = 'Guest'; // Fallback if name is missing\n-    }\n-\n-    $userId = $user->id;\n-\n-    $cvData = CreatorResume::where('CreatorResume', $userId)->get();\n-\n-    return view('userdashboard', compact('user', 'cvData'));\n-}\n-\n-\n-public function updateStatus(Request $request, $id)\n-{\n-    $cv = CreatorResume::findOrFail($id); // Correct model\n-    $cv->Status = $request->input('status'); // Retrieve the selected status\n-    $cv->save();\n-\n-    return redirect()->back()->with('success', 'Status updated successfully.');\n-}\n-\n-public function edit($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('edit_cv', compact('personalInfo'));\n-}\n-\n-public function update(Request $request, $id)\n-{\n-    $personalInfo = PersonalInfo::findOrFail($id);\n-\n-    // Update personal info\n-    $personalInfo->update([\n-        'first_name' => $request->input('first_name'),\n-        'last_name' => $request->input('last_name'),\n-        'email' => $request->input('email'),\n-        'phone' => $request->input('phone'),\n-        'address' => $request->input('address'),\n-        'Objective' => $request->input('Objective', null),\n-        'Facebook' => $request->input('Facebook', null),\n-        'BirthDate' => $request->input('BirthDate', null),\n-        'Height' => $request->input('Height'),\n-        'weight' => $request->input('weight'),\n-        'Marital_Status' => $request->input('Marital_Status'),\n-    ]);\n-\n-    // Update skills\n-    Skill::where('personal_info_id', $id)->delete();\n-    if ($request->has('skills')) {\n-        foreach ($request->input('skills') as $skill) {\n-            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n-        }\n-    }\n-\n-    // Update work experiences\n-    WorkExperience::where('personal_info_id', $id)->delete();\n-    if ($request->has('job_title')) {\n-        foreach ($request->input('job_title') as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $request->input(\"company_name.$index\"),\n-                'location' => $request->input(\"location.$index\"),\n-                'start_date' => $request->input(\"start_date.$index\"),\n-                'end_date' => $request->input(\"end_date.$index\"),\n-                'responsibilities' => $request->input(\"responsibilities.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update education\n-    Education::where('personal_info_id', $id)->delete();\n-    if ($request->has('education_school_name')) {\n-        foreach ($request->input('education_school_name') as $index => $schoolName) {\n-            Education::create([\n-                'personal_info_id' => $id,\n-                'school_name' => $schoolName,\n-                'degree' => $request->input(\"education_degree.$index\"),\n-                'start_date' => $request->input(\"education_start_date.$index\"),\n-                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-            ]);\n-        }\n-    }\n-    // Update certificates\n-    Certificate::where('personal_info_id', $id)->delete();\n-    if ($request->has('certificate_names')) {\n-        foreach ($request->input('certificate_names') as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n-                'issue_date' => $request->input(\"issue_dates.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $id])\n-        ->with('success', 'CV updated successfully.');\n-}\n-\n-\n-public function assignLink(Request $request, $id)\n-{\n-    $request->validate([\n-        'application_link' => 'required|url',\n-        'link_type' => 'required|string',\n-        'scheduled_date' => 'required|date',\n-    ]);\n-\n-    // Convert scheduled date to 24-hour format if necessary\n-    $cv = CreatorResume::findOrFail($id);\n-    $cv->update([\n-        'application_link' => $request->application_link,\n-        'link_type' => $request->link_type,\n-        'scheduled_date' => \\Carbon\\Carbon::parse($request->scheduled_date)->format('Y-m-d h:i:s A'), // Store in 24-hour format\n-    ]);\n-\n-    return redirect()->back()->with('success', 'Link assigned successfully.');\n-}\n-\n-\n-//for usersystems\n-\n-public function edituser($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('user_edit_cv', compact('personalInfo'));\n-}\n-\n-public function updateuser(Request $request, $id)\n-{\n-    $personalInfo = PersonalInfo::findOrFail($id);\n-\n-    // Update personal info\n-    $personalInfo->update([\n-        'first_name' => $request->input('first_name'),\n-        'last_name' => $request->input('last_name'),\n-        'email' => $request->input('email'),\n-        'phone' => $request->input('phone'),\n-        'address' => $request->input('address'),\n-        'Objective' => $request->input('Objective', null),\n-        'Facebook' => $request->input('Facebook', null),\n-        'BirthDate' => $request->input('BirthDate', null),\n-        'Height' => $request->input('Height'),\n-        'weight' => $request->input('weight'),\n-        'Marital_Status' => $request->input('Marital_Status'),\n-    ]);\n-\n-    // Update skills\n-    Skill::where('personal_info_id', $id)->delete();\n-    if ($request->has('skills')) {\n-        foreach ($request->input('skills') as $skill) {\n-            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n-        }\n-    }\n-\n-    // Update work experiences\n-    WorkExperience::where('personal_info_id', $id)->delete();\n-    if ($request->has('job_title')) {\n-        foreach ($request->input('job_title') as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $request->input(\"company_name.$index\"),\n-                'location' => $request->input(\"location.$index\"),\n-                'start_date' => $request->input(\"start_date.$index\"),\n-                'end_date' => $request->input(\"end_date.$index\"),\n-                'responsibilities' => $request->input(\"responsibilities.$index\"),\n-            ]);\n-        }\n-    }\n-\n- // Update education\n- Education::where('personal_info_id', $id)->delete();\n- if ($request->has('education_school_name')) {\n-     foreach ($request->input('education_school_name') as $index => $schoolName) {\n-         Education::create([\n-             'personal_info_id' => $id,\n-             'school_name' => $schoolName,\n-             'degree' => $request->input(\"education_degree.$index\"),\n-             'start_date' => $request->input(\"education_start_date.$index\"),\n-             'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-         ]);\n-     }\n- }\n-\n-    // Update certificates\n-    Certificate::where('personal_info_id', $id)->delete();\n-    if ($request->has('certificate_names')) {\n-        foreach ($request->input('certificate_names') as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n-                'issue_date' => $request->input(\"issue_dates.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('viewCVUser', ['id' => $id])\n-        ->with('success', 'CV updated successfully.');\n-}\n-\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733322471563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,481 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+use App\\Models\\CreatorResume;\n+use Illuminate\\Support\\Facades\\Session;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+\n+    public function usercreates()\n+    {\n+        return view('create_cv_user'); // Ensure this matches your blade file's location\n+    }\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+{\n+    // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Validation rules\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n+    // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null;\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+    // Save skills\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+\n+    // Save work experiences\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save educations\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save certificates\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n+    CreatorResume::create([\n+        'personal_info_id' => $personalInfo->id,\n+        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n+        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n+        'Status' => 'Created', // Example status\n+    ]);\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+}\n+\n+    \n+//for users create cv\n+public function store_cv_user(Request $request)\n+{\n+    // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Validation rules\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+    ]);\n+\n+    // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null;\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n+    CreatorResume::create([\n+        'personal_info_id' => $personalInfo->id,\n+        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n+        'Status' => 'Created', // Example status\n+    ]);\n+\n+    return redirect()->route('viewCVUser', ['id' => $personalInfo->id]);\n+}\n+\n+\n+\n+\n+\n+//other-----------------------------------------------------\n+\n+/**\n+ * Display the created CV.\n+ *\n+ * @param int $id\n+ * @return \\Illuminate\\View\\View\n+ */\n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_after_creation', compact('personalInfo'));\n+}\n+\n+\n+public function viewCVUser($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_user', compact('personalInfo'));\n+}\n+\n+\n+public function dashboard()\n+{\n+    $cvs = CreatorResume::with('personalInfo')->get();\n+    return view('dashboard', compact('cvs'));\n+}\n+public function userdashboard()\n+{\n+    $user = session('user');\n+\n+    if (is_array($user)) {\n+        $user = (object) $user; // Ensure $user is an object\n+    }\n+\n+    if (!isset($user->name)) {\n+        $user->firstname = 'Guest'; // Fallback if name is missing\n+    }\n+\n+    $userId = $user->id;\n+\n+    $cvData = CreatorResume::where('CreatorResume', $userId)->get();\n+\n+    return view('userdashboard', compact('user', 'cvData'));\n+}\n+\n+\n+public function updateStatus(Request $request, $id)\n+{\n+    $cv = CreatorResume::findOrFail($id); // Correct model\n+    $cv->Status = $request->input('status'); // Retrieve the selected status\n+    $cv->save();\n+\n+    return redirect()->back()->with('success', 'Status updated successfully.');\n+}\n+\n+public function edit($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('edit_cv', compact('personalInfo'));\n+}\n+\n+public function update(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $request->input('first_name'),\n+        'last_name' => $request->input('last_name'),\n+        'email' => $request->input('email'),\n+        'phone' => $request->input('phone'),\n+        'address' => $request->input('address'),\n+        'Objective' => $request->input('Objective', null),\n+        'Facebook' => $request->input('Facebook', null),\n+        'BirthDate' => $request->input('BirthDate', null),\n+        'Height' => $request->input('Height'),\n+        'weight' => $request->input('weight'),\n+        'Marital_Status' => $request->input('Marital_Status'),\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if ($request->has('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if ($request->has('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update education\n+    Education::where('personal_info_id', $id)->delete();\n+    if ($request->has('education_school_name')) {\n+        foreach ($request->input('education_school_name') as $index => $schoolName) {\n+            Education::create([\n+                'personal_info_id' => $id,\n+                'school_name' => $schoolName,\n+                'degree' => $request->input(\"education_degree.$index\"),\n+                'start_date' => $request->input(\"education_start_date.$index\"),\n+                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+            ]);\n+        }\n+    }\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if ($request->has('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n+\n+public function assignLink(Request $request, $id)\n+{\n+    $request->validate([\n+        'application_link' => 'required|url',\n+        'link_type' => 'required|string',\n+        'scheduled_date' => 'required|date',\n+    ]);\n+\n+    // Convert scheduled date to 24-hour format if necessary\n+    $cv = CreatorResume::findOrFail($id);\n+    $cv->update([\n+        'application_link' => $request->application_link,\n+        'link_type' => $request->link_type,\n+        'scheduled_date' => \\Carbon\\Carbon::parse($request->scheduled_date)->format('Y-m-d h:i:s A'), // Store in 24-hour format\n+    ]);\n+\n+    return redirect()->back()->with('success', 'Link assigned successfully.');\n+}\n+\n+\n+//for usersystems\n+\n+public function edituser($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('user_edit_cv', compact('personalInfo'));\n+}\n+\n+public function updateuser(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $request->input('first_name'),\n+        'last_name' => $request->input('last_name'),\n+        'email' => $request->input('email'),\n+        'phone' => $request->input('phone'),\n+        'address' => $request->input('address'),\n+        'Objective' => $request->input('Objective', null),\n+        'Facebook' => $request->input('Facebook', null),\n+        'BirthDate' => $request->input('BirthDate', null),\n+        'Height' => $request->input('Height'),\n+        'weight' => $request->input('weight'),\n+        'Marital_Status' => $request->input('Marital_Status'),\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if ($request->has('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if ($request->has('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n+            ]);\n+        }\n+    }\n+\n+ // Update education\n+ Education::where('personal_info_id', $id)->delete();\n+ if ($request->has('education_school_name')) {\n+     foreach ($request->input('education_school_name') as $index => $schoolName) {\n+         Education::create([\n+             'personal_info_id' => $id,\n+             'school_name' => $schoolName,\n+             'degree' => $request->input(\"education_degree.$index\"),\n+             'start_date' => $request->input(\"education_start_date.$index\"),\n+             'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+         ]);\n+     }\n+ }\n+\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if ($request->has('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('viewCVUser', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733322485873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -190,349 +190,8 @@\n         'BirthDate' => 'nullable|date',\n         'Height' => 'required|string|max:255',\n         'weight' => 'required|string|max:255',\n         'Marital_Status' => 'required|string|max:255',\n-    ]);\n-\n-    // Handle the image upload\n-    if ($request->hasFile('image')) {\n-        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        $request->image->move(public_path('uploads/images'), $imageName);\n-        $validatedData['image'] = 'uploads/images/' . $imageName;\n-    } else {\n-        $validatedData['image'] = null;\n-    }\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'image' => $validatedData['image'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'] ?? null,\n-        'weight' => $validatedData['weight'] ?? null,\n-        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-    ]);\n-\n-    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n-    CreatorResume::create([\n-        'personal_info_id' => $personalInfo->id,\n-        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n-        'Status' => 'Created', // Example status\n-    ]);\n-\n-    return redirect()->route('viewCVUser', ['id' => $personalInfo->id]);\n-}\n-\n-\n-\n-\n-\n-//other-----------------------------------------------------\n-\n-/**\n- * Display the created CV.\n- *\n- * @param int $id\n- * @return \\Illuminate\\View\\View\n- */\n-public function viewCV($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_after_creation', compact('personalInfo'));\n-}\n-\n-\n-public function viewCVUser($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_user', compact('personalInfo'));\n-}\n-\n-\n-public function dashboard()\n-{\n-    $cvs = CreatorResume::with('personalInfo')->get();\n-    return view('dashboard', compact('cvs'));\n-}\n-public function userdashboard()\n-{\n-    $user = session('user');\n-\n-    if (is_array($user)) {\n-        $user = (object) $user; // Ensure $user is an object\n-    }\n-\n-    if (!isset($user->name)) {\n-        $user->firstname = 'Guest'; // Fallback if name is missing\n-    }\n-\n-    $userId = $user->id;\n-\n-    $cvData = CreatorResume::where('CreatorResume', $userId)->get();\n-\n-    return view('userdashboard', compact('user', 'cvData'));\n-}\n-\n-\n-public function updateStatus(Request $request, $id)\n-{\n-    $cv = CreatorResume::findOrFail($id); // Correct model\n-    $cv->Status = $request->input('status'); // Retrieve the selected status\n-    $cv->save();\n-\n-    return redirect()->back()->with('success', 'Status updated successfully.');\n-}\n-\n-public function edit($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('edit_cv', compact('personalInfo'));\n-}\n-\n-public function update(Request $request, $id)\n-{\n-    $personalInfo = PersonalInfo::findOrFail($id);\n-\n-    // Update personal info\n-    $personalInfo->update([\n-        'first_name' => $request->input('first_name'),\n-        'last_name' => $request->input('last_name'),\n-        'email' => $request->input('email'),\n-        'phone' => $request->input('phone'),\n-        'address' => $request->input('address'),\n-        'Objective' => $request->input('Objective', null),\n-        'Facebook' => $request->input('Facebook', null),\n-        'BirthDate' => $request->input('BirthDate', null),\n-        'Height' => $request->input('Height'),\n-        'weight' => $request->input('weight'),\n-        'Marital_Status' => $request->input('Marital_Status'),\n-    ]);\n-\n-    // Update skills\n-    Skill::where('personal_info_id', $id)->delete();\n-    if ($request->has('skills')) {\n-        foreach ($request->input('skills') as $skill) {\n-            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n-        }\n-    }\n-\n-    // Update work experiences\n-    WorkExperience::where('personal_info_id', $id)->delete();\n-    if ($request->has('job_title')) {\n-        foreach ($request->input('job_title') as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $request->input(\"company_name.$index\"),\n-                'location' => $request->input(\"location.$index\"),\n-                'start_date' => $request->input(\"start_date.$index\"),\n-                'end_date' => $request->input(\"end_date.$index\"),\n-                'responsibilities' => $request->input(\"responsibilities.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update education\n-    Education::where('personal_info_id', $id)->delete();\n-    if ($request->has('education_school_name')) {\n-        foreach ($request->input('education_school_name') as $index => $schoolName) {\n-            Education::create([\n-                'personal_info_id' => $id,\n-                'school_name' => $schoolName,\n-                'degree' => $request->input(\"education_degree.$index\"),\n-                'start_date' => $request->input(\"education_start_date.$index\"),\n-                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-            ]);\n-        }\n-    }\n-    // Update certificates\n-    Certificate::where('personal_info_id', $id)->delete();\n-    if ($request->has('certificate_names')) {\n-        foreach ($request->input('certificate_names') as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n-                'issue_date' => $request->input(\"issue_dates.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $id])\n-        ->with('success', 'CV updated successfully.');\n-}\n-\n-\n-public function assignLink(Request $request, $id)\n-{\n-    $request->validate([\n-        'application_link' => 'required|url',\n-        'link_type' => 'required|string',\n-        'scheduled_date' => 'required|date',\n-    ]);\n-\n-    // Convert scheduled date to 24-hour format if necessary\n-    $cv = CreatorResume::findOrFail($id);\n-    $cv->update([\n-        'application_link' => $request->application_link,\n-        'link_type' => $request->link_type,\n-        'scheduled_date' => \\Carbon\\Carbon::parse($request->scheduled_date)->format('Y-m-d h:i:s A'), // Store in 24-hour format\n-    ]);\n-\n-    return redirect()->back()->with('success', 'Link assigned successfully.');\n-}\n-\n-\n-//for usersystems\n-\n-public function edituser($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('user_edit_cv', compact('personalInfo'));\n-}\n-\n-public function updateuser(Request $request, $id)\n-{\n-    $personalInfo = PersonalInfo::findOrFail($id);\n-\n-    // Update personal info\n-    $personalInfo->update([\n-        'first_name' => $request->input('first_name'),\n-        'last_name' => $request->input('last_name'),\n-        'email' => $request->input('email'),\n-        'phone' => $request->input('phone'),\n-        'address' => $request->input('address'),\n-        'Objective' => $request->input('Objective', null),\n-        'Facebook' => $request->input('Facebook', null),\n-        'BirthDate' => $request->input('BirthDate', null),\n-        'Height' => $request->input('Height'),\n-        'weight' => $request->input('weight'),\n-        'Marital_Status' => $request->input('Marital_Status'),\n-    ]);\n-\n-    // Update skills\n-    Skill::where('personal_info_id', $id)->delete();\n-    if ($request->has('skills')) {\n-        foreach ($request->input('skills') as $skill) {\n-            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n-        }\n-    }\n-\n-    // Update work experiences\n-    WorkExperience::where('personal_info_id', $id)->delete();\n-    if ($request->has('job_title')) {\n-        foreach ($request->input('job_title') as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $request->input(\"company_name.$index\"),\n-                'location' => $request->input(\"location.$index\"),\n-                'start_date' => $request->input(\"start_date.$index\"),\n-                'end_date' => $request->input(\"end_date.$index\"),\n-                'responsibilities' => $request->input(\"responsibilities.$index\"),\n-            ]);\n-        }\n-    }\n-\n- // Update education\n- Education::where('personal_info_id', $id)->delete();\n- if ($request->has('education_school_name')) {\n-     foreach ($request->input('education_school_name') as $index => $schoolName) {\n-         Education::create([\n-             'personal_info_id' => $id,\n-             'school_name' => $schoolName,\n-             'degree' => $request->input(\"education_degree.$index\"),\n-             'start_date' => $request->input(\"education_start_date.$index\"),\n-             'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-         ]);\n-     }\n- }\n-\n-    // Update certificates\n-    Certificate::where('personal_info_id', $id)->delete();\n-    if ($request->has('certificate_names')) {\n-        foreach ($request->input('certificate_names') as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n-                'issue_date' => $request->input(\"issue_dates.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('viewCVUser', ['id' => $id])\n-        ->with('success', 'CV updated successfully.');\n-}\n-\n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-use App\\Models\\CreatorResume;\n-use Illuminate\\Support\\Facades\\Session;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-\n-    public function usercreates()\n-    {\n-        return view('create_cv_user'); // Ensure this matches your blade file's location\n-    }\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-{\n-    // Validate incoming data\n-    $validatedData = $request->validate([\n-        // Validation rules\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n         'skills' => 'nullable|array',\n         'skills.*' => 'string|max:255',\n         'job_title' => 'nullable|array',\n         'job_title.*' => 'string|max:255',\n@@ -645,148 +304,8 @@\n     $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n     CreatorResume::create([\n         'personal_info_id' => $personalInfo->id,\n         'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n-        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n-        'Status' => 'Created', // Example status\n-    ]);\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n-}\n-\n-    \n-//for users create cv\n-public function store_cv_user(Request $request)\n-{\n-    // Validate incoming data\n-    $validatedData = $request->validate([\n-        // Validation rules\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n-    ]);\n-\n-    // Handle the image upload\n-    if ($request->hasFile('image')) {\n-        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        $request->image->move(public_path('uploads/images'), $imageName);\n-        $validatedData['image'] = 'uploads/images/' . $imageName;\n-    } else {\n-        $validatedData['image'] = null;\n-    }\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'image' => $validatedData['image'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'] ?? null,\n-        'weight' => $validatedData['weight'] ?? null,\n-        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-    ]);\n-\n-    // Save skills\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-\n-    // Save work experiences\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save educations\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save certificates\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n-    CreatorResume::create([\n-        'personal_info_id' => $personalInfo->id,\n-        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n        \n         'Status' => 'Created', // Example status\n     ]);\n \n"
                },
                {
                    "date": 1733322897965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,14 +172,13 @@\n     return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n }\n \n     \n-//for users create cv\n+// For users create CV\n public function store_cv_user(Request $request)\n {\n-    // Validate incoming data\n+    // Validate only the required fields\n     $validatedData = $request->validate([\n-        // Validation rules\n         'first_name' => 'required|string|max:255',\n         'last_name' => 'required|string|max:255',\n         'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n         'email' => 'required|email|max:255',\n@@ -190,40 +189,8 @@\n         'BirthDate' => 'nullable|date',\n         'Height' => 'required|string|max:255',\n         'weight' => 'required|string|max:255',\n         'Marital_Status' => 'required|string|max:255',\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n     ]);\n \n     // Handle the image upload\n     if ($request->hasFile('image')) {\n@@ -249,73 +216,72 @@\n         'weight' => $validatedData['weight'] ?? null,\n         'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n     ]);\n \n-    // Save skills\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n+    // Save skills if provided\n+    if ($request->filled('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n             Skill::create([\n                 'personal_info_id' => $personalInfo->id,\n                 'name' => $skill,\n             ]);\n         }\n     }\n \n-    // Save work experiences\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+    // Save work experiences if provided\n+    if ($request->filled('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n             WorkExperience::create([\n                 'personal_info_id' => $personalInfo->id,\n                 'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n             ]);\n         }\n     }\n \n-    // Save educations\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n+    // Save educations if provided\n+    if ($request->filled('education_name')) {\n+        foreach ($request->input('education_name') as $index => $educationName) {\n             Education::create([\n                 'personal_info_id' => $personalInfo->id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+                'degree' => $request->input(\"education_degree.$index\"),\n+                'school_name' => $request->input(\"education_school_name.$index\"),\n+                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                'start_date' => $request->input(\"education_start_date.$index\"),\n+                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n             ]);\n         }\n     }\n \n-    // Save certificates\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+    // Save certificates if provided\n+    if ($request->filled('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n             Certificate::create([\n                 'personal_info_id' => $personalInfo->id,\n                 'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n             ]);\n         }\n     }\n \n+    // Link resume to creator\n     $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n     CreatorResume::create([\n         'personal_info_id' => $personalInfo->id,\n         'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n-       \n         'Status' => 'Created', // Example status\n     ]);\n \n     return redirect()->route('viewCVUser', ['id' => $personalInfo->id]);\n }\n \n \n \n-\n //other-----------------------------------------------------\n \n /**\n  * Display the created CV.\n"
                },
                {
                    "date": 1733396574012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -392,20 +392,22 @@\n         }\n     }\n \n     // Update education\n-    Education::where('personal_info_id', $id)->delete();\n-    if ($request->has('education_school_name')) {\n-        foreach ($request->input('education_school_name') as $index => $schoolName) {\n-            Education::create([\n-                'personal_info_id' => $id,\n-                'school_name' => $schoolName,\n-                'degree' => $request->input(\"education_degree.$index\"),\n-                'start_date' => $request->input(\"education_start_date.$index\"),\n-                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-            ]);\n-        }\n+Education::where('personal_info_id', $id)->delete();\n+\n+if ($request->has('education_school_name')) {\n+    foreach ($request->input('education_school_name') as $index => $schoolName) {\n+        Education::create([\n+            'personal_info_id' => $id,\n+            'school_name' => $schoolName,\n+            'degree' => $request->input(\"education_degree.$index\"),\n+            'Educlevel' => $request->input(\"education_Educlevel.$index\"), // Handle Educlevel\n+            'start_date' => $request->input(\"education_start_date.$index\"),\n+            'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+        ]);\n     }\n+}\n     // Update certificates\n     Certificate::where('personal_info_id', $id)->delete();\n     if ($request->has('certificate_names')) {\n         foreach ($request->input('certificate_names') as $index => $certificateName) {\n"
                },
                {
                    "date": 1733396645681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,532 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\PersonalInfo;\n+use App\\Models\\Skill;\n+use App\\Models\\WorkExperience;\n+use App\\Models\\Education;\n+use App\\Models\\Certificate;\n+use Illuminate\\Http\\Request;\n+use App\\Models\\CreatorResume;\n+use Illuminate\\Support\\Facades\\Session;\n+\n+class CVController extends Controller\n+{\n+    /**\n+     * Show the CV creation form.\n+     *\n+     * @return \\Illuminate\\View\\View\n+     */\n+    public function creates()\n+    {\n+        return view('create_cv'); // Ensure this matches your blade file's location\n+    }\n+\n+\n+    public function usercreates()\n+    {\n+        return view('create_cv_user'); // Ensure this matches your blade file's location\n+    }\n+    /**\n+     * Store the CV data submitted from the form.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\RedirectResponse\n+     */\n+    public function store(Request $request)\n+{\n+    // Validate incoming data\n+    $validatedData = $request->validate([\n+        // Validation rules\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+        'skills' => 'nullable|array',\n+        'skills.*' => 'string|max:255',\n+        'job_title' => 'nullable|array',\n+        'job_title.*' => 'string|max:255',\n+        'company_name' => 'nullable|array',\n+        'company_name.*' => 'string|max:255',\n+        'location' => 'nullable|array',\n+        'location.*' => 'string|max:255',\n+        'start_date' => 'nullable|array',\n+        'start_date.*' => 'date',\n+        'end_date' => 'nullable|array',\n+        'end_date.*' => 'nullable|date',\n+        'responsibilities' => 'nullable|array',\n+        'responsibilities.*' => 'string',\n+        'education_name' => 'nullable|array',\n+        'education_name.*' => 'string|max:255',\n+        'education_degree' => 'nullable|array',\n+        'education_degree.*' => 'string|max:255',\n+        'education_school_name' => 'nullable|array',\n+        'education_school_name.*' => 'string|max:255',\n+        'education_Educlevel' => 'nullable|array',\n+        'education_Educlevel.*' => 'string|max:255',\n+        'education_start_date' => 'nullable|array',\n+        'education_start_date.*' => 'date',\n+        'education_graduation_date' => 'nullable|array',\n+        'education_graduation_date.*' => 'nullable|date',\n+        'certificate_names' => 'nullable|array',\n+        'certificate_names.*' => 'string|max:255',\n+        'issuing_organizations' => 'nullable|array',\n+        'issuing_organizations.*' => 'string|max:255',\n+        'issue_dates' => 'nullable|array',\n+        'issue_dates.*' => 'date',\n+    ]);\n+\n+    // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null;\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+    // Save skills\n+    if (!empty($validatedData['skills'])) {\n+        foreach ($validatedData['skills'] as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+\n+    // Save work experiences\n+    if (!empty($validatedData['job_title'])) {\n+        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $validatedData['company_name'][$index] ?? null,\n+                'location' => $validatedData['location'][$index] ?? null,\n+                'start_date' => $validatedData['start_date'][$index] ?? null,\n+                'end_date' => $validatedData['end_date'][$index] ?? null,\n+                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save educations\n+    if (!empty($validatedData['education_name'])) {\n+        foreach ($validatedData['education_name'] as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $validatedData['education_degree'][$index] ?? null,\n+                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n+                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n+                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n+                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    // Save certificates\n+    if (!empty($validatedData['certificate_names'])) {\n+        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n+                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n+            ]);\n+        }\n+    }\n+\n+    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n+    CreatorResume::create([\n+        'personal_info_id' => $personalInfo->id,\n+        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n+        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n+        'Status' => 'Created', // Example status\n+    ]);\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n+}\n+\n+    \n+// For users create CV\n+public function store_cv_user(Request $request)\n+{\n+    // Validate only the required fields\n+    $validatedData = $request->validate([\n+        'first_name' => 'required|string|max:255',\n+        'last_name' => 'required|string|max:255',\n+        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n+        'email' => 'required|email|max:255',\n+        'phone' => 'required|string|max:15',\n+        'address' => 'required|string|max:500',\n+        'Objective' => 'nullable|string|max:255',\n+        'Facebook' => 'nullable|string|url|max:255',\n+        'BirthDate' => 'nullable|date',\n+        'Height' => 'required|string|max:255',\n+        'weight' => 'required|string|max:255',\n+        'Marital_Status' => 'required|string|max:255',\n+    ]);\n+\n+    // Handle the image upload\n+    if ($request->hasFile('image')) {\n+        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n+        $request->image->move(public_path('uploads/images'), $imageName);\n+        $validatedData['image'] = 'uploads/images/' . $imageName;\n+    } else {\n+        $validatedData['image'] = null;\n+    }\n+\n+    // Save personal info\n+    $personalInfo = PersonalInfo::create([\n+        'first_name' => $validatedData['first_name'],\n+        'last_name' => $validatedData['last_name'],\n+        'image' => $validatedData['image'],\n+        'email' => $validatedData['email'],\n+        'phone' => $validatedData['phone'],\n+        'address' => $validatedData['address'],\n+        'Objective' => $validatedData['Objective'] ?? null,\n+        'Facebook' => $validatedData['Facebook'] ?? null,\n+        'BirthDate' => $validatedData['BirthDate'] ?? null,\n+        'Height' => $validatedData['Height'] ?? null,\n+        'weight' => $validatedData['weight'] ?? null,\n+        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n+    ]);\n+\n+    // Save skills if provided\n+    if ($request->filled('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n+            Skill::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $skill,\n+            ]);\n+        }\n+    }\n+\n+    // Save work experiences if provided\n+    if ($request->filled('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Save educations if provided\n+    if ($request->filled('education_name')) {\n+        foreach ($request->input('education_name') as $index => $educationName) {\n+            Education::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'degree' => $request->input(\"education_degree.$index\"),\n+                'school_name' => $request->input(\"education_school_name.$index\"),\n+                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n+                'start_date' => $request->input(\"education_start_date.$index\"),\n+                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Save certificates if provided\n+    if ($request->filled('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $personalInfo->id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Link resume to creator\n+    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n+    CreatorResume::create([\n+        'personal_info_id' => $personalInfo->id,\n+        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n+        'Status' => 'Created', // Example status\n+    ]);\n+\n+    return redirect()->route('viewCVUser', ['id' => $personalInfo->id]);\n+}\n+\n+\n+\n+//other-----------------------------------------------------\n+\n+/**\n+ * Display the created CV.\n+ *\n+ * @param int $id\n+ * @return \\Illuminate\\View\\View\n+ */\n+public function viewCV($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_after_creation', compact('personalInfo'));\n+}\n+\n+\n+public function viewCVUser($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('view_cv_user', compact('personalInfo'));\n+}\n+\n+\n+public function dashboard()\n+{\n+    $cvs = CreatorResume::with('personalInfo')->get();\n+    return view('dashboard', compact('cvs'));\n+}\n+public function userdashboard()\n+{\n+    $user = session('user');\n+\n+    if (is_array($user)) {\n+        $user = (object) $user; // Ensure $user is an object\n+    }\n+\n+    if (!isset($user->name)) {\n+        $user->firstname = 'Guest'; // Fallback if name is missing\n+    }\n+\n+    $userId = $user->id;\n+\n+    $cvData = CreatorResume::where('CreatorResume', $userId)->get();\n+\n+    return view('userdashboard', compact('user', 'cvData'));\n+}\n+\n+\n+public function updateStatus(Request $request, $id)\n+{\n+    $cv = CreatorResume::findOrFail($id); // Correct model\n+    $cv->Status = $request->input('status'); // Retrieve the selected status\n+    $cv->save();\n+\n+    return redirect()->back()->with('success', 'Status updated successfully.');\n+}\n+\n+public function edit($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('edit_cv', compact('personalInfo'));\n+}\n+\n+public function update(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $request->input('first_name'),\n+        'last_name' => $request->input('last_name'),\n+        'email' => $request->input('email'),\n+        'phone' => $request->input('phone'),\n+        'address' => $request->input('address'),\n+        'Objective' => $request->input('Objective', null),\n+        'Facebook' => $request->input('Facebook', null),\n+        'BirthDate' => $request->input('BirthDate', null),\n+        'Height' => $request->input('Height'),\n+        'weight' => $request->input('weight'),\n+        'Marital_Status' => $request->input('Marital_Status'),\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if ($request->has('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if ($request->has('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    // Update education\n+Education::where('personal_info_id', $id)->delete();\n+\n+if ($request->has('education_school_name')) {\n+    foreach ($request->input('education_school_name') as $index => $schoolName) {\n+        Education::create([\n+            'personal_info_id' => $id,\n+            'school_name' => $schoolName,\n+            'degree' => $request->input(\"education_degree.$index\"),\n+            'Educlevel' => $request->input(\"education_Educlevel.$index\"), // Handle Educlevel\n+            'start_date' => $request->input(\"education_start_date.$index\"),\n+            'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+        ]);\n+    }\n+}\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if ($request->has('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('view_cv_after_creation', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n+\n+public function assignLink(Request $request, $id)\n+{\n+    $request->validate([\n+        'application_link' => 'required|url',\n+        'link_type' => 'required|string',\n+        'scheduled_date' => 'required|date',\n+    ]);\n+\n+    // Convert scheduled date to 24-hour format if necessary\n+    $cv = CreatorResume::findOrFail($id);\n+    $cv->update([\n+        'application_link' => $request->application_link,\n+        'link_type' => $request->link_type,\n+        'scheduled_date' => \\Carbon\\Carbon::parse($request->scheduled_date)->format('Y-m-d h:i:s A'), // Store in 24-hour format\n+    ]);\n+\n+    return redirect()->back()->with('success', 'Link assigned successfully.');\n+}\n+\n+\n+//for usersystems\n+\n+public function edituser($id)\n+{\n+    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n+        ->findOrFail($id);\n+\n+    return view('user_edit_cv', compact('personalInfo'));\n+}\n+\n+public function updateuser(Request $request, $id)\n+{\n+    $personalInfo = PersonalInfo::findOrFail($id);\n+\n+    // Update personal info\n+    $personalInfo->update([\n+        'first_name' => $request->input('first_name'),\n+        'last_name' => $request->input('last_name'),\n+        'email' => $request->input('email'),\n+        'phone' => $request->input('phone'),\n+        'address' => $request->input('address'),\n+        'Objective' => $request->input('Objective', null),\n+        'Facebook' => $request->input('Facebook', null),\n+        'BirthDate' => $request->input('BirthDate', null),\n+        'Height' => $request->input('Height'),\n+        'weight' => $request->input('weight'),\n+        'Marital_Status' => $request->input('Marital_Status'),\n+    ]);\n+\n+    // Update skills\n+    Skill::where('personal_info_id', $id)->delete();\n+    if ($request->has('skills')) {\n+        foreach ($request->input('skills') as $skill) {\n+            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n+        }\n+    }\n+\n+    // Update work experiences\n+    WorkExperience::where('personal_info_id', $id)->delete();\n+    if ($request->has('job_title')) {\n+        foreach ($request->input('job_title') as $index => $jobTitle) {\n+            WorkExperience::create([\n+                'personal_info_id' => $id,\n+                'job_title' => $jobTitle,\n+                'company_name' => $request->input(\"company_name.$index\"),\n+                'location' => $request->input(\"location.$index\"),\n+                'start_date' => $request->input(\"start_date.$index\"),\n+                'end_date' => $request->input(\"end_date.$index\"),\n+                'responsibilities' => $request->input(\"responsibilities.$index\"),\n+            ]);\n+        }\n+    }\n+\n+ // Update education\n+ Education::where('personal_info_id', $id)->delete();\n+ if ($request->has('education_school_name')) {\n+     foreach ($request->input('education_school_name') as $index => $schoolName) {\n+         Education::create([\n+             'personal_info_id' => $id,\n+             'school_name' => $schoolName,\n+             'degree' => $request->input(\"education_degree.$index\"),\n+             'start_date' => $request->input(\"education_start_date.$index\"),\n+             'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n+         ]);\n+     }\n+ }\n+\n+    // Update certificates\n+    Certificate::where('personal_info_id', $id)->delete();\n+    if ($request->has('certificate_names')) {\n+        foreach ($request->input('certificate_names') as $index => $certificateName) {\n+            Certificate::create([\n+                'personal_info_id' => $id,\n+                'name' => $certificateName,\n+                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n+                'issue_date' => $request->input(\"issue_dates.$index\"),\n+            ]);\n+        }\n+    }\n+\n+    return redirect()->route('viewCVUser', ['id' => $id])\n+        ->with('success', 'CV updated successfully.');\n+}\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733397370946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -498,434 +498,8 @@\n         }\n     }\n \n  // Update education\n- Education::where('personal_info_id', $id)->delete();\n- if ($request->has('education_school_name')) {\n-     foreach ($request->input('education_school_name') as $index => $schoolName) {\n-         Education::create([\n-             'personal_info_id' => $id,\n-             'school_name' => $schoolName,\n-             'degree' => $request->input(\"education_degree.$index\"),\n-             'start_date' => $request->input(\"education_start_date.$index\"),\n-             'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-         ]);\n-     }\n- }\n-\n-    // Update certificates\n-    Certificate::where('personal_info_id', $id)->delete();\n-    if ($request->has('certificate_names')) {\n-        foreach ($request->input('certificate_names') as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n-                'issue_date' => $request->input(\"issue_dates.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    return redirect()->route('viewCVUser', ['id' => $id])\n-        ->with('success', 'CV updated successfully.');\n-}\n-\n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\PersonalInfo;\n-use App\\Models\\Skill;\n-use App\\Models\\WorkExperience;\n-use App\\Models\\Education;\n-use App\\Models\\Certificate;\n-use Illuminate\\Http\\Request;\n-use App\\Models\\CreatorResume;\n-use Illuminate\\Support\\Facades\\Session;\n-\n-class CVController extends Controller\n-{\n-    /**\n-     * Show the CV creation form.\n-     *\n-     * @return \\Illuminate\\View\\View\n-     */\n-    public function creates()\n-    {\n-        return view('create_cv'); // Ensure this matches your blade file's location\n-    }\n-\n-\n-    public function usercreates()\n-    {\n-        return view('create_cv_user'); // Ensure this matches your blade file's location\n-    }\n-    /**\n-     * Store the CV data submitted from the form.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\RedirectResponse\n-     */\n-    public function store(Request $request)\n-{\n-    // Validate incoming data\n-    $validatedData = $request->validate([\n-        // Validation rules\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-        'skills' => 'nullable|array',\n-        'skills.*' => 'string|max:255',\n-        'job_title' => 'nullable|array',\n-        'job_title.*' => 'string|max:255',\n-        'company_name' => 'nullable|array',\n-        'company_name.*' => 'string|max:255',\n-        'location' => 'nullable|array',\n-        'location.*' => 'string|max:255',\n-        'start_date' => 'nullable|array',\n-        'start_date.*' => 'date',\n-        'end_date' => 'nullable|array',\n-        'end_date.*' => 'nullable|date',\n-        'responsibilities' => 'nullable|array',\n-        'responsibilities.*' => 'string',\n-        'education_name' => 'nullable|array',\n-        'education_name.*' => 'string|max:255',\n-        'education_degree' => 'nullable|array',\n-        'education_degree.*' => 'string|max:255',\n-        'education_school_name' => 'nullable|array',\n-        'education_school_name.*' => 'string|max:255',\n-        'education_Educlevel' => 'nullable|array',\n-        'education_Educlevel.*' => 'string|max:255',\n-        'education_start_date' => 'nullable|array',\n-        'education_start_date.*' => 'date',\n-        'education_graduation_date' => 'nullable|array',\n-        'education_graduation_date.*' => 'nullable|date',\n-        'certificate_names' => 'nullable|array',\n-        'certificate_names.*' => 'string|max:255',\n-        'issuing_organizations' => 'nullable|array',\n-        'issuing_organizations.*' => 'string|max:255',\n-        'issue_dates' => 'nullable|array',\n-        'issue_dates.*' => 'date',\n-    ]);\n-\n-    // Handle the image upload\n-    if ($request->hasFile('image')) {\n-        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        $request->image->move(public_path('uploads/images'), $imageName);\n-        $validatedData['image'] = 'uploads/images/' . $imageName;\n-    } else {\n-        $validatedData['image'] = null;\n-    }\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'image' => $validatedData['image'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'] ?? null,\n-        'weight' => $validatedData['weight'] ?? null,\n-        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-    ]);\n-\n-    // Save skills\n-    if (!empty($validatedData['skills'])) {\n-        foreach ($validatedData['skills'] as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-\n-    // Save work experiences\n-    if (!empty($validatedData['job_title'])) {\n-        foreach ($validatedData['job_title'] as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $validatedData['company_name'][$index] ?? null,\n-                'location' => $validatedData['location'][$index] ?? null,\n-                'start_date' => $validatedData['start_date'][$index] ?? null,\n-                'end_date' => $validatedData['end_date'][$index] ?? null,\n-                'responsibilities' => $validatedData['responsibilities'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save educations\n-    if (!empty($validatedData['education_name'])) {\n-        foreach ($validatedData['education_name'] as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'degree' => $validatedData['education_degree'][$index] ?? null,\n-                'school_name' => $validatedData['education_school_name'][$index] ?? null,\n-                'Educlevel' => $validatedData['education_Educlevel'][$index] ?? null,\n-                'start_date' => $validatedData['education_start_date'][$index] ?? null,\n-                'graduation_date' => $validatedData['education_graduation_date'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    // Save certificates\n-    if (!empty($validatedData['certificate_names'])) {\n-        foreach ($validatedData['certificate_names'] as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $validatedData['issuing_organizations'][$index] ?? null,\n-                'issue_date' => $validatedData['issue_dates'][$index] ?? null,\n-            ]);\n-        }\n-    }\n-\n-    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n-    CreatorResume::create([\n-        'personal_info_id' => $personalInfo->id,\n-        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n-        'Link' => route('view_cv_after_creation', ['id' => $personalInfo->id]),\n-        'Status' => 'Created', // Example status\n-    ]);\n-\n-    return redirect()->route('view_cv_after_creation', ['id' => $personalInfo->id]);\n-}\n-\n-    \n-// For users create CV\n-public function store_cv_user(Request $request)\n-{\n-    // Validate only the required fields\n-    $validatedData = $request->validate([\n-        'first_name' => 'required|string|max:255',\n-        'last_name' => 'required|string|max:255',\n-        'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',\n-        'email' => 'required|email|max:255',\n-        'phone' => 'required|string|max:15',\n-        'address' => 'required|string|max:500',\n-        'Objective' => 'nullable|string|max:255',\n-        'Facebook' => 'nullable|string|url|max:255',\n-        'BirthDate' => 'nullable|date',\n-        'Height' => 'required|string|max:255',\n-        'weight' => 'required|string|max:255',\n-        'Marital_Status' => 'required|string|max:255',\n-    ]);\n-\n-    // Handle the image upload\n-    if ($request->hasFile('image')) {\n-        $imageName = time() . '.' . $request->image->getClientOriginalExtension();\n-        $request->image->move(public_path('uploads/images'), $imageName);\n-        $validatedData['image'] = 'uploads/images/' . $imageName;\n-    } else {\n-        $validatedData['image'] = null;\n-    }\n-\n-    // Save personal info\n-    $personalInfo = PersonalInfo::create([\n-        'first_name' => $validatedData['first_name'],\n-        'last_name' => $validatedData['last_name'],\n-        'image' => $validatedData['image'],\n-        'email' => $validatedData['email'],\n-        'phone' => $validatedData['phone'],\n-        'address' => $validatedData['address'],\n-        'Objective' => $validatedData['Objective'] ?? null,\n-        'Facebook' => $validatedData['Facebook'] ?? null,\n-        'BirthDate' => $validatedData['BirthDate'] ?? null,\n-        'Height' => $validatedData['Height'] ?? null,\n-        'weight' => $validatedData['weight'] ?? null,\n-        'Marital_Status' => $validatedData['Marital_Status'] ?? null,\n-    ]);\n-\n-    // Save skills if provided\n-    if ($request->filled('skills')) {\n-        foreach ($request->input('skills') as $skill) {\n-            Skill::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $skill,\n-            ]);\n-        }\n-    }\n-\n-    // Save work experiences if provided\n-    if ($request->filled('job_title')) {\n-        foreach ($request->input('job_title') as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $request->input(\"company_name.$index\"),\n-                'location' => $request->input(\"location.$index\"),\n-                'start_date' => $request->input(\"start_date.$index\"),\n-                'end_date' => $request->input(\"end_date.$index\"),\n-                'responsibilities' => $request->input(\"responsibilities.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Save educations if provided\n-    if ($request->filled('education_name')) {\n-        foreach ($request->input('education_name') as $index => $educationName) {\n-            Education::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'degree' => $request->input(\"education_degree.$index\"),\n-                'school_name' => $request->input(\"education_school_name.$index\"),\n-                'Educlevel' => $request->input(\"education_Educlevel.$index\"),\n-                'start_date' => $request->input(\"education_start_date.$index\"),\n-                'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Save certificates if provided\n-    if ($request->filled('certificate_names')) {\n-        foreach ($request->input('certificate_names') as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $personalInfo->id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n-                'issue_date' => $request->input(\"issue_dates.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Link resume to creator\n-    $userId = Session::get('user.id'); // Retrieve the logged-in user ID\n-    CreatorResume::create([\n-        'personal_info_id' => $personalInfo->id,\n-        'CreatorResume' => $userId, // Ensure `user_id` column exists in CreatorResume table\n-        'Status' => 'Created', // Example status\n-    ]);\n-\n-    return redirect()->route('viewCVUser', ['id' => $personalInfo->id]);\n-}\n-\n-\n-\n-//other-----------------------------------------------------\n-\n-/**\n- * Display the created CV.\n- *\n- * @param int $id\n- * @return \\Illuminate\\View\\View\n- */\n-public function viewCV($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_after_creation', compact('personalInfo'));\n-}\n-\n-\n-public function viewCVUser($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('view_cv_user', compact('personalInfo'));\n-}\n-\n-\n-public function dashboard()\n-{\n-    $cvs = CreatorResume::with('personalInfo')->get();\n-    return view('dashboard', compact('cvs'));\n-}\n-public function userdashboard()\n-{\n-    $user = session('user');\n-\n-    if (is_array($user)) {\n-        $user = (object) $user; // Ensure $user is an object\n-    }\n-\n-    if (!isset($user->name)) {\n-        $user->firstname = 'Guest'; // Fallback if name is missing\n-    }\n-\n-    $userId = $user->id;\n-\n-    $cvData = CreatorResume::where('CreatorResume', $userId)->get();\n-\n-    return view('userdashboard', compact('user', 'cvData'));\n-}\n-\n-\n-public function updateStatus(Request $request, $id)\n-{\n-    $cv = CreatorResume::findOrFail($id); // Correct model\n-    $cv->Status = $request->input('status'); // Retrieve the selected status\n-    $cv->save();\n-\n-    return redirect()->back()->with('success', 'Status updated successfully.');\n-}\n-\n-public function edit($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('edit_cv', compact('personalInfo'));\n-}\n-\n-public function update(Request $request, $id)\n-{\n-    $personalInfo = PersonalInfo::findOrFail($id);\n-\n-    // Update personal info\n-    $personalInfo->update([\n-        'first_name' => $request->input('first_name'),\n-        'last_name' => $request->input('last_name'),\n-        'email' => $request->input('email'),\n-        'phone' => $request->input('phone'),\n-        'address' => $request->input('address'),\n-        'Objective' => $request->input('Objective', null),\n-        'Facebook' => $request->input('Facebook', null),\n-        'BirthDate' => $request->input('BirthDate', null),\n-        'Height' => $request->input('Height'),\n-        'weight' => $request->input('weight'),\n-        'Marital_Status' => $request->input('Marital_Status'),\n-    ]);\n-\n-    // Update skills\n-    Skill::where('personal_info_id', $id)->delete();\n-    if ($request->has('skills')) {\n-        foreach ($request->input('skills') as $skill) {\n-            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n-        }\n-    }\n-\n-    // Update work experiences\n-    WorkExperience::where('personal_info_id', $id)->delete();\n-    if ($request->has('job_title')) {\n-        foreach ($request->input('job_title') as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $request->input(\"company_name.$index\"),\n-                'location' => $request->input(\"location.$index\"),\n-                'start_date' => $request->input(\"start_date.$index\"),\n-                'end_date' => $request->input(\"end_date.$index\"),\n-                'responsibilities' => $request->input(\"responsibilities.$index\"),\n-            ]);\n-        }\n-    }\n-\n-    // Update education\n Education::where('personal_info_id', $id)->delete();\n \n if ($request->has('education_school_name')) {\n     foreach ($request->input('education_school_name') as $index => $schoolName) {\n@@ -938,113 +512,9 @@\n             'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n         ]);\n     }\n }\n-    // Update certificates\n-    Certificate::where('personal_info_id', $id)->delete();\n-    if ($request->has('certificate_names')) {\n-        foreach ($request->input('certificate_names') as $index => $certificateName) {\n-            Certificate::create([\n-                'personal_info_id' => $id,\n-                'name' => $certificateName,\n-                'issuing_organization' => $request->input(\"issuing_organizations.$index\"),\n-                'issue_date' => $request->input(\"issue_dates.$index\"),\n-            ]);\n-        }\n-    }\n \n-    return redirect()->route('view_cv_after_creation', ['id' => $id])\n-        ->with('success', 'CV updated successfully.');\n-}\n-\n-\n-public function assignLink(Request $request, $id)\n-{\n-    $request->validate([\n-        'application_link' => 'required|url',\n-        'link_type' => 'required|string',\n-        'scheduled_date' => 'required|date',\n-    ]);\n-\n-    // Convert scheduled date to 24-hour format if necessary\n-    $cv = CreatorResume::findOrFail($id);\n-    $cv->update([\n-        'application_link' => $request->application_link,\n-        'link_type' => $request->link_type,\n-        'scheduled_date' => \\Carbon\\Carbon::parse($request->scheduled_date)->format('Y-m-d h:i:s A'), // Store in 24-hour format\n-    ]);\n-\n-    return redirect()->back()->with('success', 'Link assigned successfully.');\n-}\n-\n-\n-//for usersystems\n-\n-public function edituser($id)\n-{\n-    $personalInfo = PersonalInfo::with(['skills', 'workExperiences', 'educations', 'certificates'])\n-        ->findOrFail($id);\n-\n-    return view('user_edit_cv', compact('personalInfo'));\n-}\n-\n-public function updateuser(Request $request, $id)\n-{\n-    $personalInfo = PersonalInfo::findOrFail($id);\n-\n-    // Update personal info\n-    $personalInfo->update([\n-        'first_name' => $request->input('first_name'),\n-        'last_name' => $request->input('last_name'),\n-        'email' => $request->input('email'),\n-        'phone' => $request->input('phone'),\n-        'address' => $request->input('address'),\n-        'Objective' => $request->input('Objective', null),\n-        'Facebook' => $request->input('Facebook', null),\n-        'BirthDate' => $request->input('BirthDate', null),\n-        'Height' => $request->input('Height'),\n-        'weight' => $request->input('weight'),\n-        'Marital_Status' => $request->input('Marital_Status'),\n-    ]);\n-\n-    // Update skills\n-    Skill::where('personal_info_id', $id)->delete();\n-    if ($request->has('skills')) {\n-        foreach ($request->input('skills') as $skill) {\n-            Skill::create(['personal_info_id' => $id, 'name' => $skill]);\n-        }\n-    }\n-\n-    // Update work experiences\n-    WorkExperience::where('personal_info_id', $id)->delete();\n-    if ($request->has('job_title')) {\n-        foreach ($request->input('job_title') as $index => $jobTitle) {\n-            WorkExperience::create([\n-                'personal_info_id' => $id,\n-                'job_title' => $jobTitle,\n-                'company_name' => $request->input(\"company_name.$index\"),\n-                'location' => $request->input(\"location.$index\"),\n-                'start_date' => $request->input(\"start_date.$index\"),\n-                'end_date' => $request->input(\"end_date.$index\"),\n-                'responsibilities' => $request->input(\"responsibilities.$index\"),\n-            ]);\n-        }\n-    }\n-\n- // Update education\n- Education::where('personal_info_id', $id)->delete();\n- if ($request->has('education_school_name')) {\n-     foreach ($request->input('education_school_name') as $index => $schoolName) {\n-         Education::create([\n-             'personal_info_id' => $id,\n-             'school_name' => $schoolName,\n-             'degree' => $request->input(\"education_degree.$index\"),\n-             'start_date' => $request->input(\"education_start_date.$index\"),\n-             'graduation_date' => $request->input(\"education_graduation_date.$index\"),\n-         ]);\n-     }\n- }\n-\n     // Update certificates\n     Certificate::where('personal_info_id', $id)->delete();\n     if ($request->has('certificate_names')) {\n         foreach ($request->input('certificate_names') as $index => $certificateName) {\n"
                }
            ],
            "date": 1732903631162,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\PersonalInfo;\nuse App\\Models\\Skill;\nuse App\\Models\\WorkExperience;\nuse App\\Models\\Education;\nuse App\\Models\\Certificate;\nuse Illuminate\\Http\\Request;\n\nclass CVController extends Controller\n{\n    /**\n     * Show the CV creation form.\n     *\n     * @return \\Illuminate\\View\\View\n     */\n    public function create()\n    {\n        return view('create_cv'); // Ensure this matches your blade file's location\n    }\n\n    /**\n     * Store the CV data submitted from the form.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\RedirectResponse\n     */\n    public function store(Request $request)\n    {\n        // Validate incoming data\n        $validatedData = $request->validate([\n            'first_name' => 'required|string|max:255',\n            'last_name' => 'required|string|max:255',\n            'email' => 'required|email|max:255',\n            'phone' => 'required|string|max:15',\n            'linkedin_url' => 'nullable|url',\n            'address' => 'required|string|max:500',\n\n            // Skills\n            'skills' => 'nullable|array',\n            'skills.*' => 'string|max:255',\n\n            // Work Experience\n            'job_title' => 'nullable|array',\n            'job_title.*' => 'string|max:255',\n            'company_name' => 'nullable|array',\n            'company_name.*' => 'string|max:255',\n            'location' => 'nullable|array',\n            'location.*' => 'string|max:255',\n            'start_date' => 'nullable|array',\n            'start_date.*' => 'date',\n            'end_date' => 'nullable|array',\n            'end_date.*' => 'nullable|date',\n            'responsibilities' => 'nullable|array',\n            'responsibilities.*' => 'string',\n\n            // Education\n            'degree' => 'nullable|array',\n            'degree.*' => 'string|max:255',\n            'school_name' => 'nullable|array',\n            'school_name.*' => 'string|max:255',\n            'field_of_study' => 'nullable|array',\n            'field_of_study.*' => 'nullable|string|max:255',\n            'edu_start_date' => 'nullable|array',\n            'edu_start_date.*' => 'date',\n            'graduation_date' => 'nullable|array',\n            'graduation_date.*' => 'nullable|date',\n\n            // Certificates\n            'certificate_name' => 'nullable|array',\n            'certificate_name.*' => 'string|max:255',\n            'issuing_organization' => 'nullable|array',\n            'issuing_organization.*' => 'string|max:255',\n            'issue_date' => 'nullable|array',\n            'issue_date.*' => 'date',\n        ]);\n\n        // Save personal info\n        $personalInfo = PersonalInfo::create([\n            'first_name' => $validatedData['first_name'],\n            'last_name' => $validatedData['last_name'],\n            'email' => $validatedData['email'],\n            'phone' => $validatedData['phone'],\n            'linkedin_url' => $validatedData['linkedin_url'] ?? null,\n            'address' => $validatedData['address'],\n        ]);\n\n        // Save skills\n        if (!empty($validatedData['skills'])) {\n            foreach ($validatedData['skills'] as $skill) {\n                Skill::create([\n                    'personal_info_id' => $personalInfo->id,\n                    'name' => $skill,\n                ]);\n            }\n        }\n\n        // Save work experiences\n        if (!empty($validatedData['job_title'])) {\n            foreach ($validatedData['job_title'] as $index => $jobTitle) {\n                WorkExperience::create([\n                    'personal_info_id' => $personalInfo->id,\n                    'job_title' => $jobTitle,\n                    'company_name' => $validatedData['company_name'][$index],\n                    'location' => $validatedData['location'][$index],\n                    'start_date' => $validatedData['start_date'][$index],\n                    'end_date' => $validatedData['end_date'][$index] ?? null,\n                    'responsibilities' => $validatedData['responsibilities'][$index],\n                ]);\n            }\n        }\n\n        // Save education\n        if (!empty($validatedData['degree'])) {\n            foreach ($validatedData['degree'] as $index => $degree) {\n                Education::create([\n                    'personal_info_id' => $personalInfo->id,\n                    'degree' => $degree,\n                    'school_name' => $validatedData['school_name'][$index],\n                    'field_of_study' => $validatedData['field_of_study'][$index] ?? null,\n                    'start_date' => $validatedData['edu_start_date'][$index],\n                    'graduation_date' => $validatedData['graduation_date'][$index] ?? null,\n                ]);\n            }\n        }\n\n        // Save certificates\n        if (!empty($validatedData['certificate_name'])) {\n            foreach ($validatedData['certificate_name'] as $index => $certificateName) {\n                Certificate::create([\n                    'personal_info_id' => $personalInfo->id,\n                    'name' => $certificateName,\n                    'issuing_organization' => $validatedData['issuing_organization'][$index],\n                    'issue_date' => $validatedData['issue_date'][$index],\n                ]);\n            }\n        }\n\n        // Redirect back with success message\n        return redirect()->route('user.dashboard')->with('success', 'CV Created Successfully!');\n    }\n}\n"
        }
    ]
}